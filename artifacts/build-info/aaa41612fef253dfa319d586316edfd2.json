{
	"id": "aaa41612fef253dfa319d586316edfd2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Transaction.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/Uniswap/v4-periphery/src/V4Router.sol\";\n\n/** \n    1、 什麼是重入攻擊? 如何預防?\n    重入攻擊（Reentrancy Attack）：重入攻擊發生在一個外部呼叫（External Call）在完成前，回調到原合約，造成惡意使用者重複提款或其他非預期的行為。\n    預防方法：在執行任何操作之前，先檢查所有前提條件。更新合約的內部狀態變數必須在任何外部呼叫之前完成。\n\n    2、 三種 send Ether 的方式具體差異為何?\n    transfer()：如果發送失敗會自動還原（revert）整個交易。\n    send()：如果發送失敗，不會自動還原交易，而是返回 false，所以需要自行檢查返回值來處理發送失敗的情況。\n    call()：如果呼叫失敗，不會自動還原交易，只會將 success 設定為 false，因此必須自行檢查 success 的返回值。\n*/ \n\n// 3、 實作 Uniswap 交易 ETH / USDC（測試網版本）\ncontract Transaction {\n\n    IERC20 public USDC;\n\n    // Sepolia addresses\n    address public constant UNISWAP_POOLMANAGER_SEPOLIA = 0xC532a74256D3Db42D0Bf7a0400fEFDbad7694008;\n    address public constant USDC_ADDRESS_SEPOLIA = 0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238;\n\n    address public USDC_ADDRESS;\n    \n    // Contract owner\n    address public owner;\n\n    // Events\n    event ContractDeployed (address owner, IERC20 USDC_ADDRESS);\n    \n    constructor() {\n        owner = msg.sender;\n        \n        USDC_ADDRESS = USDC_ADDRESS_SEPOLIA;\n        USDC = IERC20(USDC_ADDRESS);\n        \n        emit ContractDeployed(owner, USDC);\n    }\n\n    modifier onlyOwner() {\n        require (msg.sender == owner, \"Only owner can do this.\");\n        _;\n    }\n\n    function executeSwap (uint16 balanceOfETH) public view onlyOwner returns (uint16 gainOfUSDC, uint256) {\n        // require (USDC.balanceOf(address(this)) >= balanceOfETH, \"Insufficient ETH.\");\n\n        gainOfUSDC = balanceOfETH * 3039;\n\n        return (gainOfUSDC, USDC.balanceOf(address(this)));\n    }\n}"
			},
			"https://github.com/Uniswap/v4-periphery/src/V4Router.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\n\nimport {IPoolManager} from \"@uniswap/v4-core/src/interfaces/IPoolManager.sol\";\nimport {BalanceDelta} from \"@uniswap/v4-core/src/types/BalanceDelta.sol\";\nimport {PoolKey} from \"@uniswap/v4-core/src/types/PoolKey.sol\";\nimport {Currency} from \"@uniswap/v4-core/src/types/Currency.sol\";\nimport {TickMath} from \"@uniswap/v4-core/src/libraries/TickMath.sol\";\nimport {SafeCast} from \"@uniswap/v4-core/src/libraries/SafeCast.sol\";\n\nimport {PathKey} from \"./libraries/PathKey.sol\";\nimport {CalldataDecoder} from \"./libraries/CalldataDecoder.sol\";\nimport {IV4Router} from \"./interfaces/IV4Router.sol\";\nimport {BaseActionsRouter} from \"./base/BaseActionsRouter.sol\";\nimport {DeltaResolver} from \"./base/DeltaResolver.sol\";\nimport {Actions} from \"./libraries/Actions.sol\";\nimport {ActionConstants} from \"./libraries/ActionConstants.sol\";\nimport {BipsLibrary} from \"./libraries/BipsLibrary.sol\";\nimport {SwapParams} from \"@uniswap/v4-core/src/types/PoolOperation.sol\";\n\n/// @title UniswapV4Router\n/// @notice Abstract contract that contains all internal logic needed for routing through Uniswap v4 pools\n/// @dev the entry point to executing actions in this contract is calling `BaseActionsRouter._executeActions`\n/// An inheriting contract should call _executeActions at the point that they wish actions to be executed\nabstract contract V4Router is IV4Router, BaseActionsRouter, DeltaResolver {\n    using SafeCast for *;\n    using CalldataDecoder for bytes;\n    using BipsLibrary for uint256;\n\n    constructor(IPoolManager _poolManager) BaseActionsRouter(_poolManager) {}\n\n    function _handleAction(uint256 action, bytes calldata params) internal override {\n        // swap actions and payment actions in different blocks for gas efficiency\n        if (action < Actions.SETTLE) {\n            if (action == Actions.SWAP_EXACT_IN) {\n                IV4Router.ExactInputParams calldata swapParams = params.decodeSwapExactInParams();\n                _swapExactInput(swapParams);\n                return;\n            } else if (action == Actions.SWAP_EXACT_IN_SINGLE) {\n                IV4Router.ExactInputSingleParams calldata swapParams = params.decodeSwapExactInSingleParams();\n                _swapExactInputSingle(swapParams);\n                return;\n            } else if (action == Actions.SWAP_EXACT_OUT) {\n                IV4Router.ExactOutputParams calldata swapParams = params.decodeSwapExactOutParams();\n                _swapExactOutput(swapParams);\n                return;\n            } else if (action == Actions.SWAP_EXACT_OUT_SINGLE) {\n                IV4Router.ExactOutputSingleParams calldata swapParams = params.decodeSwapExactOutSingleParams();\n                _swapExactOutputSingle(swapParams);\n                return;\n            }\n        } else {\n            if (action == Actions.SETTLE_ALL) {\n                (Currency currency, uint256 maxAmount) = params.decodeCurrencyAndUint256();\n                uint256 amount = _getFullDebt(currency);\n                if (amount > maxAmount) revert V4TooMuchRequested(maxAmount, amount);\n                _settle(currency, msgSender(), amount);\n                return;\n            } else if (action == Actions.TAKE_ALL) {\n                (Currency currency, uint256 minAmount) = params.decodeCurrencyAndUint256();\n                uint256 amount = _getFullCredit(currency);\n                if (amount < minAmount) revert V4TooLittleReceived(minAmount, amount);\n                _take(currency, msgSender(), amount);\n                return;\n            } else if (action == Actions.SETTLE) {\n                (Currency currency, uint256 amount, bool payerIsUser) = params.decodeCurrencyUint256AndBool();\n                _settle(currency, _mapPayer(payerIsUser), _mapSettleAmount(amount, currency));\n                return;\n            } else if (action == Actions.TAKE) {\n                (Currency currency, address recipient, uint256 amount) = params.decodeCurrencyAddressAndUint256();\n                _take(currency, _mapRecipient(recipient), _mapTakeAmount(amount, currency));\n                return;\n            } else if (action == Actions.TAKE_PORTION) {\n                (Currency currency, address recipient, uint256 bips) = params.decodeCurrencyAddressAndUint256();\n                _take(currency, _mapRecipient(recipient), _getFullCredit(currency).calculatePortion(bips));\n                return;\n            }\n        }\n        revert UnsupportedAction(action);\n    }\n\n    function _swapExactInputSingle(IV4Router.ExactInputSingleParams calldata params) private {\n        uint128 amountIn = params.amountIn;\n        if (amountIn == ActionConstants.OPEN_DELTA) {\n            amountIn =\n                _getFullCredit(params.zeroForOne ? params.poolKey.currency0 : params.poolKey.currency1).toUint128();\n        }\n        uint128 amountOut =\n            _swap(params.poolKey, params.zeroForOne, -int256(uint256(amountIn)), params.hookData).toUint128();\n        if (amountOut < params.amountOutMinimum) revert V4TooLittleReceived(params.amountOutMinimum, amountOut);\n    }\n\n    function _swapExactInput(IV4Router.ExactInputParams calldata params) private {\n        unchecked {\n            // Caching for gas savings\n            uint256 pathLength = params.path.length;\n            uint128 amountOut;\n            Currency currencyIn = params.currencyIn;\n            uint128 amountIn = params.amountIn;\n            if (amountIn == ActionConstants.OPEN_DELTA) amountIn = _getFullCredit(currencyIn).toUint128();\n            PathKey calldata pathKey;\n\n            for (uint256 i = 0; i < pathLength; i++) {\n                pathKey = params.path[i];\n                (PoolKey memory poolKey, bool zeroForOne) = pathKey.getPoolAndSwapDirection(currencyIn);\n                // The output delta will always be positive, except for when interacting with certain hook pools\n                amountOut = _swap(poolKey, zeroForOne, -int256(uint256(amountIn)), pathKey.hookData).toUint128();\n\n                amountIn = amountOut;\n                currencyIn = pathKey.intermediateCurrency;\n            }\n\n            if (amountOut < params.amountOutMinimum) revert V4TooLittleReceived(params.amountOutMinimum, amountOut);\n        }\n    }\n\n    function _swapExactOutputSingle(IV4Router.ExactOutputSingleParams calldata params) private {\n        uint128 amountOut = params.amountOut;\n        if (amountOut == ActionConstants.OPEN_DELTA) {\n            amountOut =\n                _getFullDebt(params.zeroForOne ? params.poolKey.currency1 : params.poolKey.currency0).toUint128();\n        }\n        uint128 amountIn = (\n            uint256(-int256(_swap(params.poolKey, params.zeroForOne, int256(uint256(amountOut)), params.hookData)))\n        ).toUint128();\n        if (amountIn > params.amountInMaximum) revert V4TooMuchRequested(params.amountInMaximum, amountIn);\n    }\n\n    function _swapExactOutput(IV4Router.ExactOutputParams calldata params) private {\n        unchecked {\n            // Caching for gas savings\n            uint256 pathLength = params.path.length;\n            uint128 amountIn;\n            uint128 amountOut = params.amountOut;\n            Currency currencyOut = params.currencyOut;\n            PathKey calldata pathKey;\n\n            if (amountOut == ActionConstants.OPEN_DELTA) {\n                amountOut = _getFullDebt(currencyOut).toUint128();\n            }\n\n            for (uint256 i = pathLength; i > 0; i--) {\n                pathKey = params.path[i - 1];\n                (PoolKey memory poolKey, bool oneForZero) = pathKey.getPoolAndSwapDirection(currencyOut);\n                // The output delta will always be negative, except for when interacting with certain hook pools\n                amountIn = (uint256(-int256(_swap(poolKey, !oneForZero, int256(uint256(amountOut)), pathKey.hookData))))\n                    .toUint128();\n\n                amountOut = amountIn;\n                currencyOut = pathKey.intermediateCurrency;\n            }\n            if (amountIn > params.amountInMaximum) revert V4TooMuchRequested(params.amountInMaximum, amountIn);\n        }\n    }\n\n    function _swap(PoolKey memory poolKey, bool zeroForOne, int256 amountSpecified, bytes calldata hookData)\n        private\n        returns (int128 reciprocalAmount)\n    {\n        // for protection of exactOut swaps, sqrtPriceLimit is not exposed as a feature in this contract\n        unchecked {\n            BalanceDelta delta = poolManager.swap(\n                poolKey,\n                SwapParams(\n                    zeroForOne, amountSpecified, zeroForOne ? TickMath.MIN_SQRT_PRICE + 1 : TickMath.MAX_SQRT_PRICE - 1\n                ),\n                hookData\n            );\n\n            reciprocalAmount = (zeroForOne == amountSpecified < 0) ? delta.amount1() : delta.amount0();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v4-core/src/types/PoolOperation.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {PoolKey} from \"../types/PoolKey.sol\";\nimport {BalanceDelta} from \"../types/BalanceDelta.sol\";\n\n/// @notice Parameter struct for `ModifyLiquidity` pool operations\nstruct ModifyLiquidityParams {\n    // the lower and upper tick of the position\n    int24 tickLower;\n    int24 tickUpper;\n    // how to modify the liquidity\n    int256 liquidityDelta;\n    // a value to set if you want unique liquidity positions at the same range\n    bytes32 salt;\n}\n\n/// @notice Parameter struct for `Swap` pool operations\nstruct SwapParams {\n    /// Whether to swap token0 for token1 or vice versa\n    bool zeroForOne;\n    /// The desired input amount if negative (exactIn), or the desired output amount if positive (exactOut)\n    int256 amountSpecified;\n    /// The sqrt price at which, if reached, the swap will stop executing\n    uint160 sqrtPriceLimitX96;\n}\n"
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @title For calculating a percentage of an amount, using bips\nlibrary BipsLibrary {\n    uint256 internal constant BPS_DENOMINATOR = 10_000;\n\n    /// @notice emitted when an invalid percentage is provided\n    error InvalidBips();\n\n    /// @param amount The total amount to calculate a percentage of\n    /// @param bips The percentage to calculate, in bips\n    function calculatePortion(uint256 amount, uint256 bips) internal pure returns (uint256) {\n        if (bips > BPS_DENOMINATOR) revert InvalidBips();\n        return (amount * bips) / BPS_DENOMINATOR;\n    }\n}\n"
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @title Action Constants\n/// @notice Common constants used in actions\n/// @dev Constants are gas efficient alternatives to their literal values\nlibrary ActionConstants {\n    /// @notice used to signal that an action should use the input value of the open delta on the pool manager\n    /// or of the balance that the contract holds\n    uint128 internal constant OPEN_DELTA = 0;\n    /// @notice used to signal that an action should use the contract's entire balance of a currency\n    /// This value is equivalent to 1<<255, i.e. a singular 1 in the most significant bit.\n    uint256 internal constant CONTRACT_BALANCE = 0x8000000000000000000000000000000000000000000000000000000000000000;\n\n    /// @notice used to signal that the recipient of an action should be the msgSender\n    address internal constant MSG_SENDER = address(1);\n\n    /// @notice used to signal that the recipient of an action should be the address(this)\n    address internal constant ADDRESS_THIS = address(2);\n}\n"
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice Library to define different pool actions.\n/// @dev These are suggested common commands, however additional commands should be defined as required\n/// Some of these actions are not supported in the Router contracts or Position Manager contracts, but are left as they may be helpful commands for other peripheral contracts.\nlibrary Actions {\n    // pool actions\n    // liquidity actions\n    uint256 internal constant INCREASE_LIQUIDITY = 0x00;\n    uint256 internal constant DECREASE_LIQUIDITY = 0x01;\n    uint256 internal constant MINT_POSITION = 0x02;\n    uint256 internal constant BURN_POSITION = 0x03;\n    uint256 internal constant INCREASE_LIQUIDITY_FROM_DELTAS = 0x04;\n    uint256 internal constant MINT_POSITION_FROM_DELTAS = 0x05;\n\n    // swapping\n    uint256 internal constant SWAP_EXACT_IN_SINGLE = 0x06;\n    uint256 internal constant SWAP_EXACT_IN = 0x07;\n    uint256 internal constant SWAP_EXACT_OUT_SINGLE = 0x08;\n    uint256 internal constant SWAP_EXACT_OUT = 0x09;\n\n    // donate\n    // note this is not supported in the position manager or router\n    uint256 internal constant DONATE = 0x0a;\n\n    // closing deltas on the pool manager\n    // settling\n    uint256 internal constant SETTLE = 0x0b;\n    uint256 internal constant SETTLE_ALL = 0x0c;\n    uint256 internal constant SETTLE_PAIR = 0x0d;\n    // taking\n    uint256 internal constant TAKE = 0x0e;\n    uint256 internal constant TAKE_ALL = 0x0f;\n    uint256 internal constant TAKE_PORTION = 0x10;\n    uint256 internal constant TAKE_PAIR = 0x11;\n\n    uint256 internal constant CLOSE_CURRENCY = 0x12;\n    uint256 internal constant CLEAR_OR_TAKE = 0x13;\n    uint256 internal constant SWEEP = 0x14;\n\n    uint256 internal constant WRAP = 0x15;\n    uint256 internal constant UNWRAP = 0x16;\n\n    // minting/burning 6909s to close deltas\n    // note this is not supported in the position manager or router\n    uint256 internal constant MINT_6909 = 0x17;\n    uint256 internal constant BURN_6909 = 0x18;\n}\n"
			},
			"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {Currency} from \"@uniswap/v4-core/src/types/Currency.sol\";\nimport {TransientStateLibrary} from \"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol\";\nimport {IPoolManager} from \"@uniswap/v4-core/src/interfaces/IPoolManager.sol\";\nimport {ImmutableState} from \"./ImmutableState.sol\";\nimport {ActionConstants} from \"../libraries/ActionConstants.sol\";\n\n/// @notice Abstract contract used to sync, send, and settle funds to the pool manager\n/// @dev Note that sync() is called before any erc-20 transfer in `settle`.\nabstract contract DeltaResolver is ImmutableState {\n    using TransientStateLibrary for IPoolManager;\n\n    /// @notice Emitted trying to settle a positive delta.\n    error DeltaNotPositive(Currency currency);\n    /// @notice Emitted trying to take a negative delta.\n    error DeltaNotNegative(Currency currency);\n    /// @notice Emitted when the contract does not have enough balance to wrap or unwrap.\n    error InsufficientBalance();\n\n    /// @notice Take an amount of currency out of the PoolManager\n    /// @param currency Currency to take\n    /// @param recipient Address to receive the currency\n    /// @param amount Amount to take\n    /// @dev Returns early if the amount is 0\n    function _take(Currency currency, address recipient, uint256 amount) internal {\n        if (amount == 0) return;\n        poolManager.take(currency, recipient, amount);\n    }\n\n    /// @notice Pay and settle a currency to the PoolManager\n    /// @dev The implementing contract must ensure that the `payer` is a secure address\n    /// @param currency Currency to settle\n    /// @param payer Address of the payer\n    /// @param amount Amount to send\n    /// @dev Returns early if the amount is 0\n    function _settle(Currency currency, address payer, uint256 amount) internal {\n        if (amount == 0) return;\n\n        poolManager.sync(currency);\n        if (currency.isAddressZero()) {\n            poolManager.settle{value: amount}();\n        } else {\n            _pay(currency, payer, amount);\n            poolManager.settle();\n        }\n    }\n\n    /// @notice Abstract function for contracts to implement paying tokens to the poolManager\n    /// @dev The recipient of the payment should be the poolManager\n    /// @param token The token to settle. This is known not to be the native currency\n    /// @param payer The address who should pay tokens\n    /// @param amount The number of tokens to send\n    function _pay(Currency token, address payer, uint256 amount) internal virtual;\n\n    /// @notice Obtain the full amount owed by this contract (negative delta)\n    /// @param currency Currency to get the delta for\n    /// @return amount The amount owed by this contract as a uint256\n    function _getFullDebt(Currency currency) internal view returns (uint256 amount) {\n        int256 _amount = poolManager.currencyDelta(address(this), currency);\n        // If the amount is positive, it should be taken not settled.\n        if (_amount > 0) revert DeltaNotNegative(currency);\n        // Casting is safe due to limits on the total supply of a pool\n        amount = uint256(-_amount);\n    }\n\n    /// @notice Obtain the full credit owed to this contract (positive delta)\n    /// @param currency Currency to get the delta for\n    /// @return amount The amount owed to this contract as a uint256\n    function _getFullCredit(Currency currency) internal view returns (uint256 amount) {\n        int256 _amount = poolManager.currencyDelta(address(this), currency);\n        // If the amount is negative, it should be settled not taken.\n        if (_amount < 0) revert DeltaNotPositive(currency);\n        amount = uint256(_amount);\n    }\n\n    /// @notice Calculates the amount for a settle action\n    function _mapSettleAmount(uint256 amount, Currency currency) internal view returns (uint256) {\n        if (amount == ActionConstants.CONTRACT_BALANCE) {\n            return currency.balanceOfSelf();\n        } else if (amount == ActionConstants.OPEN_DELTA) {\n            return _getFullDebt(currency);\n        } else {\n            return amount;\n        }\n    }\n\n    /// @notice Calculates the amount for a take action\n    function _mapTakeAmount(uint256 amount, Currency currency) internal view returns (uint256) {\n        if (amount == ActionConstants.OPEN_DELTA) {\n            return _getFullCredit(currency);\n        } else {\n            return amount;\n        }\n    }\n\n    /// @notice Calculates the sanitized amount before wrapping/unwrapping.\n    /// @param inputCurrency The currency, either native or wrapped native, that this contract holds\n    /// @param amount The amount to wrap or unwrap. Can be CONTRACT_BALANCE, OPEN_DELTA or a specific amount\n    /// @param outputCurrency The currency after the wrap/unwrap that the user may owe a balance in on the poolManager\n    function _mapWrapUnwrapAmount(Currency inputCurrency, uint256 amount, Currency outputCurrency)\n        internal\n        view\n        returns (uint256)\n    {\n        // if wrapping, the balance in this contract is in ETH\n        // if unwrapping, the balance in this contract is in WETH\n        uint256 balance = inputCurrency.balanceOf(address(this));\n        if (amount == ActionConstants.CONTRACT_BALANCE) {\n            // return early to avoid unnecessary balance check\n            return balance;\n        }\n        if (amount == ActionConstants.OPEN_DELTA) {\n            // if wrapping, the open currency on the PoolManager is WETH.\n            // if unwrapping, the open currency on the PoolManager is ETH.\n            // note that we use the DEBT amount. Positive deltas can be taken and then wrapped.\n            amount = _getFullDebt(outputCurrency);\n        }\n        if (amount > balance) revert InsufficientBalance();\n        return amount;\n    }\n}\n"
			},
			"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IPoolManager} from \"@uniswap/v4-core/src/interfaces/IPoolManager.sol\";\nimport {SafeCallback} from \"./SafeCallback.sol\";\nimport {CalldataDecoder} from \"../libraries/CalldataDecoder.sol\";\nimport {ActionConstants} from \"../libraries/ActionConstants.sol\";\nimport {IMsgSender} from \"../interfaces/IMsgSender.sol\";\n\n/// @notice Abstract contract for performing a combination of actions on Uniswap v4.\n/// @dev Suggested uint256 action values are defined in Actions.sol, however any definition can be used\nabstract contract BaseActionsRouter is IMsgSender, SafeCallback {\n    using CalldataDecoder for bytes;\n\n    /// @notice emitted when different numbers of parameters and actions are provided\n    error InputLengthMismatch();\n\n    /// @notice emitted when an inheriting contract does not support an action\n    error UnsupportedAction(uint256 action);\n\n    constructor(IPoolManager _poolManager) SafeCallback(_poolManager) {}\n\n    /// @notice internal function that triggers the execution of a set of actions on v4\n    /// @dev inheriting contracts should call this function to trigger execution\n    function _executeActions(bytes calldata unlockData) internal {\n        poolManager.unlock(unlockData);\n    }\n\n    /// @notice function that is called by the PoolManager through the SafeCallback.unlockCallback\n    /// @param data Abi encoding of (bytes actions, bytes[] params)\n    /// where params[i] is the encoded parameters for actions[i]\n    function _unlockCallback(bytes calldata data) internal override returns (bytes memory) {\n        // abi.decode(data, (bytes, bytes[]));\n        (bytes calldata actions, bytes[] calldata params) = data.decodeActionsRouterParams();\n        _executeActionsWithoutUnlock(actions, params);\n        return \"\";\n    }\n\n    function _executeActionsWithoutUnlock(bytes calldata actions, bytes[] calldata params) internal {\n        uint256 numActions = actions.length;\n        if (numActions != params.length) revert InputLengthMismatch();\n\n        for (uint256 actionIndex = 0; actionIndex < numActions; actionIndex++) {\n            uint256 action = uint8(actions[actionIndex]);\n\n            _handleAction(action, params[actionIndex]);\n        }\n    }\n\n    /// @notice function to handle the parsing and execution of an action and its parameters\n    function _handleAction(uint256 action, bytes calldata params) internal virtual;\n\n    /// @notice function that returns address considered executor of the actions\n    /// @dev The other context functions, _msgData and _msgValue, are not supported by this contract\n    /// In many contracts this will be the address that calls the initial entry point that calls `_executeActions`\n    /// `msg.sender` shouldn't be used, as this will be the v4 pool manager contract that calls `unlockCallback`\n    /// If using ReentrancyLock.sol, this function can return _getLocker()\n    function msgSender() public view virtual returns (address);\n\n    /// @notice Calculates the address for a action\n    function _mapRecipient(address recipient) internal view returns (address) {\n        if (recipient == ActionConstants.MSG_SENDER) {\n            return msgSender();\n        } else if (recipient == ActionConstants.ADDRESS_THIS) {\n            return address(this);\n        } else {\n            return recipient;\n        }\n    }\n\n    /// @notice Calculates the payer for an action\n    function _mapPayer(bool payerIsUser) internal view returns (address) {\n        return payerIsUser ? msgSender() : address(this);\n    }\n}\n"
			},
			"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {PoolKey} from \"@uniswap/v4-core/src/types/PoolKey.sol\";\nimport {Currency} from \"@uniswap/v4-core/src/types/Currency.sol\";\nimport {PathKey} from \"../libraries/PathKey.sol\";\nimport {IImmutableState} from \"./IImmutableState.sol\";\n\n/// @title IV4Router\n/// @notice Interface for the V4Router contract\ninterface IV4Router is IImmutableState {\n    /// @notice Emitted when an exactInput swap does not receive its minAmountOut\n    error V4TooLittleReceived(uint256 minAmountOutReceived, uint256 amountReceived);\n    /// @notice Emitted when an exactOutput is asked for more than its maxAmountIn\n    error V4TooMuchRequested(uint256 maxAmountInRequested, uint256 amountRequested);\n\n    /// @notice Parameters for a single-hop exact-input swap\n    struct ExactInputSingleParams {\n        PoolKey poolKey;\n        bool zeroForOne;\n        uint128 amountIn;\n        uint128 amountOutMinimum;\n        bytes hookData;\n    }\n\n    /// @notice Parameters for a multi-hop exact-input swap\n    struct ExactInputParams {\n        Currency currencyIn;\n        PathKey[] path;\n        uint128 amountIn;\n        uint128 amountOutMinimum;\n    }\n\n    /// @notice Parameters for a single-hop exact-output swap\n    struct ExactOutputSingleParams {\n        PoolKey poolKey;\n        bool zeroForOne;\n        uint128 amountOut;\n        uint128 amountInMaximum;\n        bytes hookData;\n    }\n\n    /// @notice Parameters for a multi-hop exact-output swap\n    struct ExactOutputParams {\n        Currency currencyOut;\n        PathKey[] path;\n        uint128 amountOut;\n        uint128 amountInMaximum;\n    }\n}\n"
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Currency} from \"@uniswap/v4-core/src/types/Currency.sol\";\nimport {IV4Router} from \"../interfaces/IV4Router.sol\";\nimport {PoolKey} from \"@uniswap/v4-core/src/types/PoolKey.sol\";\n\n/// @title Library for abi decoding in calldata\nlibrary CalldataDecoder {\n    using CalldataDecoder for bytes;\n\n    error SliceOutOfBounds();\n\n    /// @notice mask used for offsets and lengths to ensure no overflow\n    /// @dev no sane abi encoding will pass in an offset or length greater than type(uint32).max\n    ///      (note that this does deviate from standard solidity behavior and offsets/lengths will\n    ///      be interpreted as mod type(uint32).max which will only impact malicious/buggy callers)\n    uint256 constant OFFSET_OR_LENGTH_MASK = 0xffffffff;\n    uint256 constant OFFSET_OR_LENGTH_MASK_AND_WORD_ALIGN = 0xffffffe0;\n\n    /// @notice equivalent to SliceOutOfBounds.selector, stored in least-significant bits\n    uint256 constant SLICE_ERROR_SELECTOR = 0x3b99b53d;\n\n    /// @dev equivalent to: abi.decode(params, (bytes, bytes[])) in calldata (requires strict abi encoding)\n    function decodeActionsRouterParams(bytes calldata _bytes)\n        internal\n        pure\n        returns (bytes calldata actions, bytes[] calldata params)\n    {\n        assembly (\"memory-safe\") {\n            // Strict encoding requires that the data begin with:\n            // 0x00: 0x40 (offset to `actions.length`)\n            // 0x20: 0x60 + actions.length (offset to `params.length`)\n            // 0x40: `actions.length`\n            // 0x60: beginning of actions\n\n            // Verify actions offset matches strict encoding\n            let invalidData := xor(calldataload(_bytes.offset), 0x40)\n            actions.offset := add(_bytes.offset, 0x60)\n            actions.length := and(calldataload(add(_bytes.offset, 0x40)), OFFSET_OR_LENGTH_MASK)\n\n            // Round actions length up to be word-aligned, and add 0x60 (for the first 3 words of encoding)\n            let paramsLengthOffset := add(and(add(actions.length, 0x1f), OFFSET_OR_LENGTH_MASK_AND_WORD_ALIGN), 0x60)\n            // Verify params offset matches strict encoding\n            invalidData := or(invalidData, xor(calldataload(add(_bytes.offset, 0x20)), paramsLengthOffset))\n            let paramsLengthPointer := add(_bytes.offset, paramsLengthOffset)\n            params.length := and(calldataload(paramsLengthPointer), OFFSET_OR_LENGTH_MASK)\n            params.offset := add(paramsLengthPointer, 0x20)\n\n            // Expected offset for `params[0]` is params.length * 32\n            // As the first `params.length` slots are pointers to each of the array element lengths\n            let tailOffset := shl(5, params.length)\n            let expectedOffset := tailOffset\n\n            for { let offset := 0 } lt(offset, tailOffset) { offset := add(offset, 32) } {\n                let itemLengthOffset := calldataload(add(params.offset, offset))\n                // Verify that the offset matches the expected offset from strict encoding\n                invalidData := or(invalidData, xor(itemLengthOffset, expectedOffset))\n                let itemLengthPointer := add(params.offset, itemLengthOffset)\n                let length :=\n                    add(and(add(calldataload(itemLengthPointer), 0x1f), OFFSET_OR_LENGTH_MASK_AND_WORD_ALIGN), 0x20)\n                expectedOffset := add(expectedOffset, length)\n            }\n\n            // if the data encoding was invalid, or the provided bytes string isnt as long as the encoding says, revert\n            if or(invalidData, lt(add(_bytes.length, _bytes.offset), add(params.offset, expectedOffset))) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n        }\n    }\n\n    /// @dev equivalent to: abi.decode(params, (uint256, uint256, uint128, uint128, bytes)) in calldata\n    function decodeModifyLiquidityParams(bytes calldata params)\n        internal\n        pure\n        returns (uint256 tokenId, uint256 liquidity, uint128 amount0, uint128 amount1, bytes calldata hookData)\n    {\n        // no length check performed, as there is a length check in `toBytes`\n        assembly (\"memory-safe\") {\n            tokenId := calldataload(params.offset)\n            liquidity := calldataload(add(params.offset, 0x20))\n            amount0 := calldataload(add(params.offset, 0x40))\n            amount1 := calldataload(add(params.offset, 0x60))\n        }\n\n        hookData = params.toBytes(4);\n    }\n\n    /// @dev equivalent to: abi.decode(params, (uint256, uint128, uint128, bytes)) in calldata\n    function decodeIncreaseLiquidityFromDeltasParams(bytes calldata params)\n        internal\n        pure\n        returns (uint256 tokenId, uint128 amount0Max, uint128 amount1Max, bytes calldata hookData)\n    {\n        // no length check performed, as there is a length check in `toBytes`\n        assembly (\"memory-safe\") {\n            tokenId := calldataload(params.offset)\n            amount0Max := calldataload(add(params.offset, 0x20))\n            amount1Max := calldataload(add(params.offset, 0x40))\n        }\n\n        hookData = params.toBytes(3);\n    }\n\n    /// @dev equivalent to: abi.decode(params, (PoolKey, int24, int24, uint256, uint128, uint128, address, bytes)) in calldata\n    function decodeMintParams(bytes calldata params)\n        internal\n        pure\n        returns (\n            PoolKey calldata poolKey,\n            int24 tickLower,\n            int24 tickUpper,\n            uint256 liquidity,\n            uint128 amount0Max,\n            uint128 amount1Max,\n            address owner,\n            bytes calldata hookData\n        )\n    {\n        // no length check performed, as there is a length check in `toBytes`\n        assembly (\"memory-safe\") {\n            poolKey := params.offset\n            tickLower := calldataload(add(params.offset, 0xa0))\n            tickUpper := calldataload(add(params.offset, 0xc0))\n            liquidity := calldataload(add(params.offset, 0xe0))\n            amount0Max := calldataload(add(params.offset, 0x100))\n            amount1Max := calldataload(add(params.offset, 0x120))\n            owner := calldataload(add(params.offset, 0x140))\n        }\n        hookData = params.toBytes(11);\n    }\n\n    /// @dev equivalent to: abi.decode(params, (PoolKey, int24, int24, uint128, uint128, address, bytes)) in calldata\n    function decodeMintFromDeltasParams(bytes calldata params)\n        internal\n        pure\n        returns (\n            PoolKey calldata poolKey,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 amount0Max,\n            uint128 amount1Max,\n            address owner,\n            bytes calldata hookData\n        )\n    {\n        // no length check performed, as there is a length check in `toBytes`\n        assembly (\"memory-safe\") {\n            poolKey := params.offset\n            tickLower := calldataload(add(params.offset, 0xa0))\n            tickUpper := calldataload(add(params.offset, 0xc0))\n            amount0Max := calldataload(add(params.offset, 0xe0))\n            amount1Max := calldataload(add(params.offset, 0x100))\n            owner := calldataload(add(params.offset, 0x120))\n        }\n\n        hookData = params.toBytes(10);\n    }\n\n    /// @dev equivalent to: abi.decode(params, (uint256, uint128, uint128, bytes)) in calldata\n    function decodeBurnParams(bytes calldata params)\n        internal\n        pure\n        returns (uint256 tokenId, uint128 amount0Min, uint128 amount1Min, bytes calldata hookData)\n    {\n        // no length check performed, as there is a length check in `toBytes`\n        assembly (\"memory-safe\") {\n            tokenId := calldataload(params.offset)\n            amount0Min := calldataload(add(params.offset, 0x20))\n            amount1Min := calldataload(add(params.offset, 0x40))\n        }\n\n        hookData = params.toBytes(3);\n    }\n\n    /// @dev equivalent to: abi.decode(params, (IV4Router.ExactInputParams))\n    function decodeSwapExactInParams(bytes calldata params)\n        internal\n        pure\n        returns (IV4Router.ExactInputParams calldata swapParams)\n    {\n        // ExactInputParams is a variable length struct so we just have to look up its location\n        assembly (\"memory-safe\") {\n            // only safety checks for the minimum length, where path is empty\n            // 0xa0 = 5 * 0x20 -> 3 elements, path offset, and path length 0\n            if lt(params.length, 0xa0) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n            swapParams := add(params.offset, calldataload(params.offset))\n        }\n    }\n\n    /// @dev equivalent to: abi.decode(params, (IV4Router.ExactInputSingleParams))\n    function decodeSwapExactInSingleParams(bytes calldata params)\n        internal\n        pure\n        returns (IV4Router.ExactInputSingleParams calldata swapParams)\n    {\n        // ExactInputSingleParams is a variable length struct so we just have to look up its location\n        assembly (\"memory-safe\") {\n            // only safety checks for the minimum length, where hookData is empty\n            // 0x140 = 10 * 0x20 -> 8 elements, bytes offset, and bytes length 0\n            if lt(params.length, 0x140) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n            swapParams := add(params.offset, calldataload(params.offset))\n        }\n    }\n\n    /// @dev equivalent to: abi.decode(params, (IV4Router.ExactOutputParams))\n    function decodeSwapExactOutParams(bytes calldata params)\n        internal\n        pure\n        returns (IV4Router.ExactOutputParams calldata swapParams)\n    {\n        // ExactOutputParams is a variable length struct so we just have to look up its location\n        assembly (\"memory-safe\") {\n            // only safety checks for the minimum length, where path is empty\n            // 0xa0 = 5 * 0x20 -> 3 elements, path offset, and path length 0\n            if lt(params.length, 0xa0) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n            swapParams := add(params.offset, calldataload(params.offset))\n        }\n    }\n\n    /// @dev equivalent to: abi.decode(params, (IV4Router.ExactOutputSingleParams))\n    function decodeSwapExactOutSingleParams(bytes calldata params)\n        internal\n        pure\n        returns (IV4Router.ExactOutputSingleParams calldata swapParams)\n    {\n        // ExactOutputSingleParams is a variable length struct so we just have to look up its location\n        assembly (\"memory-safe\") {\n            // only safety checks for the minimum length, where hookData is empty\n            // 0x140 = 10 * 0x20 -> 8 elements, bytes offset, and bytes length 0\n            if lt(params.length, 0x140) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n            swapParams := add(params.offset, calldataload(params.offset))\n        }\n    }\n\n    /// @dev equivalent to: abi.decode(params, (Currency)) in calldata\n    function decodeCurrency(bytes calldata params) internal pure returns (Currency currency) {\n        assembly (\"memory-safe\") {\n            if lt(params.length, 0x20) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n            currency := calldataload(params.offset)\n        }\n    }\n\n    /// @dev equivalent to: abi.decode(params, (Currency, Currency)) in calldata\n    function decodeCurrencyPair(bytes calldata params) internal pure returns (Currency currency0, Currency currency1) {\n        assembly (\"memory-safe\") {\n            if lt(params.length, 0x40) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n            currency0 := calldataload(params.offset)\n            currency1 := calldataload(add(params.offset, 0x20))\n        }\n    }\n\n    /// @dev equivalent to: abi.decode(params, (Currency, Currency, address)) in calldata\n    function decodeCurrencyPairAndAddress(bytes calldata params)\n        internal\n        pure\n        returns (Currency currency0, Currency currency1, address _address)\n    {\n        assembly (\"memory-safe\") {\n            if lt(params.length, 0x60) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n            currency0 := calldataload(params.offset)\n            currency1 := calldataload(add(params.offset, 0x20))\n            _address := calldataload(add(params.offset, 0x40))\n        }\n    }\n\n    /// @dev equivalent to: abi.decode(params, (Currency, address)) in calldata\n    function decodeCurrencyAndAddress(bytes calldata params)\n        internal\n        pure\n        returns (Currency currency, address _address)\n    {\n        assembly (\"memory-safe\") {\n            if lt(params.length, 0x40) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n            currency := calldataload(params.offset)\n            _address := calldataload(add(params.offset, 0x20))\n        }\n    }\n\n    /// @dev equivalent to: abi.decode(params, (Currency, address, uint256)) in calldata\n    function decodeCurrencyAddressAndUint256(bytes calldata params)\n        internal\n        pure\n        returns (Currency currency, address _address, uint256 amount)\n    {\n        assembly (\"memory-safe\") {\n            if lt(params.length, 0x60) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n            currency := calldataload(params.offset)\n            _address := calldataload(add(params.offset, 0x20))\n            amount := calldataload(add(params.offset, 0x40))\n        }\n    }\n\n    /// @dev equivalent to: abi.decode(params, (Currency, uint256)) in calldata\n    function decodeCurrencyAndUint256(bytes calldata params)\n        internal\n        pure\n        returns (Currency currency, uint256 amount)\n    {\n        assembly (\"memory-safe\") {\n            if lt(params.length, 0x40) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n            currency := calldataload(params.offset)\n            amount := calldataload(add(params.offset, 0x20))\n        }\n    }\n\n    /// @dev equivalent to: abi.decode(params, (uint256)) in calldata\n    function decodeUint256(bytes calldata params) internal pure returns (uint256 amount) {\n        assembly (\"memory-safe\") {\n            if lt(params.length, 0x20) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n            amount := calldataload(params.offset)\n        }\n    }\n\n    /// @dev equivalent to: abi.decode(params, (Currency, uint256, bool)) in calldata\n    function decodeCurrencyUint256AndBool(bytes calldata params)\n        internal\n        pure\n        returns (Currency currency, uint256 amount, bool boolean)\n    {\n        assembly (\"memory-safe\") {\n            if lt(params.length, 0x60) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n            currency := calldataload(params.offset)\n            amount := calldataload(add(params.offset, 0x20))\n            boolean := calldataload(add(params.offset, 0x40))\n        }\n    }\n\n    /// @notice Decode the `_arg`-th element in `_bytes` as `bytes`\n    /// @param _bytes The input bytes string to extract a bytes string from\n    /// @param _arg The index of the argument to extract\n    function toBytes(bytes calldata _bytes, uint256 _arg) internal pure returns (bytes calldata res) {\n        uint256 length;\n        assembly (\"memory-safe\") {\n            // The offset of the `_arg`-th element is `32 * arg`, which stores the offset of the length pointer.\n            // shl(5, x) is equivalent to mul(32, x)\n            let lengthPtr :=\n                add(_bytes.offset, and(calldataload(add(_bytes.offset, shl(5, _arg))), OFFSET_OR_LENGTH_MASK))\n            // the number of bytes in the bytes string\n            length := and(calldataload(lengthPtr), OFFSET_OR_LENGTH_MASK)\n            // the offset where the bytes string begins\n            let offset := add(lengthPtr, 0x20)\n            // assign the return parameters\n            res.length := length\n            res.offset := offset\n\n            // if the provided bytes string isnt as long as the encoding says, revert\n            if lt(add(_bytes.length, _bytes.offset), add(length, offset)) {\n                mstore(0, SLICE_ERROR_SELECTOR)\n                revert(0x1c, 4)\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Currency} from \"@uniswap/v4-core/src/types/Currency.sol\";\nimport {IHooks} from \"@uniswap/v4-core/src/interfaces/IHooks.sol\";\nimport {PoolKey} from \"@uniswap/v4-core/src/types/PoolKey.sol\";\n\nstruct PathKey {\n    Currency intermediateCurrency;\n    uint24 fee;\n    int24 tickSpacing;\n    IHooks hooks;\n    bytes hookData;\n}\n\nusing PathKeyLibrary for PathKey global;\n\n/// @title PathKey Library\n/// @notice Functions for working with PathKeys\nlibrary PathKeyLibrary {\n    /// @notice Get the pool and swap direction for a given PathKey\n    /// @param params the given PathKey\n    /// @param currencyIn the input currency\n    /// @return poolKey the pool key of the swap\n    /// @return zeroForOne the direction of the swap, true if currency0 is being swapped for currency1\n    function getPoolAndSwapDirection(PathKey calldata params, Currency currencyIn)\n        internal\n        pure\n        returns (PoolKey memory poolKey, bool zeroForOne)\n    {\n        Currency currencyOut = params.intermediateCurrency;\n        (Currency currency0, Currency currency1) =\n            currencyIn < currencyOut ? (currencyIn, currencyOut) : (currencyOut, currencyIn);\n\n        zeroForOne = currencyIn == currency0;\n        poolKey = PoolKey(currency0, currency1, params.fee, params.tickSpacing, params.hooks);\n    }\n}\n"
			},
			"@uniswap/v4-core/src/libraries/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {CustomRevert} from \"./CustomRevert.sol\";\n\n/// @title Safe casting methods\n/// @notice Contains methods for safely casting between types\nlibrary SafeCast {\n    using CustomRevert for bytes4;\n\n    error SafeCastOverflow();\n\n    /// @notice Cast a uint256 to a uint160, revert on overflow\n    /// @param x The uint256 to be downcasted\n    /// @return y The downcasted integer, now type uint160\n    function toUint160(uint256 x) internal pure returns (uint160 y) {\n        y = uint160(x);\n        if (y != x) SafeCastOverflow.selector.revertWith();\n    }\n\n    /// @notice Cast a uint256 to a uint128, revert on overflow\n    /// @param x The uint256 to be downcasted\n    /// @return y The downcasted integer, now type uint128\n    function toUint128(uint256 x) internal pure returns (uint128 y) {\n        y = uint128(x);\n        if (x != y) SafeCastOverflow.selector.revertWith();\n    }\n\n    /// @notice Cast a int128 to a uint128, revert on overflow or underflow\n    /// @param x The int128 to be casted\n    /// @return y The casted integer, now type uint128\n    function toUint128(int128 x) internal pure returns (uint128 y) {\n        if (x < 0) SafeCastOverflow.selector.revertWith();\n        y = uint128(x);\n    }\n\n    /// @notice Cast a int256 to a int128, revert on overflow or underflow\n    /// @param x The int256 to be downcasted\n    /// @return y The downcasted integer, now type int128\n    function toInt128(int256 x) internal pure returns (int128 y) {\n        y = int128(x);\n        if (y != x) SafeCastOverflow.selector.revertWith();\n    }\n\n    /// @notice Cast a uint256 to a int256, revert on overflow\n    /// @param x The uint256 to be casted\n    /// @return y The casted integer, now type int256\n    function toInt256(uint256 x) internal pure returns (int256 y) {\n        y = int256(x);\n        if (y < 0) SafeCastOverflow.selector.revertWith();\n    }\n\n    /// @notice Cast a uint256 to a int128, revert on overflow\n    /// @param x The uint256 to be downcasted\n    /// @return The downcasted integer, now type int128\n    function toInt128(uint256 x) internal pure returns (int128) {\n        if (x >= 1 << 127) SafeCastOverflow.selector.revertWith();\n        return int128(int256(x));\n    }\n}\n"
			},
			"@uniswap/v4-core/src/libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {BitMath} from \"./BitMath.sol\";\nimport {CustomRevert} from \"./CustomRevert.sol\";\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    using CustomRevert for bytes4;\n\n    /// @notice Thrown when the tick passed to #getSqrtPriceAtTick is not between MIN_TICK and MAX_TICK\n    error InvalidTick(int24 tick);\n    /// @notice Thrown when the price passed to #getTickAtSqrtPrice does not correspond to a price between MIN_TICK and MAX_TICK\n    error InvalidSqrtPrice(uint160 sqrtPriceX96);\n\n    /// @dev The minimum tick that may be passed to #getSqrtPriceAtTick computed from log base 1.0001 of 2**-128\n    /// @dev If ever MIN_TICK and MAX_TICK are not centered around 0, the absTick logic in getSqrtPriceAtTick cannot be used\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtPriceAtTick computed from log base 1.0001 of 2**128\n    /// @dev If ever MIN_TICK and MAX_TICK are not centered around 0, the absTick logic in getSqrtPriceAtTick cannot be used\n    int24 internal constant MAX_TICK = 887272;\n\n    /// @dev The minimum tick spacing value drawn from the range of type int16 that is greater than 0, i.e. min from the range [1, 32767]\n    int24 internal constant MIN_TICK_SPACING = 1;\n    /// @dev The maximum tick spacing value drawn from the range of type int16, i.e. max from the range [1, 32767]\n    int24 internal constant MAX_TICK_SPACING = type(int16).max;\n\n    /// @dev The minimum value that can be returned from #getSqrtPriceAtTick. Equivalent to getSqrtPriceAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_PRICE = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtPriceAtTick. Equivalent to getSqrtPriceAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_PRICE = 1461446703485210103287273052203988822378723970342;\n    /// @dev A threshold used for optimized bounds check, equals `MAX_SQRT_PRICE - MIN_SQRT_PRICE - 1`\n    uint160 internal constant MAX_SQRT_PRICE_MINUS_MIN_SQRT_PRICE_MINUS_ONE =\n        1461446703485210103287273052203988822378723970342 - 4295128739 - 1;\n\n    /// @notice Given a tickSpacing, compute the maximum usable tick\n    function maxUsableTick(int24 tickSpacing) internal pure returns (int24) {\n        unchecked {\n            return (MAX_TICK / tickSpacing) * tickSpacing;\n        }\n    }\n\n    /// @notice Given a tickSpacing, compute the minimum usable tick\n    function minUsableTick(int24 tickSpacing) internal pure returns (int24) {\n        unchecked {\n            return (MIN_TICK / tickSpacing) * tickSpacing;\n        }\n    }\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the price of the two assets (currency1/currency0)\n    /// at the given tick\n    function getSqrtPriceAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        unchecked {\n            uint256 absTick;\n            assembly (\"memory-safe\") {\n                tick := signextend(2, tick)\n                // mask = 0 if tick >= 0 else -1 (all 1s)\n                let mask := sar(255, tick)\n                // if tick >= 0, |tick| = tick = 0 ^ tick\n                // if tick < 0, |tick| = ~~|tick| = ~(-|tick| - 1) = ~(tick - 1) = (-1) ^ (tick - 1)\n                // either way, |tick| = mask ^ (tick + mask)\n                absTick := xor(mask, add(mask, tick))\n            }\n\n            if (absTick > uint256(int256(MAX_TICK))) InvalidTick.selector.revertWith(tick);\n\n            // The tick is decomposed into bits, and for each bit with index i that is set, the product of 1/sqrt(1.0001^(2^i))\n            // is calculated (using Q128.128). The constants used for this calculation are rounded to the nearest integer\n\n            // Equivalent to:\n            //     price = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n            //     or price = int(2**128 / sqrt(1.0001)) if (absTick & 0x1) else 1 << 128\n            uint256 price;\n            assembly (\"memory-safe\") {\n                price := xor(shl(128, 1), mul(xor(shl(128, 1), 0xfffcb933bd6fad37aa2d162d1a594001), and(absTick, 0x1)))\n            }\n            if (absTick & 0x2 != 0) price = (price * 0xfff97272373d413259a46990580e213a) >> 128;\n            if (absTick & 0x4 != 0) price = (price * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n            if (absTick & 0x8 != 0) price = (price * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n            if (absTick & 0x10 != 0) price = (price * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n            if (absTick & 0x20 != 0) price = (price * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n            if (absTick & 0x40 != 0) price = (price * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n            if (absTick & 0x80 != 0) price = (price * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n            if (absTick & 0x100 != 0) price = (price * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n            if (absTick & 0x200 != 0) price = (price * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n            if (absTick & 0x400 != 0) price = (price * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n            if (absTick & 0x800 != 0) price = (price * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n            if (absTick & 0x1000 != 0) price = (price * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n            if (absTick & 0x2000 != 0) price = (price * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n            if (absTick & 0x4000 != 0) price = (price * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n            if (absTick & 0x8000 != 0) price = (price * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n            if (absTick & 0x10000 != 0) price = (price * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n            if (absTick & 0x20000 != 0) price = (price * 0x5d6af8dedb81196699c329225ee604) >> 128;\n            if (absTick & 0x40000 != 0) price = (price * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n            if (absTick & 0x80000 != 0) price = (price * 0x48a170391f7dc42444e8fa2) >> 128;\n\n            assembly (\"memory-safe\") {\n                // if (tick > 0) price = type(uint256).max / price;\n                if sgt(tick, 0) { price := div(not(0), price) }\n\n                // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n                // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n                // we round up in the division so getTickAtSqrtPrice of the output price is always consistent\n                // `sub(shl(32, 1), 1)` is `type(uint32).max`\n                // `price + type(uint32).max` will not overflow because `price` fits in 192 bits\n                sqrtPriceX96 := shr(32, add(price, sub(shl(32, 1), 1)))\n            }\n        }\n    }\n\n    /// @notice Calculates the greatest tick value such that getSqrtPriceAtTick(tick) <= sqrtPriceX96\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_PRICE, as MIN_SQRT_PRICE is the lowest value getSqrtPriceAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt price for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the getSqrtPriceAtTick(tick) is less than or equal to the input sqrtPriceX96\n    function getTickAtSqrtPrice(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        unchecked {\n            // Equivalent: if (sqrtPriceX96 < MIN_SQRT_PRICE || sqrtPriceX96 >= MAX_SQRT_PRICE) revert InvalidSqrtPrice();\n            // second inequality must be >= because the price can never reach the price at the max tick\n            // if sqrtPriceX96 < MIN_SQRT_PRICE, the `sub` underflows and `gt` is true\n            // if sqrtPriceX96 >= MAX_SQRT_PRICE, sqrtPriceX96 - MIN_SQRT_PRICE > MAX_SQRT_PRICE - MIN_SQRT_PRICE - 1\n            if ((sqrtPriceX96 - MIN_SQRT_PRICE) > MAX_SQRT_PRICE_MINUS_MIN_SQRT_PRICE_MINUS_ONE) {\n                InvalidSqrtPrice.selector.revertWith(sqrtPriceX96);\n            }\n\n            uint256 price = uint256(sqrtPriceX96) << 32;\n\n            uint256 r = price;\n            uint256 msb = BitMath.mostSignificantBit(r);\n\n            if (msb >= 128) r = price >> (msb - 127);\n            else r = price << (127 - msb);\n\n            int256 log_2 = (int256(msb) - 128) << 64;\n\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(63, f))\n                r := shr(f, r)\n            }\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(62, f))\n                r := shr(f, r)\n            }\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(61, f))\n                r := shr(f, r)\n            }\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(60, f))\n                r := shr(f, r)\n            }\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(59, f))\n                r := shr(f, r)\n            }\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(58, f))\n                r := shr(f, r)\n            }\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(57, f))\n                r := shr(f, r)\n            }\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(56, f))\n                r := shr(f, r)\n            }\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(55, f))\n                r := shr(f, r)\n            }\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(54, f))\n                r := shr(f, r)\n            }\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(53, f))\n                r := shr(f, r)\n            }\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(52, f))\n                r := shr(f, r)\n            }\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(51, f))\n                r := shr(f, r)\n            }\n            assembly (\"memory-safe\") {\n                r := shr(127, mul(r, r))\n                let f := shr(128, r)\n                log_2 := or(log_2, shl(50, f))\n            }\n\n            int256 log_sqrt10001 = log_2 * 255738958999603826347141; // Q22.128 number\n\n            // Magic number represents the ceiling of the maximum value of the error when approximating log_sqrt10001(x)\n            int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n\n            // Magic number represents the minimum value of the error when approximating log_sqrt10001(x), when\n            // sqrtPrice is from the range (2^-64, 2^64). This is safe as MIN_SQRT_PRICE is more than 2^-64. If MIN_SQRT_PRICE\n            // is changed, this may need to be changed too\n            int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n            tick = tickLow == tickHi ? tickLow : getSqrtPriceAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n        }\n    }\n}\n"
			},
			"@uniswap/v4-core/src/types/Currency.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IERC20Minimal} from \"../interfaces/external/IERC20Minimal.sol\";\nimport {CustomRevert} from \"../libraries/CustomRevert.sol\";\n\ntype Currency is address;\n\nusing {greaterThan as >, lessThan as <, greaterThanOrEqualTo as >=, equals as ==} for Currency global;\nusing CurrencyLibrary for Currency global;\n\nfunction equals(Currency currency, Currency other) pure returns (bool) {\n    return Currency.unwrap(currency) == Currency.unwrap(other);\n}\n\nfunction greaterThan(Currency currency, Currency other) pure returns (bool) {\n    return Currency.unwrap(currency) > Currency.unwrap(other);\n}\n\nfunction lessThan(Currency currency, Currency other) pure returns (bool) {\n    return Currency.unwrap(currency) < Currency.unwrap(other);\n}\n\nfunction greaterThanOrEqualTo(Currency currency, Currency other) pure returns (bool) {\n    return Currency.unwrap(currency) >= Currency.unwrap(other);\n}\n\n/// @title CurrencyLibrary\n/// @dev This library allows for transferring and holding native tokens and ERC20 tokens\nlibrary CurrencyLibrary {\n    /// @notice Additional context for ERC-7751 wrapped error when a native transfer fails\n    error NativeTransferFailed();\n\n    /// @notice Additional context for ERC-7751 wrapped error when an ERC20 transfer fails\n    error ERC20TransferFailed();\n\n    /// @notice A constant to represent the native currency\n    Currency public constant ADDRESS_ZERO = Currency.wrap(address(0));\n\n    function transfer(Currency currency, address to, uint256 amount) internal {\n        // altered from https://github.com/transmissions11/solmate/blob/44a9963d4c78111f77caa0e65d677b8b46d6f2e6/src/utils/SafeTransferLib.sol\n        // modified custom error selectors\n\n        bool success;\n        if (currency.isAddressZero()) {\n            assembly (\"memory-safe\") {\n                // Transfer the ETH and revert if it fails.\n                success := call(gas(), to, amount, 0, 0, 0, 0)\n            }\n            // revert with NativeTransferFailed, containing the bubbled up error as an argument\n            if (!success) {\n                CustomRevert.bubbleUpAndRevertWith(to, bytes4(0), NativeTransferFailed.selector);\n            }\n        } else {\n            assembly (\"memory-safe\") {\n                // Get a pointer to some free memory.\n                let fmp := mload(0x40)\n\n                // Write the abi-encoded calldata into memory, beginning with the function selector.\n                mstore(fmp, 0xa9059cbb00000000000000000000000000000000000000000000000000000000)\n                mstore(add(fmp, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Append and mask the \"to\" argument.\n                mstore(add(fmp, 36), amount) // Append the \"amount\" argument. Masking not required as it's a full 32 byte type.\n\n                success :=\n                    and(\n                        // Set success to whether the call reverted, if not we check it either\n                        // returned exactly 1 (can't just be non-zero data), or had no return data.\n                        or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())),\n                        // We use 68 because the length of our calldata totals up like so: 4 + 32 * 2.\n                        // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\n                        // Counterintuitively, this call must be positioned second to the or() call in the\n                        // surrounding and() call or else returndatasize() will be zero during the computation.\n                        call(gas(), currency, 0, fmp, 68, 0, 32)\n                    )\n\n                // Now clean the memory we used\n                mstore(fmp, 0) // 4 byte `selector` and 28 bytes of `to` were stored here\n                mstore(add(fmp, 0x20), 0) // 4 bytes of `to` and 28 bytes of `amount` were stored here\n                mstore(add(fmp, 0x40), 0) // 4 bytes of `amount` were stored here\n            }\n            // revert with ERC20TransferFailed, containing the bubbled up error as an argument\n            if (!success) {\n                CustomRevert.bubbleUpAndRevertWith(\n                    Currency.unwrap(currency), IERC20Minimal.transfer.selector, ERC20TransferFailed.selector\n                );\n            }\n        }\n    }\n\n    function balanceOfSelf(Currency currency) internal view returns (uint256) {\n        if (currency.isAddressZero()) {\n            return address(this).balance;\n        } else {\n            return IERC20Minimal(Currency.unwrap(currency)).balanceOf(address(this));\n        }\n    }\n\n    function balanceOf(Currency currency, address owner) internal view returns (uint256) {\n        if (currency.isAddressZero()) {\n            return owner.balance;\n        } else {\n            return IERC20Minimal(Currency.unwrap(currency)).balanceOf(owner);\n        }\n    }\n\n    function isAddressZero(Currency currency) internal pure returns (bool) {\n        return Currency.unwrap(currency) == Currency.unwrap(ADDRESS_ZERO);\n    }\n\n    function toId(Currency currency) internal pure returns (uint256) {\n        return uint160(Currency.unwrap(currency));\n    }\n\n    // If the upper 12 bytes are non-zero, they will be zero-ed out\n    // Therefore, fromId() and toId() are not inverses of each other\n    function fromId(uint256 id) internal pure returns (Currency) {\n        return Currency.wrap(address(uint160(id)));\n    }\n}\n"
			},
			"@uniswap/v4-core/src/types/PoolKey.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Currency} from \"./Currency.sol\";\nimport {IHooks} from \"../interfaces/IHooks.sol\";\nimport {PoolIdLibrary} from \"./PoolId.sol\";\n\nusing PoolIdLibrary for PoolKey global;\n\n/// @notice Returns the key for identifying a pool\nstruct PoolKey {\n    /// @notice The lower currency of the pool, sorted numerically\n    Currency currency0;\n    /// @notice The higher currency of the pool, sorted numerically\n    Currency currency1;\n    /// @notice The pool LP fee, capped at 1_000_000. If the highest bit is 1, the pool has a dynamic fee and must be exactly equal to 0x800000\n    uint24 fee;\n    /// @notice Ticks that involve positions must be a multiple of tick spacing\n    int24 tickSpacing;\n    /// @notice The hooks of the pool\n    IHooks hooks;\n}\n"
			},
			"@uniswap/v4-core/src/types/BalanceDelta.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {SafeCast} from \"../libraries/SafeCast.sol\";\n\n/// @dev Two `int128` values packed into a single `int256` where the upper 128 bits represent the amount0\n/// and the lower 128 bits represent the amount1.\ntype BalanceDelta is int256;\n\nusing {add as +, sub as -, eq as ==, neq as !=} for BalanceDelta global;\nusing BalanceDeltaLibrary for BalanceDelta global;\nusing SafeCast for int256;\n\nfunction toBalanceDelta(int128 _amount0, int128 _amount1) pure returns (BalanceDelta balanceDelta) {\n    assembly (\"memory-safe\") {\n        balanceDelta := or(shl(128, _amount0), and(sub(shl(128, 1), 1), _amount1))\n    }\n}\n\nfunction add(BalanceDelta a, BalanceDelta b) pure returns (BalanceDelta) {\n    int256 res0;\n    int256 res1;\n    assembly (\"memory-safe\") {\n        let a0 := sar(128, a)\n        let a1 := signextend(15, a)\n        let b0 := sar(128, b)\n        let b1 := signextend(15, b)\n        res0 := add(a0, b0)\n        res1 := add(a1, b1)\n    }\n    return toBalanceDelta(res0.toInt128(), res1.toInt128());\n}\n\nfunction sub(BalanceDelta a, BalanceDelta b) pure returns (BalanceDelta) {\n    int256 res0;\n    int256 res1;\n    assembly (\"memory-safe\") {\n        let a0 := sar(128, a)\n        let a1 := signextend(15, a)\n        let b0 := sar(128, b)\n        let b1 := signextend(15, b)\n        res0 := sub(a0, b0)\n        res1 := sub(a1, b1)\n    }\n    return toBalanceDelta(res0.toInt128(), res1.toInt128());\n}\n\nfunction eq(BalanceDelta a, BalanceDelta b) pure returns (bool) {\n    return BalanceDelta.unwrap(a) == BalanceDelta.unwrap(b);\n}\n\nfunction neq(BalanceDelta a, BalanceDelta b) pure returns (bool) {\n    return BalanceDelta.unwrap(a) != BalanceDelta.unwrap(b);\n}\n\n/// @notice Library for getting the amount0 and amount1 deltas from the BalanceDelta type\nlibrary BalanceDeltaLibrary {\n    /// @notice A BalanceDelta of 0\n    BalanceDelta public constant ZERO_DELTA = BalanceDelta.wrap(0);\n\n    function amount0(BalanceDelta balanceDelta) internal pure returns (int128 _amount0) {\n        assembly (\"memory-safe\") {\n            _amount0 := sar(128, balanceDelta)\n        }\n    }\n\n    function amount1(BalanceDelta balanceDelta) internal pure returns (int128 _amount1) {\n        assembly (\"memory-safe\") {\n            _amount1 := signextend(15, balanceDelta)\n        }\n    }\n}\n"
			},
			"@uniswap/v4-core/src/interfaces/IPoolManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {Currency} from \"../types/Currency.sol\";\nimport {PoolKey} from \"../types/PoolKey.sol\";\nimport {IHooks} from \"./IHooks.sol\";\nimport {IERC6909Claims} from \"./external/IERC6909Claims.sol\";\nimport {IProtocolFees} from \"./IProtocolFees.sol\";\nimport {BalanceDelta} from \"../types/BalanceDelta.sol\";\nimport {PoolId} from \"../types/PoolId.sol\";\nimport {IExtsload} from \"./IExtsload.sol\";\nimport {IExttload} from \"./IExttload.sol\";\nimport {ModifyLiquidityParams, SwapParams} from \"../types/PoolOperation.sol\";\n\n/// @notice Interface for the PoolManager\ninterface IPoolManager is IProtocolFees, IERC6909Claims, IExtsload, IExttload {\n    /// @notice Thrown when a currency is not netted out after the contract is unlocked\n    error CurrencyNotSettled();\n\n    /// @notice Thrown when trying to interact with a non-initialized pool\n    error PoolNotInitialized();\n\n    /// @notice Thrown when unlock is called, but the contract is already unlocked\n    error AlreadyUnlocked();\n\n    /// @notice Thrown when a function is called that requires the contract to be unlocked, but it is not\n    error ManagerLocked();\n\n    /// @notice Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow\n    error TickSpacingTooLarge(int24 tickSpacing);\n\n    /// @notice Pools must have a positive non-zero tickSpacing passed to #initialize\n    error TickSpacingTooSmall(int24 tickSpacing);\n\n    /// @notice PoolKey must have currencies where address(currency0) < address(currency1)\n    error CurrenciesOutOfOrderOrEqual(address currency0, address currency1);\n\n    /// @notice Thrown when a call to updateDynamicLPFee is made by an address that is not the hook,\n    /// or on a pool that does not have a dynamic swap fee.\n    error UnauthorizedDynamicLPFeeUpdate();\n\n    /// @notice Thrown when trying to swap amount of 0\n    error SwapAmountCannotBeZero();\n\n    ///@notice Thrown when native currency is passed to a non native settlement\n    error NonzeroNativeValue();\n\n    /// @notice Thrown when `clear` is called with an amount that is not exactly equal to the open currency delta.\n    error MustClearExactPositiveDelta();\n\n    /// @notice Emitted when a new pool is initialized\n    /// @param id The abi encoded hash of the pool key struct for the new pool\n    /// @param currency0 The first currency of the pool by address sort order\n    /// @param currency1 The second currency of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param hooks The hooks contract address for the pool, or address(0) if none\n    /// @param sqrtPriceX96 The price of the pool on initialization\n    /// @param tick The initial tick of the pool corresponding to the initialized price\n    event Initialize(\n        PoolId indexed id,\n        Currency indexed currency0,\n        Currency indexed currency1,\n        uint24 fee,\n        int24 tickSpacing,\n        IHooks hooks,\n        uint160 sqrtPriceX96,\n        int24 tick\n    );\n\n    /// @notice Emitted when a liquidity position is modified\n    /// @param id The abi encoded hash of the pool key struct for the pool that was modified\n    /// @param sender The address that modified the pool\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param liquidityDelta The amount of liquidity that was added or removed\n    /// @param salt The extra data to make positions unique\n    event ModifyLiquidity(\n        PoolId indexed id, address indexed sender, int24 tickLower, int24 tickUpper, int256 liquidityDelta, bytes32 salt\n    );\n\n    /// @notice Emitted for swaps between currency0 and currency1\n    /// @param id The abi encoded hash of the pool key struct for the pool that was modified\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param amount0 The delta of the currency0 balance of the pool\n    /// @param amount1 The delta of the currency1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of the price of the pool after the swap\n    /// @param fee The swap fee in hundredths of a bip\n    event Swap(\n        PoolId indexed id,\n        address indexed sender,\n        int128 amount0,\n        int128 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick,\n        uint24 fee\n    );\n\n    /// @notice Emitted for donations\n    /// @param id The abi encoded hash of the pool key struct for the pool that was donated to\n    /// @param sender The address that initiated the donate call\n    /// @param amount0 The amount donated in currency0\n    /// @param amount1 The amount donated in currency1\n    event Donate(PoolId indexed id, address indexed sender, uint256 amount0, uint256 amount1);\n\n    /// @notice All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement\n    /// `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract.\n    /// @dev The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`\n    /// @param data Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\n    /// @return The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`\n    function unlock(bytes calldata data) external returns (bytes memory);\n\n    /// @notice Initialize the state for a given pool ID\n    /// @dev A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\n    /// @param key The pool key for the pool to initialize\n    /// @param sqrtPriceX96 The initial square root price\n    /// @return tick The initial tick of the pool\n    function initialize(PoolKey memory key, uint160 sqrtPriceX96) external returns (int24 tick);\n\n    /// @notice Modify the liquidity for the given pool\n    /// @dev Poke by calling with a zero liquidityDelta\n    /// @param key The pool to modify liquidity in\n    /// @param params The parameters for modifying the liquidity\n    /// @param hookData The data to pass through to the add/removeLiquidity hooks\n    /// @return callerDelta The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable\n    /// @return feesAccrued The balance delta of the fees generated in the liquidity range. Returned for informational purposes\n    /// @dev Note that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value\n    /// For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued)\n    /// atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme\n    function modifyLiquidity(PoolKey memory key, ModifyLiquidityParams memory params, bytes calldata hookData)\n        external\n        returns (BalanceDelta callerDelta, BalanceDelta feesAccrued);\n\n    /// @notice Swap against the given pool\n    /// @param key The pool to swap in\n    /// @param params The parameters for swapping\n    /// @param hookData The data to pass through to the swap hooks\n    /// @return swapDelta The balance delta of the address swapping\n    /// @dev Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified.\n    /// Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG\n    /// the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.\n    function swap(PoolKey memory key, SwapParams memory params, bytes calldata hookData)\n        external\n        returns (BalanceDelta swapDelta);\n\n    /// @notice Donate the given currency amounts to the in-range liquidity providers of a pool\n    /// @dev Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds.\n    /// Donors should keep this in mind when designing donation mechanisms.\n    /// @dev This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of\n    /// a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to\n    /// `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)).\n    /// Read the comments in `Pool.swap()` for more information about this.\n    /// @param key The key of the pool to donate to\n    /// @param amount0 The amount of currency0 to donate\n    /// @param amount1 The amount of currency1 to donate\n    /// @param hookData The data to pass through to the donate hooks\n    /// @return BalanceDelta The delta of the caller after the donate\n    function donate(PoolKey memory key, uint256 amount0, uint256 amount1, bytes calldata hookData)\n        external\n        returns (BalanceDelta);\n\n    /// @notice Writes the current ERC20 balance of the specified currency to transient storage\n    /// This is used to checkpoint balances for the manager and derive deltas for the caller.\n    /// @dev This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped\n    /// for native tokens because the amount to settle is determined by the sent value.\n    /// However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle\n    /// native funds, this function can be called with the native currency to then be able to settle the native currency\n    function sync(Currency currency) external;\n\n    /// @notice Called by the user to net out some value owed to the user\n    /// @dev Will revert if the requested amount is not available, consider using `mint` instead\n    /// @dev Can also be used as a mechanism for free flash loans\n    /// @param currency The currency to withdraw from the pool manager\n    /// @param to The address to withdraw to\n    /// @param amount The amount of currency to withdraw\n    function take(Currency currency, address to, uint256 amount) external;\n\n    /// @notice Called by the user to pay what is owed\n    /// @return paid The amount of currency settled\n    function settle() external payable returns (uint256 paid);\n\n    /// @notice Called by the user to pay on behalf of another address\n    /// @param recipient The address to credit for the payment\n    /// @return paid The amount of currency settled\n    function settleFor(address recipient) external payable returns (uint256 paid);\n\n    /// @notice WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently.\n    /// A call to clear will zero out a positive balance WITHOUT a corresponding transfer.\n    /// @dev This could be used to clear a balance that is considered dust.\n    /// Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared.\n    function clear(Currency currency, uint256 amount) external;\n\n    /// @notice Called by the user to move value into ERC6909 balance\n    /// @param to The address to mint the tokens to\n    /// @param id The currency address to mint to ERC6909s, as a uint256\n    /// @param amount The amount of currency to mint\n    /// @dev The id is converted to a uint160 to correspond to a currency address\n    /// If the upper 12 bytes are not 0, they will be 0-ed out\n    function mint(address to, uint256 id, uint256 amount) external;\n\n    /// @notice Called by the user to move value from ERC6909 balance\n    /// @param from The address to burn the tokens from\n    /// @param id The currency address to burn from ERC6909s, as a uint256\n    /// @param amount The amount of currency to burn\n    /// @dev The id is converted to a uint160 to correspond to a currency address\n    /// If the upper 12 bytes are not 0, they will be 0-ed out\n    function burn(address from, uint256 id, uint256 amount) external;\n\n    /// @notice Updates the pools lp fees for the a pool that has enabled dynamic lp fees.\n    /// @dev A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\n    /// @param key The key of the pool to update dynamic LP fees for\n    /// @param newDynamicLPFee The new dynamic pool LP fee\n    function updateDynamicLPFee(PoolKey memory key, uint24 newDynamicLPFee) external;\n}\n"
			},
			"@uniswap/v4-core/src/interfaces/IHooks.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {PoolKey} from \"../types/PoolKey.sol\";\nimport {BalanceDelta} from \"../types/BalanceDelta.sol\";\nimport {ModifyLiquidityParams, SwapParams} from \"../types/PoolOperation.sol\";\nimport {BeforeSwapDelta} from \"../types/BeforeSwapDelta.sol\";\n\n/// @notice V4 decides whether to invoke specific hooks by inspecting the least significant bits\n/// of the address that the hooks contract is deployed to.\n/// For example, a hooks contract deployed to address: 0x0000000000000000000000000000000000002400\n/// has the lowest bits '10 0100 0000 0000' which would cause the 'before initialize' and 'after add liquidity' hooks to be used.\n/// See the Hooks library for the full spec.\n/// @dev Should only be callable by the v4 PoolManager.\ninterface IHooks {\n    /// @notice The hook called before the state of a pool is initialized\n    /// @param sender The initial msg.sender for the initialize call\n    /// @param key The key for the pool being initialized\n    /// @param sqrtPriceX96 The sqrt(price) of the pool as a Q64.96\n    /// @return bytes4 The function selector for the hook\n    function beforeInitialize(address sender, PoolKey calldata key, uint160 sqrtPriceX96) external returns (bytes4);\n\n    /// @notice The hook called after the state of a pool is initialized\n    /// @param sender The initial msg.sender for the initialize call\n    /// @param key The key for the pool being initialized\n    /// @param sqrtPriceX96 The sqrt(price) of the pool as a Q64.96\n    /// @param tick The current tick after the state of a pool is initialized\n    /// @return bytes4 The function selector for the hook\n    function afterInitialize(address sender, PoolKey calldata key, uint160 sqrtPriceX96, int24 tick)\n        external\n        returns (bytes4);\n\n    /// @notice The hook called before liquidity is added\n    /// @param sender The initial msg.sender for the add liquidity call\n    /// @param key The key for the pool\n    /// @param params The parameters for adding liquidity\n    /// @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    function beforeAddLiquidity(\n        address sender,\n        PoolKey calldata key,\n        ModifyLiquidityParams calldata params,\n        bytes calldata hookData\n    ) external returns (bytes4);\n\n    /// @notice The hook called after liquidity is added\n    /// @param sender The initial msg.sender for the add liquidity call\n    /// @param key The key for the pool\n    /// @param params The parameters for adding liquidity\n    /// @param delta The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\n    /// @param feesAccrued The fees accrued since the last time fees were collected from this position\n    /// @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    /// @return BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\n    function afterAddLiquidity(\n        address sender,\n        PoolKey calldata key,\n        ModifyLiquidityParams calldata params,\n        BalanceDelta delta,\n        BalanceDelta feesAccrued,\n        bytes calldata hookData\n    ) external returns (bytes4, BalanceDelta);\n\n    /// @notice The hook called before liquidity is removed\n    /// @param sender The initial msg.sender for the remove liquidity call\n    /// @param key The key for the pool\n    /// @param params The parameters for removing liquidity\n    /// @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    function beforeRemoveLiquidity(\n        address sender,\n        PoolKey calldata key,\n        ModifyLiquidityParams calldata params,\n        bytes calldata hookData\n    ) external returns (bytes4);\n\n    /// @notice The hook called after liquidity is removed\n    /// @param sender The initial msg.sender for the remove liquidity call\n    /// @param key The key for the pool\n    /// @param params The parameters for removing liquidity\n    /// @param delta The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\n    /// @param feesAccrued The fees accrued since the last time fees were collected from this position\n    /// @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    /// @return BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\n    function afterRemoveLiquidity(\n        address sender,\n        PoolKey calldata key,\n        ModifyLiquidityParams calldata params,\n        BalanceDelta delta,\n        BalanceDelta feesAccrued,\n        bytes calldata hookData\n    ) external returns (bytes4, BalanceDelta);\n\n    /// @notice The hook called before a swap\n    /// @param sender The initial msg.sender for the swap call\n    /// @param key The key for the pool\n    /// @param params The parameters for the swap\n    /// @param hookData Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    /// @return BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\n    /// @return uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\n    function beforeSwap(address sender, PoolKey calldata key, SwapParams calldata params, bytes calldata hookData)\n        external\n        returns (bytes4, BeforeSwapDelta, uint24);\n\n    /// @notice The hook called after a swap\n    /// @param sender The initial msg.sender for the swap call\n    /// @param key The key for the pool\n    /// @param params The parameters for the swap\n    /// @param delta The amount owed to the caller (positive) or owed to the pool (negative)\n    /// @param hookData Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    /// @return int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\n    function afterSwap(\n        address sender,\n        PoolKey calldata key,\n        SwapParams calldata params,\n        BalanceDelta delta,\n        bytes calldata hookData\n    ) external returns (bytes4, int128);\n\n    /// @notice The hook called before donate\n    /// @param sender The initial msg.sender for the donate call\n    /// @param key The key for the pool\n    /// @param amount0 The amount of token0 being donated\n    /// @param amount1 The amount of token1 being donated\n    /// @param hookData Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    function beforeDonate(\n        address sender,\n        PoolKey calldata key,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata hookData\n    ) external returns (bytes4);\n\n    /// @notice The hook called after donate\n    /// @param sender The initial msg.sender for the donate call\n    /// @param key The key for the pool\n    /// @param amount0 The amount of token0 being donated\n    /// @param amount1 The amount of token1 being donated\n    /// @param hookData Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    function afterDonate(\n        address sender,\n        PoolKey calldata key,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata hookData\n    ) external returns (bytes4);\n}\n"
			},
			"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IPoolManager} from \"@uniswap/v4-core/src/interfaces/IPoolManager.sol\";\n\n/// @title IImmutableState\n/// @notice Interface for the ImmutableState contract\ninterface IImmutableState {\n    /// @notice The Uniswap v4 PoolManager contract\n    function poolManager() external view returns (IPoolManager);\n}\n"
			},
			"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IPoolManager} from \"@uniswap/v4-core/src/interfaces/IPoolManager.sol\";\nimport {IImmutableState} from \"../interfaces/IImmutableState.sol\";\n\n/// @title Immutable State\n/// @notice A collection of immutable state variables, commonly used across multiple contracts\ncontract ImmutableState is IImmutableState {\n    /// @inheritdoc IImmutableState\n    IPoolManager public immutable poolManager;\n\n    /// @notice Thrown when the caller is not PoolManager\n    error NotPoolManager();\n\n    /// @notice Only allow calls from the PoolManager contract\n    modifier onlyPoolManager() {\n        if (msg.sender != address(poolManager)) revert NotPoolManager();\n        _;\n    }\n\n    constructor(IPoolManager _poolManager) {\n        poolManager = _poolManager;\n    }\n}\n"
			},
			"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {IPoolManager} from \"../interfaces/IPoolManager.sol\";\nimport {Currency} from \"../types/Currency.sol\";\nimport {CurrencyReserves} from \"./CurrencyReserves.sol\";\nimport {NonzeroDeltaCount} from \"./NonzeroDeltaCount.sol\";\nimport {Lock} from \"./Lock.sol\";\n\n/// @notice A helper library to provide state getters that use exttload\nlibrary TransientStateLibrary {\n    /// @notice returns the reserves for the synced currency\n    /// @param manager The pool manager contract.\n\n    /// @return uint256 The reserves of the currency.\n    /// @dev returns 0 if the reserves are not synced or value is 0.\n    /// Checks the synced currency to only return valid reserve values (after a sync and before a settle).\n    function getSyncedReserves(IPoolManager manager) internal view returns (uint256) {\n        if (getSyncedCurrency(manager).isAddressZero()) return 0;\n        return uint256(manager.exttload(CurrencyReserves.RESERVES_OF_SLOT));\n    }\n\n    function getSyncedCurrency(IPoolManager manager) internal view returns (Currency) {\n        return Currency.wrap(address(uint160(uint256(manager.exttload(CurrencyReserves.CURRENCY_SLOT)))));\n    }\n\n    /// @notice Returns the number of nonzero deltas open on the PoolManager that must be zeroed out before the contract is locked\n    function getNonzeroDeltaCount(IPoolManager manager) internal view returns (uint256) {\n        return uint256(manager.exttload(NonzeroDeltaCount.NONZERO_DELTA_COUNT_SLOT));\n    }\n\n    /// @notice Get the current delta for a caller in the given currency\n    /// @param target The credited account address\n    /// @param currency The currency for which to lookup the delta\n    function currencyDelta(IPoolManager manager, address target, Currency currency) internal view returns (int256) {\n        bytes32 key;\n        assembly (\"memory-safe\") {\n            mstore(0, and(target, 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(32, and(currency, 0xffffffffffffffffffffffffffffffffffffffff))\n            key := keccak256(0, 64)\n        }\n        return int256(uint256(manager.exttload(key)));\n    }\n\n    /// @notice Returns whether the contract is unlocked or not\n    function isUnlocked(IPoolManager manager) internal view returns (bool) {\n        return manager.exttload(Lock.IS_UNLOCKED_SLOT) != 0x0;\n    }\n}\n"
			},
			"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @title IMsgSender\n/// @notice Interface for contracts that expose the original caller\ninterface IMsgSender {\n    /// @notice Returns the address of the original caller (msg.sender)\n    /// @dev Uniswap v4 periphery contracts implement a callback pattern which lose\n    /// the original msg.sender caller context. This view function provides a way for\n    /// integrating contracts (e.g. hooks) to access the original caller address.\n    /// @return The address of the original caller\n    function msgSender() external view returns (address);\n}\n"
			},
			"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IUnlockCallback} from \"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol\";\nimport {IPoolManager} from \"@uniswap/v4-core/src/interfaces/IPoolManager.sol\";\nimport {ImmutableState} from \"./ImmutableState.sol\";\n\n/// @title Safe Callback\n/// @notice A contract that only allows the Uniswap v4 PoolManager to call the unlockCallback\nabstract contract SafeCallback is ImmutableState, IUnlockCallback {\n    constructor(IPoolManager _poolManager) ImmutableState(_poolManager) {}\n\n    /// @inheritdoc IUnlockCallback\n    /// @dev We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.\n    function unlockCallback(bytes calldata data) external onlyPoolManager returns (bytes memory) {\n        return _unlockCallback(data);\n    }\n\n    /// @dev to be implemented by the child contract, to safely guarantee the logic is only executed by the PoolManager\n    function _unlockCallback(bytes calldata data) internal virtual returns (bytes memory);\n}\n"
			},
			"@uniswap/v4-core/src/types/PoolId.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {PoolKey} from \"./PoolKey.sol\";\n\ntype PoolId is bytes32;\n\n/// @notice Library for computing the ID of a pool\nlibrary PoolIdLibrary {\n    /// @notice Returns value equal to keccak256(abi.encode(poolKey))\n    function toId(PoolKey memory poolKey) internal pure returns (PoolId poolId) {\n        assembly (\"memory-safe\") {\n            // 0xa0 represents the total size of the poolKey struct (5 slots of 32 bytes)\n            poolId := keccak256(poolKey, 0xa0)\n        }\n    }\n}\n"
			},
			"@uniswap/v4-core/src/libraries/CustomRevert.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @title Library for reverting with custom errors efficiently\n/// @notice Contains functions for reverting with custom errors with different argument types efficiently\n/// @dev To use this library, declare `using CustomRevert for bytes4;` and replace `revert CustomError()` with\n/// `CustomError.selector.revertWith()`\n/// @dev The functions may tamper with the free memory pointer but it is fine since the call context is exited immediately\nlibrary CustomRevert {\n    /// @dev ERC-7751 error for wrapping bubbled up reverts\n    error WrappedError(address target, bytes4 selector, bytes reason, bytes details);\n\n    /// @dev Reverts with the selector of a custom error in the scratch space\n    function revertWith(bytes4 selector) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0, selector)\n            revert(0, 0x04)\n        }\n    }\n\n    /// @dev Reverts with a custom error with an address argument in the scratch space\n    function revertWith(bytes4 selector, address addr) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0, selector)\n            mstore(0x04, and(addr, 0xffffffffffffffffffffffffffffffffffffffff))\n            revert(0, 0x24)\n        }\n    }\n\n    /// @dev Reverts with a custom error with an int24 argument in the scratch space\n    function revertWith(bytes4 selector, int24 value) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0, selector)\n            mstore(0x04, signextend(2, value))\n            revert(0, 0x24)\n        }\n    }\n\n    /// @dev Reverts with a custom error with a uint160 argument in the scratch space\n    function revertWith(bytes4 selector, uint160 value) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0, selector)\n            mstore(0x04, and(value, 0xffffffffffffffffffffffffffffffffffffffff))\n            revert(0, 0x24)\n        }\n    }\n\n    /// @dev Reverts with a custom error with two int24 arguments\n    function revertWith(bytes4 selector, int24 value1, int24 value2) internal pure {\n        assembly (\"memory-safe\") {\n            let fmp := mload(0x40)\n            mstore(fmp, selector)\n            mstore(add(fmp, 0x04), signextend(2, value1))\n            mstore(add(fmp, 0x24), signextend(2, value2))\n            revert(fmp, 0x44)\n        }\n    }\n\n    /// @dev Reverts with a custom error with two uint160 arguments\n    function revertWith(bytes4 selector, uint160 value1, uint160 value2) internal pure {\n        assembly (\"memory-safe\") {\n            let fmp := mload(0x40)\n            mstore(fmp, selector)\n            mstore(add(fmp, 0x04), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(add(fmp, 0x24), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n            revert(fmp, 0x44)\n        }\n    }\n\n    /// @dev Reverts with a custom error with two address arguments\n    function revertWith(bytes4 selector, address value1, address value2) internal pure {\n        assembly (\"memory-safe\") {\n            let fmp := mload(0x40)\n            mstore(fmp, selector)\n            mstore(add(fmp, 0x04), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(add(fmp, 0x24), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n            revert(fmp, 0x44)\n        }\n    }\n\n    /// @notice bubble up the revert message returned by a call and revert with a wrapped ERC-7751 error\n    /// @dev this method can be vulnerable to revert data bombs\n    function bubbleUpAndRevertWith(\n        address revertingContract,\n        bytes4 revertingFunctionSelector,\n        bytes4 additionalContext\n    ) internal pure {\n        bytes4 wrappedErrorSelector = WrappedError.selector;\n        assembly (\"memory-safe\") {\n            // Ensure the size of the revert data is a multiple of 32 bytes\n            let encodedDataSize := mul(div(add(returndatasize(), 31), 32), 32)\n\n            let fmp := mload(0x40)\n\n            // Encode wrapped error selector, address, function selector, offset, additional context, size, revert reason\n            mstore(fmp, wrappedErrorSelector)\n            mstore(add(fmp, 0x04), and(revertingContract, 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(\n                add(fmp, 0x24),\n                and(revertingFunctionSelector, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n            )\n            // offset revert reason\n            mstore(add(fmp, 0x44), 0x80)\n            // offset additional context\n            mstore(add(fmp, 0x64), add(0xa0, encodedDataSize))\n            // size revert reason\n            mstore(add(fmp, 0x84), returndatasize())\n            // revert reason\n            returndatacopy(add(fmp, 0xa4), 0, returndatasize())\n            // size additional context\n            mstore(add(fmp, add(0xa4, encodedDataSize)), 0x04)\n            // additional context\n            mstore(\n                add(fmp, add(0xc4, encodedDataSize)),\n                and(additionalContext, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n            )\n            revert(fmp, add(0xe4, encodedDataSize))\n        }\n    }\n}\n"
			},
			"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @title Minimal ERC20 interface for Uniswap\n/// @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3\ninterface IERC20Minimal {\n    /// @notice Returns an account's balance in the token\n    /// @param account The account for which to look up the number of tokens it has, i.e. its balance\n    /// @return The number of tokens held by the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /// @notice Transfers the amount of token from the `msg.sender` to the recipient\n    /// @param recipient The account that will receive the amount transferred\n    /// @param amount The number of tokens to send from the sender to the recipient\n    /// @return Returns true for a successful transfer, false for an unsuccessful transfer\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /// @notice Returns the current allowance given to a spender by an owner\n    /// @param owner The account of the token owner\n    /// @param spender The account of the token spender\n    /// @return The current allowance granted by `owner` to `spender`\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n    /// @param spender The account which will be allowed to spend a given amount of the owners tokens\n    /// @param amount The amount of tokens allowed to be used by `spender`\n    /// @return Returns true for a successful approval, false for unsuccessful\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n    /// @param sender The account from which the transfer will be initiated\n    /// @param recipient The recipient of the transfer\n    /// @param amount The amount of the transfer\n    /// @return Returns true for a successful transfer, false for unsuccessful\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n    /// @param from The account from which the tokens were sent, i.e. the balance decreased\n    /// @param to The account to which the tokens were sent, i.e. the balance increased\n    /// @param value The amount of tokens that were transferred\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n    /// @param owner The account that approved spending of its tokens\n    /// @param spender The account for which the spending allowance was modified\n    /// @param value The new allowance from the owner to the spender\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@uniswap/v4-core/src/libraries/BitMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @title BitMath\n/// @dev This library provides functionality for computing bit properties of an unsigned integer\n/// @author Solady (https://github.com/Vectorized/solady/blob/8200a70e8dc2a77ecb074fc2e99a2a0d36547522/src/utils/LibBit.sol)\nlibrary BitMath {\n    /// @notice Returns the index of the most significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @param x the value for which to compute the most significant bit, must be greater than 0\n    /// @return r the index of the most significant bit\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        assembly (\"memory-safe\") {\n            r := shl(7, lt(0xffffffffffffffffffffffffffffffff, x))\n            r := or(r, shl(6, lt(0xffffffffffffffff, shr(r, x))))\n            r := or(r, shl(5, lt(0xffffffff, shr(r, x))))\n            r := or(r, shl(4, lt(0xffff, shr(r, x))))\n            r := or(r, shl(3, lt(0xff, shr(r, x))))\n            // forgefmt: disable-next-item\n            r := or(r, byte(and(0x1f, shr(shr(r, x), 0x8421084210842108cc6318c6db6d54be)),\n                0x0706060506020500060203020504000106050205030304010505030400000000))\n        }\n    }\n\n    /// @notice Returns the index of the least significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @param x the value for which to compute the least significant bit, must be greater than 0\n    /// @return r the index of the least significant bit\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        assembly (\"memory-safe\") {\n            // Isolate the least significant bit.\n            x := and(x, sub(0, x))\n            // For the upper 3 bits of the result, use a De Bruijn-like lookup.\n            // Credit to adhusson: https://blog.adhusson.com/cheap-find-first-set-evm/\n            // forgefmt: disable-next-item\n            r := shl(5, shr(252, shl(shl(2, shr(250, mul(x,\n                0xb6db6db6ddddddddd34d34d349249249210842108c6318c639ce739cffffffff))),\n                0x8040405543005266443200005020610674053026020000107506200176117077)))\n            // For the lower 5 bits of the result, use a De Bruijn lookup.\n            // forgefmt: disable-next-item\n            r := or(r, byte(and(div(0xd76453e0, shr(r, x)), 0x1f),\n                0x001f0d1e100c1d070f090b19131c1706010e11080a1a141802121b1503160405))\n        }\n    }\n}\n"
			},
			"@uniswap/v4-core/src/interfaces/IExttload.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @notice Interface for functions to access any transient storage slot in a contract\ninterface IExttload {\n    /// @notice Called by external contracts to access transient storage of the contract\n    /// @param slot Key of slot to tload\n    /// @return value The value of the slot as bytes32\n    function exttload(bytes32 slot) external view returns (bytes32 value);\n\n    /// @notice Called by external contracts to access sparse transient pool state\n    /// @param slots List of slots to tload\n    /// @return values List of loaded values\n    function exttload(bytes32[] calldata slots) external view returns (bytes32[] memory values);\n}\n"
			},
			"@uniswap/v4-core/src/interfaces/IExtsload.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice Interface for functions to access any storage slot in a contract\ninterface IExtsload {\n    /// @notice Called by external contracts to access granular pool state\n    /// @param slot Key of slot to sload\n    /// @return value The value of the slot as bytes32\n    function extsload(bytes32 slot) external view returns (bytes32 value);\n\n    /// @notice Called by external contracts to access granular pool state\n    /// @param startSlot Key of slot to start sloading from\n    /// @param nSlots Number of slots to load into return value\n    /// @return values List of loaded values.\n    function extsload(bytes32 startSlot, uint256 nSlots) external view returns (bytes32[] memory values);\n\n    /// @notice Called by external contracts to access sparse pool state\n    /// @param slots List of slots to SLOAD from.\n    /// @return values List of loaded values.\n    function extsload(bytes32[] calldata slots) external view returns (bytes32[] memory values);\n}\n"
			},
			"@uniswap/v4-core/src/interfaces/IProtocolFees.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Currency} from \"../types/Currency.sol\";\nimport {PoolId} from \"../types/PoolId.sol\";\nimport {PoolKey} from \"../types/PoolKey.sol\";\n\n/// @notice Interface for all protocol-fee related functions in the pool manager\ninterface IProtocolFees {\n    /// @notice Thrown when protocol fee is set too high\n    error ProtocolFeeTooLarge(uint24 fee);\n\n    /// @notice Thrown when collectProtocolFees or setProtocolFee is not called by the controller.\n    error InvalidCaller();\n\n    /// @notice Thrown when collectProtocolFees is attempted on a token that is synced.\n    error ProtocolFeeCurrencySynced();\n\n    /// @notice Emitted when the protocol fee controller address is updated in setProtocolFeeController.\n    event ProtocolFeeControllerUpdated(address indexed protocolFeeController);\n\n    /// @notice Emitted when the protocol fee is updated for a pool.\n    event ProtocolFeeUpdated(PoolId indexed id, uint24 protocolFee);\n\n    /// @notice Given a currency address, returns the protocol fees accrued in that currency\n    /// @param currency The currency to check\n    /// @return amount The amount of protocol fees accrued in the currency\n    function protocolFeesAccrued(Currency currency) external view returns (uint256 amount);\n\n    /// @notice Sets the protocol fee for the given pool\n    /// @param key The key of the pool to set a protocol fee for\n    /// @param newProtocolFee The fee to set\n    function setProtocolFee(PoolKey memory key, uint24 newProtocolFee) external;\n\n    /// @notice Sets the protocol fee controller\n    /// @param controller The new protocol fee controller\n    function setProtocolFeeController(address controller) external;\n\n    /// @notice Collects the protocol fees for a given recipient and currency, returning the amount collected\n    /// @dev This will revert if the contract is unlocked\n    /// @param recipient The address to receive the protocol fees\n    /// @param currency The currency to withdraw\n    /// @param amount The amount of currency to withdraw\n    /// @return amountCollected The amount of currency successfully withdrawn\n    function collectProtocolFees(address recipient, Currency currency, uint256 amount)\n        external\n        returns (uint256 amountCollected);\n\n    /// @notice Returns the current protocol fee controller address\n    /// @return address The current protocol fee controller address\n    function protocolFeeController() external view returns (address);\n}\n"
			},
			"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice Interface for claims over a contract balance, wrapped as a ERC6909\ninterface IERC6909Claims {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event OperatorSet(address indexed owner, address indexed operator, bool approved);\n\n    event Approval(address indexed owner, address indexed spender, uint256 indexed id, uint256 amount);\n\n    event Transfer(address caller, address indexed from, address indexed to, uint256 indexed id, uint256 amount);\n\n    /*//////////////////////////////////////////////////////////////\n                                 FUNCTIONS\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Owner balance of an id.\n    /// @param owner The address of the owner.\n    /// @param id The id of the token.\n    /// @return amount The balance of the token.\n    function balanceOf(address owner, uint256 id) external view returns (uint256 amount);\n\n    /// @notice Spender allowance of an id.\n    /// @param owner The address of the owner.\n    /// @param spender The address of the spender.\n    /// @param id The id of the token.\n    /// @return amount The allowance of the token.\n    function allowance(address owner, address spender, uint256 id) external view returns (uint256 amount);\n\n    /// @notice Checks if a spender is approved by an owner as an operator\n    /// @param owner The address of the owner.\n    /// @param spender The address of the spender.\n    /// @return approved The approval status.\n    function isOperator(address owner, address spender) external view returns (bool approved);\n\n    /// @notice Transfers an amount of an id from the caller to a receiver.\n    /// @param receiver The address of the receiver.\n    /// @param id The id of the token.\n    /// @param amount The amount of the token.\n    /// @return bool True, always, unless the function reverts\n    function transfer(address receiver, uint256 id, uint256 amount) external returns (bool);\n\n    /// @notice Transfers an amount of an id from a sender to a receiver.\n    /// @param sender The address of the sender.\n    /// @param receiver The address of the receiver.\n    /// @param id The id of the token.\n    /// @param amount The amount of the token.\n    /// @return bool True, always, unless the function reverts\n    function transferFrom(address sender, address receiver, uint256 id, uint256 amount) external returns (bool);\n\n    /// @notice Approves an amount of an id to a spender.\n    /// @param spender The address of the spender.\n    /// @param id The id of the token.\n    /// @param amount The amount of the token.\n    /// @return bool True, always\n    function approve(address spender, uint256 id, uint256 amount) external returns (bool);\n\n    /// @notice Sets or removes an operator for the caller.\n    /// @param operator The address of the operator.\n    /// @param approved The approval status.\n    /// @return bool True, always\n    function setOperator(address operator, bool approved) external returns (bool);\n}\n"
			},
			"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice Interface for the callback executed when an address unlocks the pool manager\ninterface IUnlockCallback {\n    /// @notice Called by the pool manager on `msg.sender` when the manager is unlocked\n    /// @param data The data that was passed to the call to unlock\n    /// @return Any data that you want to be returned from the unlock call\n    function unlockCallback(bytes calldata data) external returns (bytes memory);\n}\n"
			},
			"@uniswap/v4-core/src/libraries/Lock.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.24;\n\n/// @notice This is a temporary library that allows us to use transient storage (tstore/tload)\n/// TODO: This library can be deleted when we have the transient keyword support in solidity.\nlibrary Lock {\n    // The slot holding the unlocked state, transiently. bytes32(uint256(keccak256(\"Unlocked\")) - 1)\n    bytes32 internal constant IS_UNLOCKED_SLOT = 0xc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab23;\n\n    function unlock() internal {\n        assembly (\"memory-safe\") {\n            // unlock\n            tstore(IS_UNLOCKED_SLOT, true)\n        }\n    }\n\n    function lock() internal {\n        assembly (\"memory-safe\") {\n            tstore(IS_UNLOCKED_SLOT, false)\n        }\n    }\n\n    function isUnlocked() internal view returns (bool unlocked) {\n        assembly (\"memory-safe\") {\n            unlocked := tload(IS_UNLOCKED_SLOT)\n        }\n    }\n}\n"
			},
			"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.24;\n\n/// @notice This is a temporary library that allows us to use transient storage (tstore/tload)\n/// for the nonzero delta count.\n/// TODO: This library can be deleted when we have the transient keyword support in solidity.\nlibrary NonzeroDeltaCount {\n    // The slot holding the number of nonzero deltas. bytes32(uint256(keccak256(\"NonzeroDeltaCount\")) - 1)\n    bytes32 internal constant NONZERO_DELTA_COUNT_SLOT =\n        0x7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b;\n\n    function read() internal view returns (uint256 count) {\n        assembly (\"memory-safe\") {\n            count := tload(NONZERO_DELTA_COUNT_SLOT)\n        }\n    }\n\n    function increment() internal {\n        assembly (\"memory-safe\") {\n            let count := tload(NONZERO_DELTA_COUNT_SLOT)\n            count := add(count, 1)\n            tstore(NONZERO_DELTA_COUNT_SLOT, count)\n        }\n    }\n\n    /// @notice Potential to underflow. Ensure checks are performed by integrating contracts to ensure this does not happen.\n    /// Current usage ensures this will not happen because we call decrement with known boundaries (only up to the number of times we call increment).\n    function decrement() internal {\n        assembly (\"memory-safe\") {\n            let count := tload(NONZERO_DELTA_COUNT_SLOT)\n            count := sub(count, 1)\n            tstore(NONZERO_DELTA_COUNT_SLOT, count)\n        }\n    }\n}\n"
			},
			"@uniswap/v4-core/src/libraries/CurrencyReserves.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.24;\n\nimport {Currency} from \"../types/Currency.sol\";\nimport {CustomRevert} from \"./CustomRevert.sol\";\n\nlibrary CurrencyReserves {\n    using CustomRevert for bytes4;\n\n    /// bytes32(uint256(keccak256(\"ReservesOf\")) - 1)\n    bytes32 constant RESERVES_OF_SLOT = 0x1e0745a7db1623981f0b2a5d4232364c00787266eb75ad546f190e6cebe9bd95;\n    /// bytes32(uint256(keccak256(\"Currency\")) - 1)\n    bytes32 constant CURRENCY_SLOT = 0x27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b9;\n\n    function getSyncedCurrency() internal view returns (Currency currency) {\n        assembly (\"memory-safe\") {\n            currency := tload(CURRENCY_SLOT)\n        }\n    }\n\n    function resetCurrency() internal {\n        assembly (\"memory-safe\") {\n            tstore(CURRENCY_SLOT, 0)\n        }\n    }\n\n    function syncCurrencyAndReserves(Currency currency, uint256 value) internal {\n        assembly (\"memory-safe\") {\n            tstore(CURRENCY_SLOT, and(currency, 0xffffffffffffffffffffffffffffffffffffffff))\n            tstore(RESERVES_OF_SLOT, value)\n        }\n    }\n\n    function getSyncedReserves() internal view returns (uint256 value) {\n        assembly (\"memory-safe\") {\n            value := tload(RESERVES_OF_SLOT)\n        }\n    }\n}\n"
			},
			"@uniswap/v4-core/src/types/BeforeSwapDelta.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// Return type of the beforeSwap hook.\n// Upper 128 bits is the delta in specified tokens. Lower 128 bits is delta in unspecified tokens (to match the afterSwap hook)\ntype BeforeSwapDelta is int256;\n\n// Creates a BeforeSwapDelta from specified and unspecified\nfunction toBeforeSwapDelta(int128 deltaSpecified, int128 deltaUnspecified)\n    pure\n    returns (BeforeSwapDelta beforeSwapDelta)\n{\n    assembly (\"memory-safe\") {\n        beforeSwapDelta := or(shl(128, deltaSpecified), and(sub(shl(128, 1), 1), deltaUnspecified))\n    }\n}\n\n/// @notice Library for getting the specified and unspecified deltas from the BeforeSwapDelta type\nlibrary BeforeSwapDeltaLibrary {\n    /// @notice A BeforeSwapDelta of 0\n    BeforeSwapDelta public constant ZERO_DELTA = BeforeSwapDelta.wrap(0);\n\n    /// extracts int128 from the upper 128 bits of the BeforeSwapDelta\n    /// returned by beforeSwap\n    function getSpecifiedDelta(BeforeSwapDelta delta) internal pure returns (int128 deltaSpecified) {\n        assembly (\"memory-safe\") {\n            deltaSpecified := sar(128, delta)\n        }\n    }\n\n    /// extracts int128 from the lower 128 bits of the BeforeSwapDelta\n    /// returned by beforeSwap and afterSwap\n    function getUnspecifiedDelta(BeforeSwapDelta delta) internal pure returns (int128 deltaUnspecified) {\n        assembly (\"memory-safe\") {\n            deltaUnspecified := signextend(15, delta)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/interfaces/IExtsload.sol": {
				"IExtsload": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "extsload",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "value",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "startSlot",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "nSlots",
									"type": "uint256"
								}
							],
							"name": "extsload",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "values",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "slots",
									"type": "bytes32[]"
								}
							],
							"name": "extsload",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "values",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"extsload(bytes32)": {
								"params": {
									"slot": "Key of slot to sload"
								},
								"returns": {
									"value": "The value of the slot as bytes32"
								}
							},
							"extsload(bytes32,uint256)": {
								"params": {
									"nSlots": "Number of slots to load into return value",
									"startSlot": "Key of slot to start sloading from"
								},
								"returns": {
									"values": "List of loaded values."
								}
							},
							"extsload(bytes32[])": {
								"params": {
									"slots": "List of slots to SLOAD from."
								},
								"returns": {
									"values": "List of loaded values."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"extsload(bytes32)": "1e2eaeaf",
							"extsload(bytes32,uint256)": "35fd631a",
							"extsload(bytes32[])": "dbd035ff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"startSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nSlots\",\"type\":\"uint256\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"extsload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to sload\"},\"returns\":{\"value\":\"The value of the slot as bytes32\"}},\"extsload(bytes32,uint256)\":{\"params\":{\"nSlots\":\"Number of slots to load into return value\",\"startSlot\":\"Key of slot to start sloading from\"},\"returns\":{\"values\":\"List of loaded values.\"}},\"extsload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to SLOAD from.\"},\"returns\":{\"values\":\"List of loaded values.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"extsload(bytes32)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32,uint256)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse pool state\"}},\"notice\":\"Interface for functions to access any storage slot in a contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/interfaces/IExtsload.sol\":\"IExtsload\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"extsload(bytes32)": {
								"notice": "Called by external contracts to access granular pool state"
							},
							"extsload(bytes32,uint256)": {
								"notice": "Called by external contracts to access granular pool state"
							},
							"extsload(bytes32[])": {
								"notice": "Called by external contracts to access sparse pool state"
							}
						},
						"notice": "Interface for functions to access any storage slot in a contract",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/interfaces/IExttload.sol": {
				"IExttload": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "slots",
									"type": "bytes32[]"
								}
							],
							"name": "exttload",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "values",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "exttload",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "value",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exttload(bytes32)": {
								"params": {
									"slot": "Key of slot to tload"
								},
								"returns": {
									"value": "The value of the slot as bytes32"
								}
							},
							"exttload(bytes32[])": {
								"params": {
									"slots": "List of slots to tload"
								},
								"returns": {
									"values": "List of loaded values"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exttload(bytes32)": "f135baaa",
							"exttload(bytes32[])": "9bf6645f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exttload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to tload\"},\"returns\":{\"value\":\"The value of the slot as bytes32\"}},\"exttload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to tload\"},\"returns\":{\"values\":\"List of loaded values\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exttload(bytes32)\":{\"notice\":\"Called by external contracts to access transient storage of the contract\"},\"exttload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse transient pool state\"}},\"notice\":\"Interface for functions to access any transient storage slot in a contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/interfaces/IExttload.sol\":\"IExttload\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exttload(bytes32)": {
								"notice": "Called by external contracts to access transient storage of the contract"
							},
							"exttload(bytes32[])": {
								"notice": "Called by external contracts to access sparse transient pool state"
							}
						},
						"notice": "Interface for functions to access any transient storage slot in a contract",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/interfaces/IHooks.sol": {
				"IHooks": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "int256",
											"name": "liquidityDelta",
											"type": "int256"
										},
										{
											"internalType": "bytes32",
											"name": "salt",
											"type": "bytes32"
										}
									],
									"internalType": "struct ModifyLiquidityParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "BalanceDelta",
									"name": "delta",
									"type": "int256"
								},
								{
									"internalType": "BalanceDelta",
									"name": "feesAccrued",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "afterAddLiquidity",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								},
								{
									"internalType": "BalanceDelta",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "afterDonate",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "afterInitialize",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "int256",
											"name": "liquidityDelta",
											"type": "int256"
										},
										{
											"internalType": "bytes32",
											"name": "salt",
											"type": "bytes32"
										}
									],
									"internalType": "struct ModifyLiquidityParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "BalanceDelta",
									"name": "delta",
									"type": "int256"
								},
								{
									"internalType": "BalanceDelta",
									"name": "feesAccrued",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "afterRemoveLiquidity",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								},
								{
									"internalType": "BalanceDelta",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "zeroForOne",
											"type": "bool"
										},
										{
											"internalType": "int256",
											"name": "amountSpecified",
											"type": "int256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct SwapParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "BalanceDelta",
									"name": "delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "afterSwap",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								},
								{
									"internalType": "int128",
									"name": "",
									"type": "int128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "int256",
											"name": "liquidityDelta",
											"type": "int256"
										},
										{
											"internalType": "bytes32",
											"name": "salt",
											"type": "bytes32"
										}
									],
									"internalType": "struct ModifyLiquidityParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "beforeAddLiquidity",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "beforeDonate",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "beforeInitialize",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "int256",
											"name": "liquidityDelta",
											"type": "int256"
										},
										{
											"internalType": "bytes32",
											"name": "salt",
											"type": "bytes32"
										}
									],
									"internalType": "struct ModifyLiquidityParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "beforeRemoveLiquidity",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "zeroForOne",
											"type": "bool"
										},
										{
											"internalType": "int256",
											"name": "amountSpecified",
											"type": "int256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct SwapParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "beforeSwap",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								},
								{
									"internalType": "BeforeSwapDelta",
									"name": "",
									"type": "int256"
								},
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Should only be callable by the v4 PoolManager.",
						"kind": "dev",
						"methods": {
							"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
								"params": {
									"delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
									"feesAccrued": "The fees accrued since the last time fees were collected from this position",
									"hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
									"key": "The key for the pool",
									"params": "The parameters for adding liquidity",
									"sender": "The initial msg.sender for the add liquidity call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook",
									"_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
								}
							},
							"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
								"params": {
									"amount0": "The amount of token0 being donated",
									"amount1": "The amount of token1 being donated",
									"hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
									"key": "The key for the pool",
									"sender": "The initial msg.sender for the donate call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook"
								}
							},
							"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
								"params": {
									"key": "The key for the pool being initialized",
									"sender": "The initial msg.sender for the initialize call",
									"sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96",
									"tick": "The current tick after the state of a pool is initialized"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook"
								}
							},
							"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
								"params": {
									"delta": "The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta",
									"feesAccrued": "The fees accrued since the last time fees were collected from this position",
									"hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
									"key": "The key for the pool",
									"params": "The parameters for removing liquidity",
									"sender": "The initial msg.sender for the remove liquidity call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook",
									"_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
								}
							},
							"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
								"params": {
									"delta": "The amount owed to the caller (positive) or owed to the pool (negative)",
									"hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
									"key": "The key for the pool",
									"params": "The parameters for the swap",
									"sender": "The initial msg.sender for the swap call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook",
									"_1": "int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
								}
							},
							"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
								"params": {
									"hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
									"key": "The key for the pool",
									"params": "The parameters for adding liquidity",
									"sender": "The initial msg.sender for the add liquidity call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook"
								}
							},
							"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
								"params": {
									"amount0": "The amount of token0 being donated",
									"amount1": "The amount of token1 being donated",
									"hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
									"key": "The key for the pool",
									"sender": "The initial msg.sender for the donate call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook"
								}
							},
							"beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
								"params": {
									"key": "The key for the pool being initialized",
									"sender": "The initial msg.sender for the initialize call",
									"sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook"
								}
							},
							"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
								"params": {
									"hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
									"key": "The key for the pool",
									"params": "The parameters for removing liquidity",
									"sender": "The initial msg.sender for the remove liquidity call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook"
								}
							},
							"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
								"params": {
									"hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
									"key": "The key for the pool",
									"params": "The parameters for the swap",
									"sender": "The initial msg.sender for the swap call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook",
									"_1": "BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency",
									"_2": "uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "9f063efc",
							"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "e1b4af69",
							"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": "6fe7e6eb",
							"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "6c2bbe7e",
							"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": "b47b2fb1",
							"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "259982e5",
							"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "b6a8b0fa",
							"beforeInitialize(address,(address,address,uint24,int24,address),uint160)": "dc98354e",
							"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "21d0ee70",
							"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "575e24b4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Should only be callable by the v4 PoolManager.\",\"kind\":\"dev\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"params\":{\"delta\":\"The amount owed to the caller (positive) or owed to the pool (negative)\",\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"_2\":\"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is added\"},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"notice\":\"The hook called after a swap\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"notice\":\"The hook called before the state of a pool is initialized\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"The hook called before a swap\"}},\"notice\":\"V4 decides whether to invoke specific hooks by inspecting the least significant bits of the address that the hooks contract is deployed to. For example, a hooks contract deployed to address: 0x0000000000000000000000000000000000002400 has the lowest bits '10 0100 0000 0000' which would cause the 'before initialize' and 'after add liquidity' hooks to be used. See the Hooks library for the full spec.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/interfaces/IHooks.sol\":\"IHooks\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
								"notice": "The hook called after liquidity is added"
							},
							"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
								"notice": "The hook called after donate"
							},
							"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
								"notice": "The hook called after the state of a pool is initialized"
							},
							"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
								"notice": "The hook called after liquidity is removed"
							},
							"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
								"notice": "The hook called after a swap"
							},
							"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
								"notice": "The hook called before liquidity is added"
							},
							"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
								"notice": "The hook called before donate"
							},
							"beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
								"notice": "The hook called before the state of a pool is initialized"
							},
							"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
								"notice": "The hook called before liquidity is removed"
							},
							"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
								"notice": "The hook called before a swap"
							}
						},
						"notice": "V4 decides whether to invoke specific hooks by inspecting the least significant bits of the address that the hooks contract is deployed to. For example, a hooks contract deployed to address: 0x0000000000000000000000000000000000002400 has the lowest bits '10 0100 0000 0000' which would cause the 'before initialize' and 'after add liquidity' hooks to be used. See the Hooks library for the full spec.",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/interfaces/IPoolManager.sol": {
				"IPoolManager": {
					"abi": [
						{
							"inputs": [],
							"name": "AlreadyUnlocked",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "currency1",
									"type": "address"
								}
							],
							"name": "CurrenciesOutOfOrderOrEqual",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CurrencyNotSettled",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ManagerLocked",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MustClearExactPositiveDelta",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NonzeroNativeValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PoolNotInitialized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ProtocolFeeCurrencySynced",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "ProtocolFeeTooLarge",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SwapAmountCannotBeZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "TickSpacingTooLarge",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "TickSpacingTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnauthorizedDynamicLPFeeUpdate",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "PoolId",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Donate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "PoolId",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "Currency",
									"name": "currency0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "Currency",
									"name": "currency1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "contract IHooks",
									"name": "hooks",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "PoolId",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "liquidityDelta",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "ModifyLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "OperatorSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "protocolFeeController",
									"type": "address"
								}
							],
							"name": "ProtocolFeeControllerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "PoolId",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "protocolFee",
									"type": "uint24"
								}
							],
							"name": "ProtocolFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "PoolId",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int128",
									"name": "amount0",
									"type": "int128"
								},
								{
									"indexed": false,
									"internalType": "int128",
									"name": "amount1",
									"type": "int128"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "clear",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "collectProtocolFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountCollected",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "donate",
							"outputs": [
								{
									"internalType": "BalanceDelta",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "extsload",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "value",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "startSlot",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "nSlots",
									"type": "uint256"
								}
							],
							"name": "extsload",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "values",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "slots",
									"type": "bytes32[]"
								}
							],
							"name": "extsload",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "values",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "slots",
									"type": "bytes32[]"
								}
							],
							"name": "exttload",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "values",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "exttload",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "value",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "int256",
											"name": "liquidityDelta",
											"type": "int256"
										},
										{
											"internalType": "bytes32",
											"name": "salt",
											"type": "bytes32"
										}
									],
									"internalType": "struct ModifyLiquidityParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "modifyLiquidity",
							"outputs": [
								{
									"internalType": "BalanceDelta",
									"name": "callerDelta",
									"type": "int256"
								},
								{
									"internalType": "BalanceDelta",
									"name": "feesAccrued",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFeeController",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "protocolFeesAccrued",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint24",
									"name": "newProtocolFee",
									"type": "uint24"
								}
							],
							"name": "setProtocolFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "setProtocolFeeController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "settle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "paid",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "settleFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "paid",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "zeroForOne",
											"type": "bool"
										},
										{
											"internalType": "int256",
											"name": "amountSpecified",
											"type": "int256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct SwapParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "BalanceDelta",
									"name": "swapDelta",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "take",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "unlock",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint24",
									"name": "newDynamicLPFee",
									"type": "uint24"
								}
							],
							"name": "updateDynamicLPFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Donate(bytes32,address,uint256,uint256)": {
								"params": {
									"amount0": "The amount donated in currency0",
									"amount1": "The amount donated in currency1",
									"id": "The abi encoded hash of the pool key struct for the pool that was donated to",
									"sender": "The address that initiated the donate call"
								}
							},
							"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)": {
								"params": {
									"currency0": "The first currency of the pool by address sort order",
									"currency1": "The second currency of the pool by address sort order",
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"hooks": "The hooks contract address for the pool, or address(0) if none",
									"id": "The abi encoded hash of the pool key struct for the new pool",
									"sqrtPriceX96": "The price of the pool on initialization",
									"tick": "The initial tick of the pool corresponding to the initialized price",
									"tickSpacing": "The minimum number of ticks between initialized ticks"
								}
							},
							"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)": {
								"params": {
									"id": "The abi encoded hash of the pool key struct for the pool that was modified",
									"liquidityDelta": "The amount of liquidity that was added or removed",
									"salt": "The extra data to make positions unique",
									"sender": "The address that modified the pool",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)": {
								"params": {
									"amount0": "The delta of the currency0 balance of the pool",
									"amount1": "The delta of the currency1 balance of the pool",
									"fee": "The swap fee in hundredths of a bip",
									"id": "The abi encoded hash of the pool key struct for the pool that was modified",
									"liquidity": "The liquidity of the pool after the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of the price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address,uint256)": {
								"params": {
									"id": "The id of the token.",
									"owner": "The address of the owner.",
									"spender": "The address of the spender."
								},
								"returns": {
									"amount": "The allowance of the token."
								}
							},
							"approve(address,uint256,uint256)": {
								"params": {
									"amount": "The amount of the token.",
									"id": "The id of the token.",
									"spender": "The address of the spender."
								},
								"returns": {
									"_0": "bool True, always"
								}
							},
							"balanceOf(address,uint256)": {
								"params": {
									"id": "The id of the token.",
									"owner": "The address of the owner."
								},
								"returns": {
									"amount": "The balance of the token."
								}
							},
							"burn(address,uint256,uint256)": {
								"details": "The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out",
								"params": {
									"amount": "The amount of currency to burn",
									"from": "The address to burn the tokens from",
									"id": "The currency address to burn from ERC6909s, as a uint256"
								}
							},
							"clear(address,uint256)": {
								"details": "This could be used to clear a balance that is considered dust. Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared."
							},
							"collectProtocolFees(address,address,uint256)": {
								"details": "This will revert if the contract is unlocked",
								"params": {
									"amount": "The amount of currency to withdraw",
									"currency": "The currency to withdraw",
									"recipient": "The address to receive the protocol fees"
								},
								"returns": {
									"amountCollected": "The amount of currency successfully withdrawn"
								}
							},
							"donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
								"details": "Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds. Donors should keep this in mind when designing donation mechanisms.This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)). Read the comments in `Pool.swap()` for more information about this.",
								"params": {
									"amount0": "The amount of currency0 to donate",
									"amount1": "The amount of currency1 to donate",
									"hookData": "The data to pass through to the donate hooks",
									"key": "The key of the pool to donate to"
								},
								"returns": {
									"_0": "BalanceDelta The delta of the caller after the donate"
								}
							},
							"extsload(bytes32)": {
								"params": {
									"slot": "Key of slot to sload"
								},
								"returns": {
									"value": "The value of the slot as bytes32"
								}
							},
							"extsload(bytes32,uint256)": {
								"params": {
									"nSlots": "Number of slots to load into return value",
									"startSlot": "Key of slot to start sloading from"
								},
								"returns": {
									"values": "List of loaded values."
								}
							},
							"extsload(bytes32[])": {
								"params": {
									"slots": "List of slots to SLOAD from."
								},
								"returns": {
									"values": "List of loaded values."
								}
							},
							"exttload(bytes32)": {
								"params": {
									"slot": "Key of slot to tload"
								},
								"returns": {
									"value": "The value of the slot as bytes32"
								}
							},
							"exttload(bytes32[])": {
								"params": {
									"slots": "List of slots to tload"
								},
								"returns": {
									"values": "List of loaded values"
								}
							},
							"initialize((address,address,uint24,int24,address),uint160)": {
								"details": "A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee",
								"params": {
									"key": "The pool key for the pool to initialize",
									"sqrtPriceX96": "The initial square root price"
								},
								"returns": {
									"tick": "The initial tick of the pool"
								}
							},
							"isOperator(address,address)": {
								"params": {
									"owner": "The address of the owner.",
									"spender": "The address of the spender."
								},
								"returns": {
									"approved": "The approval status."
								}
							},
							"mint(address,uint256,uint256)": {
								"details": "The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out",
								"params": {
									"amount": "The amount of currency to mint",
									"id": "The currency address to mint to ERC6909s, as a uint256",
									"to": "The address to mint the tokens to"
								}
							},
							"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
								"details": "Poke by calling with a zero liquidityDeltaNote that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued) atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme",
								"params": {
									"hookData": "The data to pass through to the add/removeLiquidity hooks",
									"key": "The pool to modify liquidity in",
									"params": "The parameters for modifying the liquidity"
								},
								"returns": {
									"callerDelta": "The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable",
									"feesAccrued": "The balance delta of the fees generated in the liquidity range. Returned for informational purposes"
								}
							},
							"protocolFeeController()": {
								"returns": {
									"_0": "address The current protocol fee controller address"
								}
							},
							"protocolFeesAccrued(address)": {
								"params": {
									"currency": "The currency to check"
								},
								"returns": {
									"amount": "The amount of protocol fees accrued in the currency"
								}
							},
							"setOperator(address,bool)": {
								"params": {
									"approved": "The approval status.",
									"operator": "The address of the operator."
								},
								"returns": {
									"_0": "bool True, always"
								}
							},
							"setProtocolFee((address,address,uint24,int24,address),uint24)": {
								"params": {
									"key": "The key of the pool to set a protocol fee for",
									"newProtocolFee": "The fee to set"
								}
							},
							"setProtocolFeeController(address)": {
								"params": {
									"controller": "The new protocol fee controller"
								}
							},
							"settle()": {
								"returns": {
									"paid": "The amount of currency settled"
								}
							},
							"settleFor(address)": {
								"params": {
									"recipient": "The address to credit for the payment"
								},
								"returns": {
									"paid": "The amount of currency settled"
								}
							},
							"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
								"details": "Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.",
								"params": {
									"hookData": "The data to pass through to the swap hooks",
									"key": "The pool to swap in",
									"params": "The parameters for swapping"
								},
								"returns": {
									"swapDelta": "The balance delta of the address swapping"
								}
							},
							"sync(address)": {
								"details": "This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped for native tokens because the amount to settle is determined by the sent value. However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle native funds, this function can be called with the native currency to then be able to settle the native currency"
							},
							"take(address,address,uint256)": {
								"details": "Will revert if the requested amount is not available, consider using `mint` insteadCan also be used as a mechanism for free flash loans",
								"params": {
									"amount": "The amount of currency to withdraw",
									"currency": "The currency to withdraw from the pool manager",
									"to": "The address to withdraw to"
								}
							},
							"transfer(address,uint256,uint256)": {
								"params": {
									"amount": "The amount of the token.",
									"id": "The id of the token.",
									"receiver": "The address of the receiver."
								},
								"returns": {
									"_0": "bool True, always, unless the function reverts"
								}
							},
							"transferFrom(address,address,uint256,uint256)": {
								"params": {
									"amount": "The amount of the token.",
									"id": "The id of the token.",
									"receiver": "The address of the receiver.",
									"sender": "The address of the sender."
								},
								"returns": {
									"_0": "bool True, always, unless the function reverts"
								}
							},
							"unlock(bytes)": {
								"details": "The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`",
								"params": {
									"data": "Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`"
								},
								"returns": {
									"_0": "The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`"
								}
							},
							"updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
								"details": "A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee",
								"params": {
									"key": "The key of the pool to update dynamic LP fees for",
									"newDynamicLPFee": "The new dynamic pool LP fee"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address,uint256)": "598af9e7",
							"approve(address,uint256,uint256)": "426a8493",
							"balanceOf(address,uint256)": "00fdd58e",
							"burn(address,uint256,uint256)": "f5298aca",
							"clear(address,uint256)": "80f0b44c",
							"collectProtocolFees(address,address,uint256)": "8161b874",
							"donate((address,address,uint24,int24,address),uint256,uint256,bytes)": "234266d7",
							"extsload(bytes32)": "1e2eaeaf",
							"extsload(bytes32,uint256)": "35fd631a",
							"extsload(bytes32[])": "dbd035ff",
							"exttload(bytes32)": "f135baaa",
							"exttload(bytes32[])": "9bf6645f",
							"initialize((address,address,uint24,int24,address),uint160)": "6276cbbe",
							"isOperator(address,address)": "b6363cf2",
							"mint(address,uint256,uint256)": "156e29f6",
							"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "5a6bcfda",
							"protocolFeeController()": "f02de3b2",
							"protocolFeesAccrued(address)": "97e8cd4e",
							"setOperator(address,bool)": "558a7297",
							"setProtocolFee((address,address,uint24,int24,address),uint24)": "7e87ce7d",
							"setProtocolFeeController(address)": "2d771389",
							"settle()": "11da60b4",
							"settleFor(address)": "3dd45adb",
							"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "f3cd914c",
							"sync(address)": "a5841194",
							"take(address,address,uint256)": "0b0d9c09",
							"transfer(address,uint256,uint256)": "095bcdb6",
							"transferFrom(address,address,uint256,uint256)": "fe99049a",
							"unlock(bytes)": "48c89491",
							"updateDynamicLPFee((address,address,uint24,int24,address),uint24)": "52759651"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyUnlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency1\",\"type\":\"address\"}],\"name\":\"CurrenciesOutOfOrderOrEqual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ManagerLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustClearExactPositiveDelta\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonzeroNativeValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeCurrencySynced\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapAmountCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacingTooLarge\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacingTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedDynamicLPFeeUpdate\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Donate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ModifyLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"OperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"protocolFee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount0\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount1\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collectProtocolFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"donate\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"startSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nSlots\",\"type\":\"uint256\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"modifyLiquidity\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"callerDelta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"protocolFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newProtocolFee\",\"type\":\"uint24\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"settleFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"swapDelta\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"take\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlock\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newDynamicLPFee\",\"type\":\"uint24\"}],\"name\":\"updateDynamicLPFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Donate(bytes32,address,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount donated in currency0\",\"amount1\":\"The amount donated in currency1\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was donated to\",\"sender\":\"The address that initiated the donate call\"}},\"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)\":{\"params\":{\"currency0\":\"The first currency of the pool by address sort order\",\"currency1\":\"The second currency of the pool by address sort order\",\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"hooks\":\"The hooks contract address for the pool, or address(0) if none\",\"id\":\"The abi encoded hash of the pool key struct for the new pool\",\"sqrtPriceX96\":\"The price of the pool on initialization\",\"tick\":\"The initial tick of the pool corresponding to the initialized price\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\"}},\"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)\":{\"params\":{\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidityDelta\":\"The amount of liquidity that was added or removed\",\"salt\":\"The extra data to make positions unique\",\"sender\":\"The address that modified the pool\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"params\":{\"amount0\":\"The delta of the currency0 balance of the pool\",\"amount1\":\"The delta of the currency1 balance of the pool\",\"fee\":\"The swap fee in hundredths of a bip\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidity\":\"The liquidity of the pool after the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of the price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,uint256)\":{\"params\":{\"id\":\"The id of the token.\",\"owner\":\"The address of the owner.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"amount\":\"The allowance of the token.\"}},\"approve(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"balanceOf(address,uint256)\":{\"params\":{\"id\":\"The id of the token.\",\"owner\":\"The address of the owner.\"},\"returns\":{\"amount\":\"The balance of the token.\"}},\"burn(address,uint256,uint256)\":{\"details\":\"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out\",\"params\":{\"amount\":\"The amount of currency to burn\",\"from\":\"The address to burn the tokens from\",\"id\":\"The currency address to burn from ERC6909s, as a uint256\"}},\"clear(address,uint256)\":{\"details\":\"This could be used to clear a balance that is considered dust. Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared.\"},\"collectProtocolFees(address,address,uint256)\":{\"details\":\"This will revert if the contract is unlocked\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw\",\"recipient\":\"The address to receive the protocol fees\"},\"returns\":{\"amountCollected\":\"The amount of currency successfully withdrawn\"}},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"details\":\"Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds. Donors should keep this in mind when designing donation mechanisms.This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)). Read the comments in `Pool.swap()` for more information about this.\",\"params\":{\"amount0\":\"The amount of currency0 to donate\",\"amount1\":\"The amount of currency1 to donate\",\"hookData\":\"The data to pass through to the donate hooks\",\"key\":\"The key of the pool to donate to\"},\"returns\":{\"_0\":\"BalanceDelta The delta of the caller after the donate\"}},\"extsload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to sload\"},\"returns\":{\"value\":\"The value of the slot as bytes32\"}},\"extsload(bytes32,uint256)\":{\"params\":{\"nSlots\":\"Number of slots to load into return value\",\"startSlot\":\"Key of slot to start sloading from\"},\"returns\":{\"values\":\"List of loaded values.\"}},\"extsload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to SLOAD from.\"},\"returns\":{\"values\":\"List of loaded values.\"}},\"exttload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to tload\"},\"returns\":{\"value\":\"The value of the slot as bytes32\"}},\"exttload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to tload\"},\"returns\":{\"values\":\"List of loaded values\"}},\"initialize((address,address,uint24,int24,address),uint160)\":{\"details\":\"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\",\"params\":{\"key\":\"The pool key for the pool to initialize\",\"sqrtPriceX96\":\"The initial square root price\"},\"returns\":{\"tick\":\"The initial tick of the pool\"}},\"isOperator(address,address)\":{\"params\":{\"owner\":\"The address of the owner.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"approved\":\"The approval status.\"}},\"mint(address,uint256,uint256)\":{\"details\":\"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out\",\"params\":{\"amount\":\"The amount of currency to mint\",\"id\":\"The currency address to mint to ERC6909s, as a uint256\",\"to\":\"The address to mint the tokens to\"}},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"details\":\"Poke by calling with a zero liquidityDeltaNote that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued) atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme\",\"params\":{\"hookData\":\"The data to pass through to the add/removeLiquidity hooks\",\"key\":\"The pool to modify liquidity in\",\"params\":\"The parameters for modifying the liquidity\"},\"returns\":{\"callerDelta\":\"The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable\",\"feesAccrued\":\"The balance delta of the fees generated in the liquidity range. Returned for informational purposes\"}},\"protocolFeeController()\":{\"returns\":{\"_0\":\"address The current protocol fee controller address\"}},\"protocolFeesAccrued(address)\":{\"params\":{\"currency\":\"The currency to check\"},\"returns\":{\"amount\":\"The amount of protocol fees accrued in the currency\"}},\"setOperator(address,bool)\":{\"params\":{\"approved\":\"The approval status.\",\"operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"params\":{\"key\":\"The key of the pool to set a protocol fee for\",\"newProtocolFee\":\"The fee to set\"}},\"setProtocolFeeController(address)\":{\"params\":{\"controller\":\"The new protocol fee controller\"}},\"settle()\":{\"returns\":{\"paid\":\"The amount of currency settled\"}},\"settleFor(address)\":{\"params\":{\"recipient\":\"The address to credit for the payment\"},\"returns\":{\"paid\":\"The amount of currency settled\"}},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"details\":\"Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.\",\"params\":{\"hookData\":\"The data to pass through to the swap hooks\",\"key\":\"The pool to swap in\",\"params\":\"The parameters for swapping\"},\"returns\":{\"swapDelta\":\"The balance delta of the address swapping\"}},\"sync(address)\":{\"details\":\"This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped for native tokens because the amount to settle is determined by the sent value. However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle native funds, this function can be called with the native currency to then be able to settle the native currency\"},\"take(address,address,uint256)\":{\"details\":\"Will revert if the requested amount is not available, consider using `mint` insteadCan also be used as a mechanism for free flash loans\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw from the pool manager\",\"to\":\"The address to withdraw to\"}},\"transfer(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"transferFrom(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\",\"sender\":\"The address of the sender.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"unlock(bytes)\":{\"details\":\"The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`\",\"params\":{\"data\":\"Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\"},\"returns\":{\"_0\":\"The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`\"}},\"updateDynamicLPFee((address,address,uint24,int24,address),uint24)\":{\"details\":\"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\",\"params\":{\"key\":\"The key of the pool to update dynamic LP fees for\",\"newDynamicLPFee\":\"The new dynamic pool LP fee\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyUnlocked()\":[{\"notice\":\"Thrown when unlock is called, but the contract is already unlocked\"}],\"CurrenciesOutOfOrderOrEqual(address,address)\":[{\"notice\":\"PoolKey must have currencies where address(currency0) < address(currency1)\"}],\"CurrencyNotSettled()\":[{\"notice\":\"Thrown when a currency is not netted out after the contract is unlocked\"}],\"InvalidCaller()\":[{\"notice\":\"Thrown when collectProtocolFees or setProtocolFee is not called by the controller.\"}],\"ManagerLocked()\":[{\"notice\":\"Thrown when a function is called that requires the contract to be unlocked, but it is not\"}],\"MustClearExactPositiveDelta()\":[{\"notice\":\"Thrown when `clear` is called with an amount that is not exactly equal to the open currency delta.\"}],\"NonzeroNativeValue()\":[{\"notice\":\"Thrown when native currency is passed to a non native settlement\"}],\"PoolNotInitialized()\":[{\"notice\":\"Thrown when trying to interact with a non-initialized pool\"}],\"ProtocolFeeCurrencySynced()\":[{\"notice\":\"Thrown when collectProtocolFees is attempted on a token that is synced.\"}],\"ProtocolFeeTooLarge(uint24)\":[{\"notice\":\"Thrown when protocol fee is set too high\"}],\"SwapAmountCannotBeZero()\":[{\"notice\":\"Thrown when trying to swap amount of 0\"}],\"TickSpacingTooLarge(int24)\":[{\"notice\":\"Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow\"}],\"TickSpacingTooSmall(int24)\":[{\"notice\":\"Pools must have a positive non-zero tickSpacing passed to #initialize\"}],\"UnauthorizedDynamicLPFeeUpdate()\":[{\"notice\":\"Thrown when a call to updateDynamicLPFee is made by an address that is not the hook, or on a pool that does not have a dynamic swap fee.\"}]},\"events\":{\"Donate(bytes32,address,uint256,uint256)\":{\"notice\":\"Emitted for donations\"},\"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)\":{\"notice\":\"Emitted when a new pool is initialized\"},\"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)\":{\"notice\":\"Emitted when a liquidity position is modified\"},\"ProtocolFeeControllerUpdated(address)\":{\"notice\":\"Emitted when the protocol fee controller address is updated in setProtocolFeeController.\"},\"ProtocolFeeUpdated(bytes32,uint24)\":{\"notice\":\"Emitted when the protocol fee is updated for a pool.\"},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"notice\":\"Emitted for swaps between currency0 and currency1\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,uint256)\":{\"notice\":\"Spender allowance of an id.\"},\"approve(address,uint256,uint256)\":{\"notice\":\"Approves an amount of an id to a spender.\"},\"balanceOf(address,uint256)\":{\"notice\":\"Owner balance of an id.\"},\"burn(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value from ERC6909 balance\"},\"clear(address,uint256)\":{\"notice\":\"WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently. A call to clear will zero out a positive balance WITHOUT a corresponding transfer.\"},\"collectProtocolFees(address,address,uint256)\":{\"notice\":\"Collects the protocol fees for a given recipient and currency, returning the amount collected\"},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"Donate the given currency amounts to the in-range liquidity providers of a pool\"},\"extsload(bytes32)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32,uint256)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse pool state\"},\"exttload(bytes32)\":{\"notice\":\"Called by external contracts to access transient storage of the contract\"},\"exttload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse transient pool state\"},\"initialize((address,address,uint24,int24,address),uint160)\":{\"notice\":\"Initialize the state for a given pool ID\"},\"isOperator(address,address)\":{\"notice\":\"Checks if a spender is approved by an owner as an operator\"},\"mint(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value into ERC6909 balance\"},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"Modify the liquidity for the given pool\"},\"protocolFeeController()\":{\"notice\":\"Returns the current protocol fee controller address\"},\"protocolFeesAccrued(address)\":{\"notice\":\"Given a currency address, returns the protocol fees accrued in that currency\"},\"setOperator(address,bool)\":{\"notice\":\"Sets or removes an operator for the caller.\"},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Sets the protocol fee for the given pool\"},\"setProtocolFeeController(address)\":{\"notice\":\"Sets the protocol fee controller\"},\"settle()\":{\"notice\":\"Called by the user to pay what is owed\"},\"settleFor(address)\":{\"notice\":\"Called by the user to pay on behalf of another address\"},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"Swap against the given pool\"},\"sync(address)\":{\"notice\":\"Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller.\"},\"take(address,address,uint256)\":{\"notice\":\"Called by the user to net out some value owed to the user\"},\"transfer(address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from the caller to a receiver.\"},\"transferFrom(address,address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from a sender to a receiver.\"},\"unlock(bytes)\":{\"notice\":\"All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract.\"},\"updateDynamicLPFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Updates the pools lp fees for the a pool that has enabled dynamic lp fees.\"}},\"notice\":\"Interface for the PoolManager\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/interfaces/IPoolManager.sol\":\"IPoolManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"@uniswap/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"@uniswap/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"AlreadyUnlocked()": [
								{
									"notice": "Thrown when unlock is called, but the contract is already unlocked"
								}
							],
							"CurrenciesOutOfOrderOrEqual(address,address)": [
								{
									"notice": "PoolKey must have currencies where address(currency0) < address(currency1)"
								}
							],
							"CurrencyNotSettled()": [
								{
									"notice": "Thrown when a currency is not netted out after the contract is unlocked"
								}
							],
							"InvalidCaller()": [
								{
									"notice": "Thrown when collectProtocolFees or setProtocolFee is not called by the controller."
								}
							],
							"ManagerLocked()": [
								{
									"notice": "Thrown when a function is called that requires the contract to be unlocked, but it is not"
								}
							],
							"MustClearExactPositiveDelta()": [
								{
									"notice": "Thrown when `clear` is called with an amount that is not exactly equal to the open currency delta."
								}
							],
							"NonzeroNativeValue()": [
								{
									"notice": "Thrown when native currency is passed to a non native settlement"
								}
							],
							"PoolNotInitialized()": [
								{
									"notice": "Thrown when trying to interact with a non-initialized pool"
								}
							],
							"ProtocolFeeCurrencySynced()": [
								{
									"notice": "Thrown when collectProtocolFees is attempted on a token that is synced."
								}
							],
							"ProtocolFeeTooLarge(uint24)": [
								{
									"notice": "Thrown when protocol fee is set too high"
								}
							],
							"SwapAmountCannotBeZero()": [
								{
									"notice": "Thrown when trying to swap amount of 0"
								}
							],
							"TickSpacingTooLarge(int24)": [
								{
									"notice": "Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow"
								}
							],
							"TickSpacingTooSmall(int24)": [
								{
									"notice": "Pools must have a positive non-zero tickSpacing passed to #initialize"
								}
							],
							"UnauthorizedDynamicLPFeeUpdate()": [
								{
									"notice": "Thrown when a call to updateDynamicLPFee is made by an address that is not the hook, or on a pool that does not have a dynamic swap fee."
								}
							]
						},
						"events": {
							"Donate(bytes32,address,uint256,uint256)": {
								"notice": "Emitted for donations"
							},
							"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)": {
								"notice": "Emitted when a new pool is initialized"
							},
							"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)": {
								"notice": "Emitted when a liquidity position is modified"
							},
							"ProtocolFeeControllerUpdated(address)": {
								"notice": "Emitted when the protocol fee controller address is updated in setProtocolFeeController."
							},
							"ProtocolFeeUpdated(bytes32,uint24)": {
								"notice": "Emitted when the protocol fee is updated for a pool."
							},
							"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)": {
								"notice": "Emitted for swaps between currency0 and currency1"
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address,uint256)": {
								"notice": "Spender allowance of an id."
							},
							"approve(address,uint256,uint256)": {
								"notice": "Approves an amount of an id to a spender."
							},
							"balanceOf(address,uint256)": {
								"notice": "Owner balance of an id."
							},
							"burn(address,uint256,uint256)": {
								"notice": "Called by the user to move value from ERC6909 balance"
							},
							"clear(address,uint256)": {
								"notice": "WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently. A call to clear will zero out a positive balance WITHOUT a corresponding transfer."
							},
							"collectProtocolFees(address,address,uint256)": {
								"notice": "Collects the protocol fees for a given recipient and currency, returning the amount collected"
							},
							"donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
								"notice": "Donate the given currency amounts to the in-range liquidity providers of a pool"
							},
							"extsload(bytes32)": {
								"notice": "Called by external contracts to access granular pool state"
							},
							"extsload(bytes32,uint256)": {
								"notice": "Called by external contracts to access granular pool state"
							},
							"extsload(bytes32[])": {
								"notice": "Called by external contracts to access sparse pool state"
							},
							"exttload(bytes32)": {
								"notice": "Called by external contracts to access transient storage of the contract"
							},
							"exttload(bytes32[])": {
								"notice": "Called by external contracts to access sparse transient pool state"
							},
							"initialize((address,address,uint24,int24,address),uint160)": {
								"notice": "Initialize the state for a given pool ID"
							},
							"isOperator(address,address)": {
								"notice": "Checks if a spender is approved by an owner as an operator"
							},
							"mint(address,uint256,uint256)": {
								"notice": "Called by the user to move value into ERC6909 balance"
							},
							"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
								"notice": "Modify the liquidity for the given pool"
							},
							"protocolFeeController()": {
								"notice": "Returns the current protocol fee controller address"
							},
							"protocolFeesAccrued(address)": {
								"notice": "Given a currency address, returns the protocol fees accrued in that currency"
							},
							"setOperator(address,bool)": {
								"notice": "Sets or removes an operator for the caller."
							},
							"setProtocolFee((address,address,uint24,int24,address),uint24)": {
								"notice": "Sets the protocol fee for the given pool"
							},
							"setProtocolFeeController(address)": {
								"notice": "Sets the protocol fee controller"
							},
							"settle()": {
								"notice": "Called by the user to pay what is owed"
							},
							"settleFor(address)": {
								"notice": "Called by the user to pay on behalf of another address"
							},
							"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
								"notice": "Swap against the given pool"
							},
							"sync(address)": {
								"notice": "Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller."
							},
							"take(address,address,uint256)": {
								"notice": "Called by the user to net out some value owed to the user"
							},
							"transfer(address,uint256,uint256)": {
								"notice": "Transfers an amount of an id from the caller to a receiver."
							},
							"transferFrom(address,address,uint256,uint256)": {
								"notice": "Transfers an amount of an id from a sender to a receiver."
							},
							"unlock(bytes)": {
								"notice": "All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract."
							},
							"updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
								"notice": "Updates the pools lp fees for the a pool that has enabled dynamic lp fees."
							}
						},
						"notice": "Interface for the PoolManager",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/interfaces/IProtocolFees.sol": {
				"IProtocolFees": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ProtocolFeeCurrencySynced",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "ProtocolFeeTooLarge",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "protocolFeeController",
									"type": "address"
								}
							],
							"name": "ProtocolFeeControllerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "PoolId",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "protocolFee",
									"type": "uint24"
								}
							],
							"name": "ProtocolFeeUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "collectProtocolFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountCollected",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFeeController",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "protocolFeesAccrued",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint24",
									"name": "newProtocolFee",
									"type": "uint24"
								}
							],
							"name": "setProtocolFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "setProtocolFeeController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocolFees(address,address,uint256)": {
								"details": "This will revert if the contract is unlocked",
								"params": {
									"amount": "The amount of currency to withdraw",
									"currency": "The currency to withdraw",
									"recipient": "The address to receive the protocol fees"
								},
								"returns": {
									"amountCollected": "The amount of currency successfully withdrawn"
								}
							},
							"protocolFeeController()": {
								"returns": {
									"_0": "address The current protocol fee controller address"
								}
							},
							"protocolFeesAccrued(address)": {
								"params": {
									"currency": "The currency to check"
								},
								"returns": {
									"amount": "The amount of protocol fees accrued in the currency"
								}
							},
							"setProtocolFee((address,address,uint24,int24,address),uint24)": {
								"params": {
									"key": "The key of the pool to set a protocol fee for",
									"newProtocolFee": "The fee to set"
								}
							},
							"setProtocolFeeController(address)": {
								"params": {
									"controller": "The new protocol fee controller"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocolFees(address,address,uint256)": "8161b874",
							"protocolFeeController()": "f02de3b2",
							"protocolFeesAccrued(address)": "97e8cd4e",
							"setProtocolFee((address,address,uint24,int24,address),uint24)": "7e87ce7d",
							"setProtocolFeeController(address)": "2d771389"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeCurrencySynced\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeTooLarge\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"protocolFee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collectProtocolFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"protocolFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newProtocolFee\",\"type\":\"uint24\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocolFees(address,address,uint256)\":{\"details\":\"This will revert if the contract is unlocked\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw\",\"recipient\":\"The address to receive the protocol fees\"},\"returns\":{\"amountCollected\":\"The amount of currency successfully withdrawn\"}},\"protocolFeeController()\":{\"returns\":{\"_0\":\"address The current protocol fee controller address\"}},\"protocolFeesAccrued(address)\":{\"params\":{\"currency\":\"The currency to check\"},\"returns\":{\"amount\":\"The amount of protocol fees accrued in the currency\"}},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"params\":{\"key\":\"The key of the pool to set a protocol fee for\",\"newProtocolFee\":\"The fee to set\"}},\"setProtocolFeeController(address)\":{\"params\":{\"controller\":\"The new protocol fee controller\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidCaller()\":[{\"notice\":\"Thrown when collectProtocolFees or setProtocolFee is not called by the controller.\"}],\"ProtocolFeeCurrencySynced()\":[{\"notice\":\"Thrown when collectProtocolFees is attempted on a token that is synced.\"}],\"ProtocolFeeTooLarge(uint24)\":[{\"notice\":\"Thrown when protocol fee is set too high\"}]},\"events\":{\"ProtocolFeeControllerUpdated(address)\":{\"notice\":\"Emitted when the protocol fee controller address is updated in setProtocolFeeController.\"},\"ProtocolFeeUpdated(bytes32,uint24)\":{\"notice\":\"Emitted when the protocol fee is updated for a pool.\"}},\"kind\":\"user\",\"methods\":{\"collectProtocolFees(address,address,uint256)\":{\"notice\":\"Collects the protocol fees for a given recipient and currency, returning the amount collected\"},\"protocolFeeController()\":{\"notice\":\"Returns the current protocol fee controller address\"},\"protocolFeesAccrued(address)\":{\"notice\":\"Given a currency address, returns the protocol fees accrued in that currency\"},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Sets the protocol fee for the given pool\"},\"setProtocolFeeController(address)\":{\"notice\":\"Sets the protocol fee controller\"}},\"notice\":\"Interface for all protocol-fee related functions in the pool manager\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/interfaces/IProtocolFees.sol\":\"IProtocolFees\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"InvalidCaller()": [
								{
									"notice": "Thrown when collectProtocolFees or setProtocolFee is not called by the controller."
								}
							],
							"ProtocolFeeCurrencySynced()": [
								{
									"notice": "Thrown when collectProtocolFees is attempted on a token that is synced."
								}
							],
							"ProtocolFeeTooLarge(uint24)": [
								{
									"notice": "Thrown when protocol fee is set too high"
								}
							]
						},
						"events": {
							"ProtocolFeeControllerUpdated(address)": {
								"notice": "Emitted when the protocol fee controller address is updated in setProtocolFeeController."
							},
							"ProtocolFeeUpdated(bytes32,uint24)": {
								"notice": "Emitted when the protocol fee is updated for a pool."
							}
						},
						"kind": "user",
						"methods": {
							"collectProtocolFees(address,address,uint256)": {
								"notice": "Collects the protocol fees for a given recipient and currency, returning the amount collected"
							},
							"protocolFeeController()": {
								"notice": "Returns the current protocol fee controller address"
							},
							"protocolFeesAccrued(address)": {
								"notice": "Given a currency address, returns the protocol fees accrued in that currency"
							},
							"setProtocolFee((address,address,uint24,int24,address),uint24)": {
								"notice": "Sets the protocol fee for the given pool"
							},
							"setProtocolFeeController(address)": {
								"notice": "Sets the protocol fee controller"
							}
						},
						"notice": "Interface for all protocol-fee related functions in the pool manager",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
				"IUnlockCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "unlockCallback",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"unlockCallback(bytes)": {
								"params": {
									"data": "The data that was passed to the call to unlock"
								},
								"returns": {
									"_0": "Any data that you want to be returned from the unlock call"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"unlockCallback(bytes)": "91dd7346"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlockCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"unlockCallback(bytes)\":{\"params\":{\"data\":\"The data that was passed to the call to unlock\"},\"returns\":{\"_0\":\"Any data that you want to be returned from the unlock call\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"unlockCallback(bytes)\":{\"notice\":\"Called by the pool manager on `msg.sender` when the manager is unlocked\"}},\"notice\":\"Interface for the callback executed when an address unlocks the pool manager\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol\":\"IUnlockCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"unlockCallback(bytes)": {
								"notice": "Called by the pool manager on `msg.sender` when the manager is unlocked"
							}
						},
						"notice": "Interface for the callback executed when an address unlocks the pool manager",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol": {
				"IERC20Minimal": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"params": {
									"owner": "The account that approved spending of its tokens",
									"spender": "The account for which the spending allowance was modified",
									"value": "The new allowance from the owner to the spender"
								}
							},
							"Transfer(address,address,uint256)": {
								"params": {
									"from": "The account from which the tokens were sent, i.e. the balance decreased",
									"to": "The account to which the tokens were sent, i.e. the balance increased",
									"value": "The amount of tokens that were transferred"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"title": "Minimal ERC20 interface for Uniswap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Minimal ERC20 interface for Uniswap\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns an account's balance in the token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"notice\":\"Contains a subset of the full ERC20 interface that is used in Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":\"IERC20Minimal\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns an account's balance in the token"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							}
						},
						"notice": "Contains a subset of the full ERC20 interface that is used in Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol": {
				"IERC6909Claims": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "OperatorSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address,uint256)": {
								"params": {
									"id": "The id of the token.",
									"owner": "The address of the owner.",
									"spender": "The address of the spender."
								},
								"returns": {
									"amount": "The allowance of the token."
								}
							},
							"approve(address,uint256,uint256)": {
								"params": {
									"amount": "The amount of the token.",
									"id": "The id of the token.",
									"spender": "The address of the spender."
								},
								"returns": {
									"_0": "bool True, always"
								}
							},
							"balanceOf(address,uint256)": {
								"params": {
									"id": "The id of the token.",
									"owner": "The address of the owner."
								},
								"returns": {
									"amount": "The balance of the token."
								}
							},
							"isOperator(address,address)": {
								"params": {
									"owner": "The address of the owner.",
									"spender": "The address of the spender."
								},
								"returns": {
									"approved": "The approval status."
								}
							},
							"setOperator(address,bool)": {
								"params": {
									"approved": "The approval status.",
									"operator": "The address of the operator."
								},
								"returns": {
									"_0": "bool True, always"
								}
							},
							"transfer(address,uint256,uint256)": {
								"params": {
									"amount": "The amount of the token.",
									"id": "The id of the token.",
									"receiver": "The address of the receiver."
								},
								"returns": {
									"_0": "bool True, always, unless the function reverts"
								}
							},
							"transferFrom(address,address,uint256,uint256)": {
								"params": {
									"amount": "The amount of the token.",
									"id": "The id of the token.",
									"receiver": "The address of the receiver.",
									"sender": "The address of the sender."
								},
								"returns": {
									"_0": "bool True, always, unless the function reverts"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address,uint256)": "598af9e7",
							"approve(address,uint256,uint256)": "426a8493",
							"balanceOf(address,uint256)": "00fdd58e",
							"isOperator(address,address)": "b6363cf2",
							"setOperator(address,bool)": "558a7297",
							"transfer(address,uint256,uint256)": "095bcdb6",
							"transferFrom(address,address,uint256,uint256)": "fe99049a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"OperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address,uint256)\":{\"params\":{\"id\":\"The id of the token.\",\"owner\":\"The address of the owner.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"amount\":\"The allowance of the token.\"}},\"approve(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"balanceOf(address,uint256)\":{\"params\":{\"id\":\"The id of the token.\",\"owner\":\"The address of the owner.\"},\"returns\":{\"amount\":\"The balance of the token.\"}},\"isOperator(address,address)\":{\"params\":{\"owner\":\"The address of the owner.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"approved\":\"The approval status.\"}},\"setOperator(address,bool)\":{\"params\":{\"approved\":\"The approval status.\",\"operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"transfer(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"transferFrom(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\",\"sender\":\"The address of the sender.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address,uint256)\":{\"notice\":\"Spender allowance of an id.\"},\"approve(address,uint256,uint256)\":{\"notice\":\"Approves an amount of an id to a spender.\"},\"balanceOf(address,uint256)\":{\"notice\":\"Owner balance of an id.\"},\"isOperator(address,address)\":{\"notice\":\"Checks if a spender is approved by an owner as an operator\"},\"setOperator(address,bool)\":{\"notice\":\"Sets or removes an operator for the caller.\"},\"transfer(address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from the caller to a receiver.\"},\"transferFrom(address,address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from a sender to a receiver.\"}},\"notice\":\"Interface for claims over a contract balance, wrapped as a ERC6909\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol\":\"IERC6909Claims\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(address,address,uint256)": {
								"notice": "Spender allowance of an id."
							},
							"approve(address,uint256,uint256)": {
								"notice": "Approves an amount of an id to a spender."
							},
							"balanceOf(address,uint256)": {
								"notice": "Owner balance of an id."
							},
							"isOperator(address,address)": {
								"notice": "Checks if a spender is approved by an owner as an operator"
							},
							"setOperator(address,bool)": {
								"notice": "Sets or removes an operator for the caller."
							},
							"transfer(address,uint256,uint256)": {
								"notice": "Transfers an amount of an id from the caller to a receiver."
							},
							"transferFrom(address,address,uint256,uint256)": {
								"notice": "Transfers an amount of an id from a sender to a receiver."
							}
						},
						"notice": "Interface for claims over a contract balance, wrapped as a ERC6909",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/libraries/BitMath.sol": {
				"BitMath": {
					"abi": [],
					"devdoc": {
						"author": "Solady (https://github.com/Vectorized/solady/blob/8200a70e8dc2a77ecb074fc2e99a2a0d36547522/src/utils/LibBit.sol)",
						"details": "This library provides functionality for computing bit properties of an unsigned integer",
						"kind": "dev",
						"methods": {},
						"title": "BitMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v4-core/src/libraries/BitMath.sol\":298:2608  library BitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v4-core/src/libraries/BitMath.sol\":298:2608  library BitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207774fc05be61cb0b96c19f9eea776f6b5b0bbbb6e8cd04a77fb3a39ce85b7c7364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207774fc05be61cb0b96c19f9eea776f6b5b0bbbb6e8cd04a77fb3a39ce85b7c7364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x74FC05BE61CB0B96C19F9EEA776F6B5B0BBBB6E8CD04A77F 0xB3 LOG3 SWAP13 0xE8 JUMPDEST PUSH29 0x7364736F6C634300081A00330000000000000000000000000000000000 ",
							"sourceMap": "298:2310:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207774fc05be61cb0b96c19f9eea776f6b5b0bbbb6e8cd04a77fb3a39ce85b7c7364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x74FC05BE61CB0B96C19F9EEA776F6B5B0BBBB6E8CD04A77F 0xB3 LOG3 SWAP13 0xE8 JUMPDEST PUSH29 0x7364736F6C634300081A00330000000000000000000000000000000000 ",
							"sourceMap": "298:2310:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"leastSignificantBit(uint256)": "infinite",
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 298,
									"end": 2608,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207774fc05be61cb0b96c19f9eea776f6b5b0bbbb6e8cd04a77fb3a39ce85b7c7364736f6c634300081a0033",
									".code": [
										{
											"begin": 298,
											"end": 2608,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 298,
											"end": 2608,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 298,
											"end": 2608,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 2608,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 298,
											"end": 2608,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 2608,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 298,
											"end": 2608,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 2608,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 2608,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Solady (https://github.com/Vectorized/solady/blob/8200a70e8dc2a77ecb074fc2e99a2a0d36547522/src/utils/LibBit.sol)\",\"details\":\"This library provides functionality for computing bit properties of an unsigned integer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/libraries/BitMath.sol\":\"BitMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e\",\"dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/libraries/CurrencyReserves.sol": {
				"CurrencyReserves": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v4-core/src/libraries/CurrencyReserves.sol\":161:1288  library CurrencyReserves {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v4-core/src/libraries/CurrencyReserves.sol\":161:1288  library CurrencyReserves {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220283ced81e08cfcc09c1b47ab48fab1164a8bcd35e432df1174bb1a4bdfe4941364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220283ced81e08cfcc09c1b47ab48fab1164a8bcd35e432df1174bb1a4bdfe4941364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 EXTCODECOPY 0xED DUP2 0xE0 DUP13 0xFC 0xC0 SWAP13 SHL SELFBALANCE 0xAB BASEFEE STATICCALL 0xB1 AND BLOBBASEFEE DUP12 0xCD CALLDATALOAD 0xE4 ORIGIN 0xDF GT PUSH21 0xBB1A4BDFE4941364736F6C634300081A0033000000 ",
							"sourceMap": "161:1127:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220283ced81e08cfcc09c1b47ab48fab1164a8bcd35e432df1174bb1a4bdfe4941364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 EXTCODECOPY 0xED DUP2 0xE0 DUP13 0xFC 0xC0 SWAP13 SHL SELFBALANCE 0xAB BASEFEE STATICCALL 0xB1 AND BLOBBASEFEE DUP12 0xCD CALLDATALOAD 0xE4 ORIGIN 0xDF GT PUSH21 0xBB1A4BDFE4941364736F6C634300081A0033000000 ",
							"sourceMap": "161:1127:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getSyncedCurrency()": "infinite",
								"getSyncedReserves()": "infinite",
								"resetCurrency()": "infinite",
								"syncCurrencyAndReserves(Currency,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 161,
									"end": 1288,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220283ced81e08cfcc09c1b47ab48fab1164a8bcd35e432df1174bb1a4bdfe4941364736f6c634300081a0033",
									".code": [
										{
											"begin": 161,
											"end": 1288,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 161,
											"end": 1288,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 161,
											"end": 1288,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 161,
											"end": 1288,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 1288,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 1288,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 161,
											"end": 1288,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 1288,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 161,
											"end": 1288,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/libraries/CurrencyReserves.sol\":\"CurrencyReserves\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/libraries/CurrencyReserves.sol\":{\"keccak256\":\"0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725\",\"dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/libraries/CustomRevert.sol": {
				"CustomRevert": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								},
								{
									"internalType": "bytes",
									"name": "reason",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "details",
									"type": "bytes"
								}
							],
							"name": "WrappedError",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "To use this library, declare `using CustomRevert for bytes4;` and replace `revert CustomError()` with `CustomError.selector.revertWith()`The functions may tamper with the free memory pointer but it is fine since the call context is exited immediately",
						"errors": {
							"WrappedError(address,bytes4,bytes,bytes)": [
								{
									"details": "ERC-7751 error for wrapping bubbled up reverts"
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "Library for reverting with custom errors efficiently",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v4-core/src/libraries/CustomRevert.sol\":501:5173  library CustomRevert {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v4-core/src/libraries/CustomRevert.sol\":501:5173  library CustomRevert {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d8203d2c7d1c96e7fa8c9451ce34e58d2152ddef2da36e6951d82f4037997c9964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d8203d2c7d1c96e7fa8c9451ce34e58d2152ddef2da36e6951d82f4037997c9964736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 KECCAK256 RETURNDATASIZE 0x2C PUSH30 0x1C96E7FA8C9451CE34E58D2152DDEF2DA36E6951D82F4037997C9964736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "501:4672:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d8203d2c7d1c96e7fa8c9451ce34e58d2152ddef2da36e6951d82f4037997c9964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 KECCAK256 RETURNDATASIZE 0x2C PUSH30 0x1C96E7FA8C9451CE34E58D2152DDEF2DA36E6951D82F4037997C9964736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "501:4672:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"bubbleUpAndRevertWith(address,bytes4,bytes4)": "infinite",
								"revertWith(bytes4)": "infinite",
								"revertWith(bytes4,address)": "infinite",
								"revertWith(bytes4,address,address)": "infinite",
								"revertWith(bytes4,int24)": "infinite",
								"revertWith(bytes4,int24,int24)": "infinite",
								"revertWith(bytes4,uint160)": "infinite",
								"revertWith(bytes4,uint160,uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d8203d2c7d1c96e7fa8c9451ce34e58d2152ddef2da36e6951d82f4037997c9964736f6c634300081a0033",
									".code": [
										{
											"begin": 501,
											"end": 5173,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"details\",\"type\":\"bytes\"}],\"name\":\"WrappedError\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"To use this library, declare `using CustomRevert for bytes4;` and replace `revert CustomError()` with `CustomError.selector.revertWith()`The functions may tamper with the free memory pointer but it is fine since the call context is exited immediately\",\"errors\":{\"WrappedError(address,bytes4,bytes,bytes)\":[{\"details\":\"ERC-7751 error for wrapping bubbled up reverts\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for reverting with custom errors efficiently\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains functions for reverting with custom errors with different argument types efficiently\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":\"CustomRevert\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains functions for reverting with custom errors with different argument types efficiently",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/libraries/Lock.sol": {
				"Lock": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v4-core/src/libraries/Lock.sol\":252:929  library Lock {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v4-core/src/libraries/Lock.sol\":252:929  library Lock {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200c4f678ae5dd74cb45ba7228a01da3537ffb9ec5ea71d4a1db2ccf13ec3729c564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200c4f678ae5dd74cb45ba7228a01da3537ffb9ec5ea71d4a1db2ccf13ec3729c564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0x4F PUSH8 0x8AE5DD74CB45BA72 0x28 LOG0 SAR LOG3 MSTORE8 PUSH32 0xFB9EC5EA71D4A1DB2CCF13EC3729C564736F6C634300081A0033000000000000 ",
							"sourceMap": "252:677:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200c4f678ae5dd74cb45ba7228a01da3537ffb9ec5ea71d4a1db2ccf13ec3729c564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0x4F PUSH8 0x8AE5DD74CB45BA72 0x28 LOG0 SAR LOG3 MSTORE8 PUSH32 0xFB9EC5EA71D4A1DB2CCF13EC3729C564736F6C634300081A0033000000000000 ",
							"sourceMap": "252:677:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"isUnlocked()": "infinite",
								"lock()": "infinite",
								"unlock()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 252,
									"end": 929,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 252,
									"end": 929,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c4f678ae5dd74cb45ba7228a01da3537ffb9ec5ea71d4a1db2ccf13ec3729c564736f6c634300081a0033",
									".code": [
										{
											"begin": 252,
											"end": 929,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 252,
											"end": 929,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 252,
											"end": 929,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 252,
											"end": 929,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 929,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 929,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 252,
											"end": 929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 929,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 252,
											"end": 929,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is a temporary library that allows us to use transient storage (tstore/tload) TODO: This library can be deleted when we have the transient keyword support in solidity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/libraries/Lock.sol\":\"Lock\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/libraries/Lock.sol\":{\"keccak256\":\"0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c\",\"dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This is a temporary library that allows us to use transient storage (tstore/tload) TODO: This library can be deleted when we have the transient keyword support in solidity.",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol": {
				"NonzeroDeltaCount": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol\":285:1459  library NonzeroDeltaCount {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol\":285:1459  library NonzeroDeltaCount {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201b419d4385a32476586ab0f1b194278adb9784ad72232770fc3ab406b719b9ec64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201b419d4385a32476586ab0f1b194278adb9784ad72232770fc3ab406b719b9ec64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL COINBASE SWAP14 NUMBER DUP6 LOG3 0x24 PUSH23 0x586AB0F1B194278ADB9784AD72232770FC3AB406B719B9 0xEC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "285:1174:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201b419d4385a32476586ab0f1b194278adb9784ad72232770fc3ab406b719b9ec64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL COINBASE SWAP14 NUMBER DUP6 LOG3 0x24 PUSH23 0x586AB0F1B194278ADB9784AD72232770FC3AB406B719B9 0xEC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "285:1174:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"decrement()": "infinite",
								"increment()": "infinite",
								"read()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 285,
									"end": 1459,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201b419d4385a32476586ab0f1b194278adb9784ad72232770fc3ab406b719b9ec64736f6c634300081a0033",
									".code": [
										{
											"begin": 285,
											"end": 1459,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 285,
											"end": 1459,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 285,
											"end": 1459,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 285,
											"end": 1459,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 285,
											"end": 1459,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 1459,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 285,
											"end": 1459,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 1459,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 285,
											"end": 1459,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is a temporary library that allows us to use transient storage (tstore/tload) for the nonzero delta count. TODO: This library can be deleted when we have the transient keyword support in solidity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol\":\"NonzeroDeltaCount\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol\":{\"keccak256\":\"0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59\",\"dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This is a temporary library that allows us to use transient storage (tstore/tload) for the nonzero delta count. TODO: This library can be deleted when we have the transient keyword support in solidity.",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/libraries/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [],
							"name": "SafeCastOverflow",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Safe casting methods",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v4-core/src/libraries/SafeCast.sol\":201:2268  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v4-core/src/libraries/SafeCast.sol\":201:2268  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220182fcc5773b846bfd601e2ae8a01c93c2c3f6b74b5511ca58d02347a7f93d1c064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220182fcc5773b846bfd601e2ae8a01c93c2c3f6b74b5511ca58d02347a7f93d1c064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0x2F 0xCC JUMPI PUSH20 0xB846BFD601E2AE8A01C93C2C3F6B74B5511CA58D MUL CALLVALUE PUSH27 0x7F93D1C064736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "201:2067:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220182fcc5773b846bfd601e2ae8a01c93c2c3f6b74b5511ca58d02347a7f93d1c064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0x2F 0xCC JUMPI PUSH20 0xB846BFD601E2AE8A01C93C2C3F6B74B5511CA58D MUL CALLVALUE PUSH27 0x7F93D1C064736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "201:2067:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt128(uint256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toUint128(int128)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint160(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220182fcc5773b846bfd601e2ae8a01c93c2c3f6b74b5511ca58d02347a7f93d1c064736f6c634300081a0033",
									".code": [
										{
											"begin": 201,
											"end": 2268,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SafeCastOverflow\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Safe casting methods\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for safely casting between types\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/libraries/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for safely casting between types",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/libraries/TickMath.sol": {
				"TickMath": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "InvalidSqrtPrice",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "InvalidTick",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_PRICE": {
								"details": "The maximum value that can be returned from #getSqrtPriceAtTick. Equivalent to getSqrtPriceAtTick(MAX_TICK)"
							},
							"MAX_SQRT_PRICE_MINUS_MIN_SQRT_PRICE_MINUS_ONE": {
								"details": "A threshold used for optimized bounds check, equals `MAX_SQRT_PRICE - MIN_SQRT_PRICE - 1`"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtPriceAtTick computed from log base 1.0001 of 2**128If ever MIN_TICK and MAX_TICK are not centered around 0, the absTick logic in getSqrtPriceAtTick cannot be used"
							},
							"MAX_TICK_SPACING": {
								"details": "The maximum tick spacing value drawn from the range of type int16, i.e. max from the range [1, 32767]"
							},
							"MIN_SQRT_PRICE": {
								"details": "The minimum value that can be returned from #getSqrtPriceAtTick. Equivalent to getSqrtPriceAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtPriceAtTick computed from log base 1.0001 of 2**-128If ever MIN_TICK and MAX_TICK are not centered around 0, the absTick logic in getSqrtPriceAtTick cannot be used"
							},
							"MIN_TICK_SPACING": {
								"details": "The minimum tick spacing value drawn from the range of type int16 that is greater than 0, i.e. min from the range [1, 32767]"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v4-core/src/libraries/TickMath.sol\":381:12381  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v4-core/src/libraries/TickMath.sol\":381:12381  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ddb1a12d0951ca973dbc1d9ea3c6305564a8de2277e8380c9fd8325e2f1caed564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ddb1a12d0951ca973dbc1d9ea3c6305564a8de2277e8380c9fd8325e2f1caed564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xB1 LOG1 0x2D MULMOD MLOAD 0xCA SWAP8 RETURNDATASIZE 0xBC SAR SWAP15 LOG3 0xC6 ADDRESS SSTORE PUSH5 0xA8DE2277E8 CODESIZE 0xC SWAP16 0xD8 ORIGIN MCOPY 0x2F SHR 0xAE 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "381:12000:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ddb1a12d0951ca973dbc1d9ea3c6305564a8de2277e8380c9fd8325e2f1caed564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xB1 LOG1 0x2D MULMOD MLOAD 0xCA SWAP8 RETURNDATASIZE 0xBC SAR SWAP15 LOG3 0xC6 ADDRESS SSTORE PUSH5 0xA8DE2277E8 CODESIZE 0xC SWAP16 0xD8 ORIGIN MCOPY 0x2F SHR 0xAE 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "381:12000:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getSqrtPriceAtTick(int24)": "infinite",
								"getTickAtSqrtPrice(uint160)": "infinite",
								"maxUsableTick(int24)": "infinite",
								"minUsableTick(int24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 381,
									"end": 12381,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ddb1a12d0951ca973dbc1d9ea3c6305564a8de2277e8380c9fd8325e2f1caed564736f6c634300081a0033",
									".code": [
										{
											"begin": 381,
											"end": 12381,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 381,
											"end": 12381,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 381,
											"end": 12381,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 381,
											"end": 12381,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 381,
											"end": 12381,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 12381,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 381,
											"end": 12381,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 12381,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 381,
											"end": 12381,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"InvalidSqrtPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"InvalidTick\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_PRICE\":{\"details\":\"The maximum value that can be returned from #getSqrtPriceAtTick. Equivalent to getSqrtPriceAtTick(MAX_TICK)\"},\"MAX_SQRT_PRICE_MINUS_MIN_SQRT_PRICE_MINUS_ONE\":{\"details\":\"A threshold used for optimized bounds check, equals `MAX_SQRT_PRICE - MIN_SQRT_PRICE - 1`\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtPriceAtTick computed from log base 1.0001 of 2**128If ever MIN_TICK and MAX_TICK are not centered around 0, the absTick logic in getSqrtPriceAtTick cannot be used\"},\"MAX_TICK_SPACING\":{\"details\":\"The maximum tick spacing value drawn from the range of type int16, i.e. max from the range [1, 32767]\"},\"MIN_SQRT_PRICE\":{\"details\":\"The minimum value that can be returned from #getSqrtPriceAtTick. Equivalent to getSqrtPriceAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtPriceAtTick computed from log base 1.0001 of 2**-128If ever MIN_TICK and MAX_TICK are not centered around 0, the absTick logic in getSqrtPriceAtTick cannot be used\"},\"MIN_TICK_SPACING\":{\"details\":\"The minimum tick spacing value drawn from the range of type int16 that is greater than 0, i.e. min from the range [1, 32767]\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidSqrtPrice(uint160)\":[{\"notice\":\"Thrown when the price passed to #getTickAtSqrtPrice does not correspond to a price between MIN_TICK and MAX_TICK\"}],\"InvalidTick(int24)\":[{\"notice\":\"Thrown when the tick passed to #getSqrtPriceAtTick is not between MIN_TICK and MAX_TICK\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e\",\"dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/TickMath.sol\":{\"keccak256\":\"0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70\",\"dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"InvalidSqrtPrice(uint160)": [
								{
									"notice": "Thrown when the price passed to #getTickAtSqrtPrice does not correspond to a price between MIN_TICK and MAX_TICK"
								}
							],
							"InvalidTick(int24)": [
								{
									"notice": "Thrown when the tick passed to #getSqrtPriceAtTick is not between MIN_TICK and MAX_TICK"
								}
							]
						},
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol": {
				"TransientStateLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol\":389:2360  library TransientStateLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol\":389:2360  library TransientStateLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202ca7592c21babb7739e39534ff87ca046a2e567ff0e59d2cc39bde25aea0346264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202ca7592c21babb7739e39534ff87ca046a2e567ff0e59d2cc39bde25aea0346264736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xA7 MSIZE 0x2C 0x21 0xBA 0xBB PUSH24 0x39E39534FF87CA046A2E567FF0E59D2CC39BDE25AEA03462 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "389:1971:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202ca7592c21babb7739e39534ff87ca046a2e567ff0e59d2cc39bde25aea0346264736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xA7 MSIZE 0x2C 0x21 0xBA 0xBB PUSH24 0x39E39534FF87CA046A2E567FF0E59D2CC39BDE25AEA03462 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "389:1971:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"currencyDelta(contract IPoolManager,address,Currency)": "infinite",
								"getNonzeroDeltaCount(contract IPoolManager)": "infinite",
								"getSyncedCurrency(contract IPoolManager)": "infinite",
								"getSyncedReserves(contract IPoolManager)": "infinite",
								"isUnlocked(contract IPoolManager)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 389,
									"end": 2360,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ca7592c21babb7739e39534ff87ca046a2e567ff0e59d2cc39bde25aea0346264736f6c634300081a0033",
									".code": [
										{
											"begin": 389,
											"end": 2360,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 389,
											"end": 2360,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 389,
											"end": 2360,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 389,
											"end": 2360,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 389,
											"end": 2360,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 2360,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 389,
											"end": 2360,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 2360,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 389,
											"end": 2360,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A helper library to provide state getters that use exttload\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol\":\"TransientStateLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"@uniswap/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"@uniswap/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"@uniswap/v4-core/src/libraries/CurrencyReserves.sol\":{\"keccak256\":\"0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725\",\"dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/Lock.sol\":{\"keccak256\":\"0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c\",\"dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF\"]},\"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol\":{\"keccak256\":\"0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59\",\"dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol\":{\"keccak256\":\"0x7d1e0875747bd89b32c25f1a48da2766e5f4aff1f671ad5f3c0c07ebbbcb946a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76cfeb1cb60595b41ecc51c8a12fb4bf63a7fc733d0b1a2e3adb55abeb1f9d5\",\"dweb:/ipfs/Qmb8oX7DtsRpw3tTtdWZwGhauj1evq43d3PLwe4nSDAKkV\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A helper library to provide state getters that use exttload",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/types/BalanceDelta.sol": {
				"BalanceDeltaLibrary": {
					"abi": [
						{
							"inputs": [],
							"name": "ZERO_DELTA",
							"outputs": [
								{
									"internalType": "BalanceDelta",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v4-core/src/types/BalanceDelta.sol\":1819:2338  library BalanceDeltaLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v4-core/src/types/BalanceDelta.sol\":1819:2338  library BalanceDeltaLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91cb4669\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@uniswap/v4-core/src/types/BalanceDelta.sol\":1889:1951  BalanceDelta public constant ZERO_DELTA = BalanceDelta.wrap(0) */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_4:\n        /* \"@uniswap/v4-core/src/types/BalanceDelta.sol\":1949:1950  0 */\n      0x00\n        /* \"@uniswap/v4-core/src/types/BalanceDelta.sol\":1889:1951  BalanceDelta public constant ZERO_DELTA = BalanceDelta.wrap(0) */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:83   */\n    tag_7:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":72:77   */\n      dup2\n        /* \"#utility.yul\":61:77   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:83   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":89:149   */\n    tag_8:\n        /* \"#utility.yul\":117:120   */\n      0x00\n        /* \"#utility.yul\":138:143   */\n      dup2\n        /* \"#utility.yul\":131:143   */\n      swap1\n      pop\n        /* \"#utility.yul\":89:149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":155:293   */\n    tag_9:\n        /* \"#utility.yul\":203:212   */\n      0x00\n        /* \"#utility.yul\":236:287   */\n      tag_15\n        /* \"#utility.yul\":253:286   */\n      tag_16\n        /* \"#utility.yul\":262:285   */\n      tag_17\n        /* \"#utility.yul\":279:284   */\n      dup5\n        /* \"#utility.yul\":262:285   */\n      tag_7\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":253:286   */\n      tag_8\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":236:287   */\n      tag_7\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":223:287   */\n      swap1\n      pop\n        /* \"#utility.yul\":155:293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":299:468   */\n    tag_10:\n        /* \"#utility.yul\":426:461   */\n      tag_19\n        /* \"#utility.yul\":455:460   */\n      dup2\n        /* \"#utility.yul\":426:461   */\n      tag_9\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":421:424   */\n      dup3\n        /* \"#utility.yul\":414:462   */\n      mstore\n        /* \"#utility.yul\":299:468   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":474:776   */\n    tag_6:\n        /* \"#utility.yul\":607:611   */\n      0x00\n        /* \"#utility.yul\":645:647   */\n      0x20\n        /* \"#utility.yul\":634:643   */\n      dup3\n        /* \"#utility.yul\":630:648   */\n      add\n        /* \"#utility.yul\":622:648   */\n      swap1\n      pop\n        /* \"#utility.yul\":658:769   */\n      tag_21\n        /* \"#utility.yul\":766:767   */\n      0x00\n        /* \"#utility.yul\":755:764   */\n      dup4\n        /* \"#utility.yul\":751:768   */\n      add\n        /* \"#utility.yul\":742:748   */\n      dup5\n        /* \"#utility.yul\":658:769   */\n      tag_10\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":474:776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eb13a49e04173afa95b921fd7bc8c6210e1b018a516ea8ef8937c3c428b94d3464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60db61004c600b8282823980515f1a6073146040577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106032575f3560e01c806391cb4669146036575b5f80fd5b603c6050565b60405160479190608e565b60405180910390f35b5f81565b5f819050919050565b5f819050919050565b5f607a60766072846054565b605d565b6054565b9050919050565b6088816066565b82525050565b5f602082019050609f5f8301846081565b9291505056fea2646970667358221220eb13a49e04173afa95b921fd7bc8c6210e1b018a516ea8ef8937c3c428b94d3464736f6c634300081a0033",
							"opcodes": "PUSH1 0xDB PUSH2 0x4C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x40 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91CB4669 EQ PUSH1 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x47 SWAP2 SWAP1 PUSH1 0x8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7A PUSH1 0x76 PUSH1 0x72 DUP5 PUSH1 0x54 JUMP JUMPDEST PUSH1 0x5D JUMP JUMPDEST PUSH1 0x54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x88 DUP2 PUSH1 0x66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x9F PUSH0 DUP4 ADD DUP5 PUSH1 0x81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SGT LOG4 SWAP15 DIV OR GASPRICE STATICCALL SWAP6 0xB9 0x21 REVERT PUSH28 0xC8C6210E1B018A516EA8EF8937C3C428B94D3464736F6C634300081A STOP CALLER ",
							"sourceMap": "1819:519:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ZERO_DELTA_2137": {
									"entryPoint": 80,
									"id": 2137,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_userDefinedValueType$_BalanceDelta_$2000_to_t_int256_fromStack_library": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_userDefinedValueType$_BalanceDelta_$2000__to_t_int256__fromStack_library_reversed": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_int256_to_t_int256": {
									"entryPoint": 102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 93,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:779:37",
										"nodeType": "YulBlock",
										"src": "0:779:37",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:32:37",
													"nodeType": "YulBlock",
													"src": "51:32:37",
													"statements": [
														{
															"nativeSrc": "61:16:37",
															"nodeType": "YulAssignment",
															"src": "61:16:37",
															"value": {
																"name": "value",
																"nativeSrc": "72:5:37",
																"nodeType": "YulIdentifier",
																"src": "72:5:37"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:37"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "7:76:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:37",
														"nodeType": "YulTypedName",
														"src": "33:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:37",
														"nodeType": "YulTypedName",
														"src": "43:7:37",
														"type": ""
													}
												],
												"src": "7:76:37"
											},
											{
												"body": {
													"nativeSrc": "121:28:37",
													"nodeType": "YulBlock",
													"src": "121:28:37",
													"statements": [
														{
															"nativeSrc": "131:12:37",
															"nodeType": "YulAssignment",
															"src": "131:12:37",
															"value": {
																"name": "value",
																"nativeSrc": "138:5:37",
																"nodeType": "YulIdentifier",
																"src": "138:5:37"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "131:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:37"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "89:60:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "107:5:37",
														"nodeType": "YulTypedName",
														"src": "107:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "117:3:37",
														"nodeType": "YulTypedName",
														"src": "117:3:37",
														"type": ""
													}
												],
												"src": "89:60:37"
											},
											{
												"body": {
													"nativeSrc": "213:80:37",
													"nodeType": "YulBlock",
													"src": "213:80:37",
													"statements": [
														{
															"nativeSrc": "223:64:37",
															"nodeType": "YulAssignment",
															"src": "223:64:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "279:5:37",
																						"nodeType": "YulIdentifier",
																						"src": "279:5:37"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "262:16:37",
																					"nodeType": "YulIdentifier",
																					"src": "262:16:37"
																				},
																				"nativeSrc": "262:23:37",
																				"nodeType": "YulFunctionCall",
																				"src": "262:23:37"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "253:8:37",
																			"nodeType": "YulIdentifier",
																			"src": "253:8:37"
																		},
																		"nativeSrc": "253:33:37",
																		"nodeType": "YulFunctionCall",
																		"src": "253:33:37"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "236:16:37",
																	"nodeType": "YulIdentifier",
																	"src": "236:16:37"
																},
																"nativeSrc": "236:51:37",
																"nodeType": "YulFunctionCall",
																"src": "236:51:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "223:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "223:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_int256_to_t_int256",
												"nativeSrc": "155:138:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "193:5:37",
														"nodeType": "YulTypedName",
														"src": "193:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "203:9:37",
														"nodeType": "YulTypedName",
														"src": "203:9:37",
														"type": ""
													}
												],
												"src": "155:138:37"
											},
											{
												"body": {
													"nativeSrc": "404:64:37",
													"nodeType": "YulBlock",
													"src": "404:64:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "421:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "421:3:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "455:5:37",
																				"nodeType": "YulIdentifier",
																				"src": "455:5:37"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_int256_to_t_int256",
																			"nativeSrc": "426:28:37",
																			"nodeType": "YulIdentifier",
																			"src": "426:28:37"
																		},
																		"nativeSrc": "426:35:37",
																		"nodeType": "YulFunctionCall",
																		"src": "426:35:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "414:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "414:6:37"
																},
																"nativeSrc": "414:48:37",
																"nodeType": "YulFunctionCall",
																"src": "414:48:37"
															},
															"nativeSrc": "414:48:37",
															"nodeType": "YulExpressionStatement",
															"src": "414:48:37"
														}
													]
												},
												"name": "abi_encode_t_userDefinedValueType$_BalanceDelta_$2000_to_t_int256_fromStack_library",
												"nativeSrc": "299:169:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "392:5:37",
														"nodeType": "YulTypedName",
														"src": "392:5:37",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "399:3:37",
														"nodeType": "YulTypedName",
														"src": "399:3:37",
														"type": ""
													}
												],
												"src": "299:169:37"
											},
											{
												"body": {
													"nativeSrc": "612:164:37",
													"nodeType": "YulBlock",
													"src": "612:164:37",
													"statements": [
														{
															"nativeSrc": "622:26:37",
															"nodeType": "YulAssignment",
															"src": "622:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "634:9:37",
																		"nodeType": "YulIdentifier",
																		"src": "634:9:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "645:2:37",
																		"nodeType": "YulLiteral",
																		"src": "645:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "630:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "630:3:37"
																},
																"nativeSrc": "630:18:37",
																"nodeType": "YulFunctionCall",
																"src": "630:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "622:4:37",
																	"nodeType": "YulIdentifier",
																	"src": "622:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "742:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "742:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "755:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "755:9:37"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "766:1:37",
																				"nodeType": "YulLiteral",
																				"src": "766:1:37",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "751:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "751:3:37"
																		},
																		"nativeSrc": "751:17:37",
																		"nodeType": "YulFunctionCall",
																		"src": "751:17:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_userDefinedValueType$_BalanceDelta_$2000_to_t_int256_fromStack_library",
																	"nativeSrc": "658:83:37",
																	"nodeType": "YulIdentifier",
																	"src": "658:83:37"
																},
																"nativeSrc": "658:111:37",
																"nodeType": "YulFunctionCall",
																"src": "658:111:37"
															},
															"nativeSrc": "658:111:37",
															"nodeType": "YulExpressionStatement",
															"src": "658:111:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_userDefinedValueType$_BalanceDelta_$2000__to_t_int256__fromStack_library_reversed",
												"nativeSrc": "474:302:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "584:9:37",
														"nodeType": "YulTypedName",
														"src": "584:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "596:6:37",
														"nodeType": "YulTypedName",
														"src": "596:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "607:4:37",
														"nodeType": "YulTypedName",
														"src": "607:4:37",
														"type": ""
													}
												],
												"src": "474:302:37"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_int256_to_t_int256(value) -> converted {\n        converted := cleanup_t_int256(identity(cleanup_t_int256(value)))\n    }\n\n    function abi_encode_t_userDefinedValueType$_BalanceDelta_$2000_to_t_int256_fromStack_library(value, pos) {\n        mstore(pos, convert_t_int256_to_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_userDefinedValueType$_BalanceDelta_$2000__to_t_int256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_userDefinedValueType$_BalanceDelta_$2000_to_t_int256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106032575f3560e01c806391cb4669146036575b5f80fd5b603c6050565b60405160479190608e565b60405180910390f35b5f81565b5f819050919050565b5f819050919050565b5f607a60766072846054565b605d565b6054565b9050919050565b6088816066565b82525050565b5f602082019050609f5f8301846081565b9291505056fea2646970667358221220eb13a49e04173afa95b921fd7bc8c6210e1b018a516ea8ef8937c3c428b94d3464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91CB4669 EQ PUSH1 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x47 SWAP2 SWAP1 PUSH1 0x8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7A PUSH1 0x76 PUSH1 0x72 DUP5 PUSH1 0x54 JUMP JUMPDEST PUSH1 0x5D JUMP JUMPDEST PUSH1 0x54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x88 DUP2 PUSH1 0x66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x9F PUSH0 DUP4 ADD DUP5 PUSH1 0x81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SGT LOG4 SWAP15 DIV OR GASPRICE STATICCALL SWAP6 0xB9 0x21 REVERT PUSH28 0xC8C6210E1B018A516EA8EF8937C3C428B94D3464736F6C634300081A STOP CALLER ",
							"sourceMap": "1819:519:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;1889:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1949:1;1889:62;:::o;7:76:37:-;43:7;72:5;61:16;;7:76;;;:::o;89:60::-;117:3;138:5;131:12;;89:60;;;:::o;155:138::-;203:9;236:51;253:33;262:23;279:5;262:23;:::i;:::-;253:33;:::i;:::-;236:51;:::i;:::-;223:64;;155:138;;;:::o;299:169::-;426:35;455:5;426:35;:::i;:::-;421:3;414:48;299:169;;:::o;474:302::-;607:4;645:2;634:9;630:18;622:26;;658:111;766:1;755:9;751:17;742:6;658:111;:::i;:::-;474:302;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "43800",
								"executionCost": "119",
								"totalCost": "43919"
							},
							"external": {
								"ZERO_DELTA()": "infinite"
							},
							"internal": {
								"amount0(BalanceDelta)": "infinite",
								"amount1(BalanceDelta)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb13a49e04173afa95b921fd7bc8c6210e1b018a516ea8ef8937c3c428b94d3464736f6c634300081a0033",
									".code": [
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 17,
											"value": "91CB4669"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1889,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "tag",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 1889,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "tag",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "tag",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 83,
											"name": "tag",
											"source": 37,
											"value": "7"
										},
										{
											"begin": 7,
											"end": 83,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 77,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 61,
											"end": 77,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 61,
											"end": 77,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 7,
											"end": 83,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 7,
											"end": 83,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 7,
											"end": 83,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 7,
											"end": 83,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 89,
											"end": 149,
											"name": "tag",
											"source": 37,
											"value": "8"
										},
										{
											"begin": 89,
											"end": 149,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 117,
											"end": 120,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 143,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 131,
											"end": 143,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 131,
											"end": 143,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 89,
											"end": 149,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 89,
											"end": 149,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 89,
											"end": 149,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 89,
											"end": 149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 155,
											"end": 293,
											"name": "tag",
											"source": 37,
											"value": "9"
										},
										{
											"begin": 155,
											"end": 293,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 203,
											"end": 212,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "15"
										},
										{
											"begin": 253,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "17"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 262,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "7"
										},
										{
											"begin": 262,
											"end": 285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 262,
											"end": 285,
											"name": "tag",
											"source": 37,
											"value": "17"
										},
										{
											"begin": 262,
											"end": 285,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 253,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "8"
										},
										{
											"begin": 253,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 253,
											"end": 286,
											"name": "tag",
											"source": 37,
											"value": "16"
										},
										{
											"begin": 253,
											"end": 286,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "7"
										},
										{
											"begin": 236,
											"end": 287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 236,
											"end": 287,
											"name": "tag",
											"source": 37,
											"value": "15"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 223,
											"end": 287,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 223,
											"end": 287,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 155,
											"end": 293,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 155,
											"end": 293,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 155,
											"end": 293,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 155,
											"end": 293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 299,
											"end": 468,
											"name": "tag",
											"source": 37,
											"value": "10"
										},
										{
											"begin": 299,
											"end": 468,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 426,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "19"
										},
										{
											"begin": 455,
											"end": 460,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 426,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "9"
										},
										{
											"begin": 426,
											"end": 461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 426,
											"end": 461,
											"name": "tag",
											"source": 37,
											"value": "19"
										},
										{
											"begin": 426,
											"end": 461,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 421,
											"end": 424,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 414,
											"end": 462,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 299,
											"end": 468,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 299,
											"end": 468,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 299,
											"end": 468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 474,
											"end": 776,
											"name": "tag",
											"source": 37,
											"value": "6"
										},
										{
											"begin": 474,
											"end": 776,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 607,
											"end": 611,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 647,
											"name": "PUSH",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 634,
											"end": 643,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 630,
											"end": 648,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 622,
											"end": 648,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 622,
											"end": 648,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 658,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "21"
										},
										{
											"begin": 766,
											"end": 767,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 764,
											"name": "DUP4",
											"source": 37
										},
										{
											"begin": 751,
											"end": 768,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 742,
											"end": 748,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 658,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "10"
										},
										{
											"begin": 658,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 658,
											"end": 769,
											"name": "tag",
											"source": 37,
											"value": "21"
										},
										{
											"begin": 658,
											"end": 769,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 474,
											"end": 776,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 474,
											"end": 776,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 474,
											"end": 776,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 474,
											"end": 776,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 474,
											"end": 776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ZERO_DELTA()": "91cb4669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ZERO_DELTA\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ZERO_DELTA()\":{\"notice\":\"A BalanceDelta of 0\"}},\"notice\":\"Library for getting the amount0 and amount1 deltas from the BalanceDelta type\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/types/BalanceDelta.sol\":\"BalanceDeltaLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ZERO_DELTA()": {
								"notice": "A BalanceDelta of 0"
							}
						},
						"notice": "Library for getting the amount0 and amount1 deltas from the BalanceDelta type",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/types/BeforeSwapDelta.sol": {
				"BeforeSwapDeltaLibrary": {
					"abi": [
						{
							"inputs": [],
							"name": "ZERO_DELTA",
							"outputs": [
								{
									"internalType": "BeforeSwapDelta",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":688:1465  library BeforeSwapDeltaLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":688:1465  library BeforeSwapDeltaLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91cb4669\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":764:832  BeforeSwapDelta public constant ZERO_DELTA = BeforeSwapDelta.wrap(0) */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_4:\n        /* \"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":830:831  0 */\n      0x00\n        /* \"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":764:832  BeforeSwapDelta public constant ZERO_DELTA = BeforeSwapDelta.wrap(0) */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:83   */\n    tag_7:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":72:77   */\n      dup2\n        /* \"#utility.yul\":61:77   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:83   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":89:149   */\n    tag_8:\n        /* \"#utility.yul\":117:120   */\n      0x00\n        /* \"#utility.yul\":138:143   */\n      dup2\n        /* \"#utility.yul\":131:143   */\n      swap1\n      pop\n        /* \"#utility.yul\":89:149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":155:293   */\n    tag_9:\n        /* \"#utility.yul\":203:212   */\n      0x00\n        /* \"#utility.yul\":236:287   */\n      tag_15\n        /* \"#utility.yul\":253:286   */\n      tag_16\n        /* \"#utility.yul\":262:285   */\n      tag_17\n        /* \"#utility.yul\":279:284   */\n      dup5\n        /* \"#utility.yul\":262:285   */\n      tag_7\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":253:286   */\n      tag_8\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":236:287   */\n      tag_7\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":223:287   */\n      swap1\n      pop\n        /* \"#utility.yul\":155:293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":299:471   */\n    tag_10:\n        /* \"#utility.yul\":429:464   */\n      tag_19\n        /* \"#utility.yul\":458:463   */\n      dup2\n        /* \"#utility.yul\":429:464   */\n      tag_9\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":424:427   */\n      dup3\n        /* \"#utility.yul\":417:465   */\n      mstore\n        /* \"#utility.yul\":299:471   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":477:785   */\n    tag_6:\n        /* \"#utility.yul\":613:617   */\n      0x00\n        /* \"#utility.yul\":651:653   */\n      0x20\n        /* \"#utility.yul\":640:649   */\n      dup3\n        /* \"#utility.yul\":636:654   */\n      add\n        /* \"#utility.yul\":628:654   */\n      swap1\n      pop\n        /* \"#utility.yul\":664:778   */\n      tag_21\n        /* \"#utility.yul\":775:776   */\n      0x00\n        /* \"#utility.yul\":764:773   */\n      dup4\n        /* \"#utility.yul\":760:777   */\n      add\n        /* \"#utility.yul\":751:757   */\n      dup5\n        /* \"#utility.yul\":664:778   */\n      tag_10\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":477:785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204382dc0d8c65e5f463a3159d98df4af8670f34de9eee23cdeecd5acd6dd9243a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60db61004c600b8282823980515f1a6073146040577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106032575f3560e01c806391cb4669146036575b5f80fd5b603c6050565b60405160479190608e565b60405180910390f35b5f81565b5f819050919050565b5f819050919050565b5f607a60766072846054565b605d565b6054565b9050919050565b6088816066565b82525050565b5f602082019050609f5f8301846081565b9291505056fea26469706673582212204382dc0d8c65e5f463a3159d98df4af8670f34de9eee23cdeecd5acd6dd9243a64736f6c634300081a0033",
							"opcodes": "PUSH1 0xDB PUSH2 0x4C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x40 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91CB4669 EQ PUSH1 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x47 SWAP2 SWAP1 PUSH1 0x8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7A PUSH1 0x76 PUSH1 0x72 DUP5 PUSH1 0x54 JUMP JUMPDEST PUSH1 0x5D JUMP JUMPDEST PUSH1 0x54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x88 DUP2 PUSH1 0x66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x9F PUSH0 DUP4 ADD DUP5 PUSH1 0x81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER DUP3 0xDC 0xD DUP13 PUSH6 0xE5F463A3159D SWAP9 0xDF BLOBBASEFEE 0xF8 PUSH8 0xF34DE9EEE23CDEE 0xCD GAS 0xCD PUSH14 0xD9243A64736F6C634300081A0033 ",
							"sourceMap": "688:777:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ZERO_DELTA_2183": {
									"entryPoint": 80,
									"id": 2183,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_userDefinedValueType$_BeforeSwapDelta_$2162_to_t_int256_fromStack_library": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_userDefinedValueType$_BeforeSwapDelta_$2162__to_t_int256__fromStack_library_reversed": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_int256_to_t_int256": {
									"entryPoint": 102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 93,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:788:37",
										"nodeType": "YulBlock",
										"src": "0:788:37",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:32:37",
													"nodeType": "YulBlock",
													"src": "51:32:37",
													"statements": [
														{
															"nativeSrc": "61:16:37",
															"nodeType": "YulAssignment",
															"src": "61:16:37",
															"value": {
																"name": "value",
																"nativeSrc": "72:5:37",
																"nodeType": "YulIdentifier",
																"src": "72:5:37"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:37"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "7:76:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:37",
														"nodeType": "YulTypedName",
														"src": "33:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:37",
														"nodeType": "YulTypedName",
														"src": "43:7:37",
														"type": ""
													}
												],
												"src": "7:76:37"
											},
											{
												"body": {
													"nativeSrc": "121:28:37",
													"nodeType": "YulBlock",
													"src": "121:28:37",
													"statements": [
														{
															"nativeSrc": "131:12:37",
															"nodeType": "YulAssignment",
															"src": "131:12:37",
															"value": {
																"name": "value",
																"nativeSrc": "138:5:37",
																"nodeType": "YulIdentifier",
																"src": "138:5:37"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "131:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:37"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "89:60:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "107:5:37",
														"nodeType": "YulTypedName",
														"src": "107:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "117:3:37",
														"nodeType": "YulTypedName",
														"src": "117:3:37",
														"type": ""
													}
												],
												"src": "89:60:37"
											},
											{
												"body": {
													"nativeSrc": "213:80:37",
													"nodeType": "YulBlock",
													"src": "213:80:37",
													"statements": [
														{
															"nativeSrc": "223:64:37",
															"nodeType": "YulAssignment",
															"src": "223:64:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "279:5:37",
																						"nodeType": "YulIdentifier",
																						"src": "279:5:37"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "262:16:37",
																					"nodeType": "YulIdentifier",
																					"src": "262:16:37"
																				},
																				"nativeSrc": "262:23:37",
																				"nodeType": "YulFunctionCall",
																				"src": "262:23:37"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "253:8:37",
																			"nodeType": "YulIdentifier",
																			"src": "253:8:37"
																		},
																		"nativeSrc": "253:33:37",
																		"nodeType": "YulFunctionCall",
																		"src": "253:33:37"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "236:16:37",
																	"nodeType": "YulIdentifier",
																	"src": "236:16:37"
																},
																"nativeSrc": "236:51:37",
																"nodeType": "YulFunctionCall",
																"src": "236:51:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "223:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "223:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_int256_to_t_int256",
												"nativeSrc": "155:138:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "193:5:37",
														"nodeType": "YulTypedName",
														"src": "193:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "203:9:37",
														"nodeType": "YulTypedName",
														"src": "203:9:37",
														"type": ""
													}
												],
												"src": "155:138:37"
											},
											{
												"body": {
													"nativeSrc": "407:64:37",
													"nodeType": "YulBlock",
													"src": "407:64:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "424:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "424:3:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "458:5:37",
																				"nodeType": "YulIdentifier",
																				"src": "458:5:37"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_int256_to_t_int256",
																			"nativeSrc": "429:28:37",
																			"nodeType": "YulIdentifier",
																			"src": "429:28:37"
																		},
																		"nativeSrc": "429:35:37",
																		"nodeType": "YulFunctionCall",
																		"src": "429:35:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "417:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:37"
																},
																"nativeSrc": "417:48:37",
																"nodeType": "YulFunctionCall",
																"src": "417:48:37"
															},
															"nativeSrc": "417:48:37",
															"nodeType": "YulExpressionStatement",
															"src": "417:48:37"
														}
													]
												},
												"name": "abi_encode_t_userDefinedValueType$_BeforeSwapDelta_$2162_to_t_int256_fromStack_library",
												"nativeSrc": "299:172:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "395:5:37",
														"nodeType": "YulTypedName",
														"src": "395:5:37",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "402:3:37",
														"nodeType": "YulTypedName",
														"src": "402:3:37",
														"type": ""
													}
												],
												"src": "299:172:37"
											},
											{
												"body": {
													"nativeSrc": "618:167:37",
													"nodeType": "YulBlock",
													"src": "618:167:37",
													"statements": [
														{
															"nativeSrc": "628:26:37",
															"nodeType": "YulAssignment",
															"src": "628:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "640:9:37",
																		"nodeType": "YulIdentifier",
																		"src": "640:9:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "651:2:37",
																		"nodeType": "YulLiteral",
																		"src": "651:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "636:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:37"
																},
																"nativeSrc": "636:18:37",
																"nodeType": "YulFunctionCall",
																"src": "636:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "628:4:37",
																	"nodeType": "YulIdentifier",
																	"src": "628:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "751:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "764:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "764:9:37"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:1:37",
																				"nodeType": "YulLiteral",
																				"src": "775:1:37",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "760:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "760:3:37"
																		},
																		"nativeSrc": "760:17:37",
																		"nodeType": "YulFunctionCall",
																		"src": "760:17:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_userDefinedValueType$_BeforeSwapDelta_$2162_to_t_int256_fromStack_library",
																	"nativeSrc": "664:86:37",
																	"nodeType": "YulIdentifier",
																	"src": "664:86:37"
																},
																"nativeSrc": "664:114:37",
																"nodeType": "YulFunctionCall",
																"src": "664:114:37"
															},
															"nativeSrc": "664:114:37",
															"nodeType": "YulExpressionStatement",
															"src": "664:114:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_userDefinedValueType$_BeforeSwapDelta_$2162__to_t_int256__fromStack_library_reversed",
												"nativeSrc": "477:308:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "590:9:37",
														"nodeType": "YulTypedName",
														"src": "590:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "602:6:37",
														"nodeType": "YulTypedName",
														"src": "602:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "613:4:37",
														"nodeType": "YulTypedName",
														"src": "613:4:37",
														"type": ""
													}
												],
												"src": "477:308:37"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_int256_to_t_int256(value) -> converted {\n        converted := cleanup_t_int256(identity(cleanup_t_int256(value)))\n    }\n\n    function abi_encode_t_userDefinedValueType$_BeforeSwapDelta_$2162_to_t_int256_fromStack_library(value, pos) {\n        mstore(pos, convert_t_int256_to_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_userDefinedValueType$_BeforeSwapDelta_$2162__to_t_int256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_userDefinedValueType$_BeforeSwapDelta_$2162_to_t_int256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106032575f3560e01c806391cb4669146036575b5f80fd5b603c6050565b60405160479190608e565b60405180910390f35b5f81565b5f819050919050565b5f819050919050565b5f607a60766072846054565b605d565b6054565b9050919050565b6088816066565b82525050565b5f602082019050609f5f8301846081565b9291505056fea26469706673582212204382dc0d8c65e5f463a3159d98df4af8670f34de9eee23cdeecd5acd6dd9243a64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91CB4669 EQ PUSH1 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x47 SWAP2 SWAP1 PUSH1 0x8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7A PUSH1 0x76 PUSH1 0x72 DUP5 PUSH1 0x54 JUMP JUMPDEST PUSH1 0x5D JUMP JUMPDEST PUSH1 0x54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x88 DUP2 PUSH1 0x66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x9F PUSH0 DUP4 ADD DUP5 PUSH1 0x81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER DUP3 0xDC 0xD DUP13 PUSH6 0xE5F463A3159D SWAP9 0xDF BLOBBASEFEE 0xF8 PUSH8 0xF34DE9EEE23CDEE 0xCD GAS 0xCD PUSH14 0xD9243A64736F6C634300081A0033 ",
							"sourceMap": "688:777:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;764:68;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;830:1;764:68;:::o;7:76:37:-;43:7;72:5;61:16;;7:76;;;:::o;89:60::-;117:3;138:5;131:12;;89:60;;;:::o;155:138::-;203:9;236:51;253:33;262:23;279:5;262:23;:::i;:::-;253:33;:::i;:::-;236:51;:::i;:::-;223:64;;155:138;;;:::o;299:172::-;429:35;458:5;429:35;:::i;:::-;424:3;417:48;299:172;;:::o;477:308::-;613:4;651:2;640:9;636:18;628:26;;664:114;775:1;764:9;760:17;751:6;664:114;:::i;:::-;477:308;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "43800",
								"executionCost": "119",
								"totalCost": "43919"
							},
							"external": {
								"ZERO_DELTA()": "infinite"
							},
							"internal": {
								"getSpecifiedDelta(BeforeSwapDelta)": "infinite",
								"getUnspecifiedDelta(BeforeSwapDelta)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204382dc0d8c65e5f463a3159d98df4af8670f34de9eee23cdeecd5acd6dd9243a64736f6c634300081a0033",
									".code": [
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 18,
											"value": "91CB4669"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 764,
											"end": 832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "tag",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 764,
											"end": 832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "tag",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"name": "tag",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 764,
											"end": 832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 83,
											"name": "tag",
											"source": 37,
											"value": "7"
										},
										{
											"begin": 7,
											"end": 83,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 77,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 61,
											"end": 77,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 61,
											"end": 77,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 7,
											"end": 83,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 7,
											"end": 83,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 7,
											"end": 83,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 7,
											"end": 83,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 89,
											"end": 149,
											"name": "tag",
											"source": 37,
											"value": "8"
										},
										{
											"begin": 89,
											"end": 149,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 117,
											"end": 120,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 143,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 131,
											"end": 143,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 131,
											"end": 143,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 89,
											"end": 149,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 89,
											"end": 149,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 89,
											"end": 149,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 89,
											"end": 149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 155,
											"end": 293,
											"name": "tag",
											"source": 37,
											"value": "9"
										},
										{
											"begin": 155,
											"end": 293,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 203,
											"end": 212,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "15"
										},
										{
											"begin": 253,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "17"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 262,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "7"
										},
										{
											"begin": 262,
											"end": 285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 262,
											"end": 285,
											"name": "tag",
											"source": 37,
											"value": "17"
										},
										{
											"begin": 262,
											"end": 285,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 253,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "8"
										},
										{
											"begin": 253,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 253,
											"end": 286,
											"name": "tag",
											"source": 37,
											"value": "16"
										},
										{
											"begin": 253,
											"end": 286,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "7"
										},
										{
											"begin": 236,
											"end": 287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 236,
											"end": 287,
											"name": "tag",
											"source": 37,
											"value": "15"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 223,
											"end": 287,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 223,
											"end": 287,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 155,
											"end": 293,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 155,
											"end": 293,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 155,
											"end": 293,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 155,
											"end": 293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 299,
											"end": 471,
											"name": "tag",
											"source": 37,
											"value": "10"
										},
										{
											"begin": 299,
											"end": 471,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 429,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "19"
										},
										{
											"begin": 458,
											"end": 463,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 429,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "9"
										},
										{
											"begin": 429,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 429,
											"end": 464,
											"name": "tag",
											"source": 37,
											"value": "19"
										},
										{
											"begin": 429,
											"end": 464,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 424,
											"end": 427,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 417,
											"end": 465,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 299,
											"end": 471,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 299,
											"end": 471,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 299,
											"end": 471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 477,
											"end": 785,
											"name": "tag",
											"source": 37,
											"value": "6"
										},
										{
											"begin": 477,
											"end": 785,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 613,
											"end": 617,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 653,
											"name": "PUSH",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 649,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 636,
											"end": 654,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 628,
											"end": 654,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 628,
											"end": 654,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 664,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "21"
										},
										{
											"begin": 775,
											"end": 776,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 773,
											"name": "DUP4",
											"source": 37
										},
										{
											"begin": 760,
											"end": 777,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 751,
											"end": 757,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 664,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "10"
										},
										{
											"begin": 664,
											"end": 778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 664,
											"end": 778,
											"name": "tag",
											"source": 37,
											"value": "21"
										},
										{
											"begin": 664,
											"end": 778,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 477,
											"end": 785,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 477,
											"end": 785,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 477,
											"end": 785,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 477,
											"end": 785,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 477,
											"end": 785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ZERO_DELTA()": "91cb4669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ZERO_DELTA\",\"outputs\":[{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ZERO_DELTA()\":{\"notice\":\"A BeforeSwapDelta of 0\"}},\"notice\":\"Library for getting the specified and unspecified deltas from the BeforeSwapDelta type\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":\"BeforeSwapDeltaLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ZERO_DELTA()": {
								"notice": "A BeforeSwapDelta of 0"
							}
						},
						"notice": "Library for getting the specified and unspecified deltas from the BeforeSwapDelta type",
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/types/Currency.sol": {
				"CurrencyLibrary": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC20TransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NativeTransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ADDRESS_ZERO",
							"outputs": [
								{
									"internalType": "Currency",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This library allows for transferring and holding native tokens and ERC20 tokens",
						"kind": "dev",
						"methods": {},
						"title": "CurrencyLibrary",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v4-core/src/types/Currency.sol\":1059:5457  library CurrencyLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v4-core/src/types/Currency.sol\":1059:5457  library CurrencyLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x66e79509\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@uniswap/v4-core/src/types/Currency.sol\":1400:1465  Currency public constant ADDRESS_ZERO = Currency.wrap(address(0)) */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_4:\n        /* \"@uniswap/v4-core/src/types/Currency.sol\":1462:1463  0 */\n      0x00\n        /* \"@uniswap/v4-core/src/types/Currency.sol\":1400:1465  Currency public constant ADDRESS_ZERO = Currency.wrap(address(0)) */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_7:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_8:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_9:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_17\n        /* \"#utility.yul\":306:340   */\n      tag_18\n        /* \"#utility.yul\":315:339   */\n      tag_19\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_7\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":306:340   */\n      tag_8\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":288:341   */\n      tag_7\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_10:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_21\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_9\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:611   */\n    tag_11:\n        /* \"#utility.yul\":535:544   */\n      0x00\n        /* \"#utility.yul\":568:605   */\n      tag_23\n        /* \"#utility.yul\":599:604   */\n      dup3\n        /* \"#utility.yul\":568:605   */\n      tag_10\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":555:605   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":617:785   */\n    tag_12:\n        /* \"#utility.yul\":741:778   */\n      tag_25\n        /* \"#utility.yul\":772:777   */\n      dup2\n        /* \"#utility.yul\":741:778   */\n      tag_11\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":736:739   */\n      dup3\n        /* \"#utility.yul\":729:779   */\n      mstore\n        /* \"#utility.yul\":617:785   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":791:1087   */\n    tag_6:\n        /* \"#utility.yul\":921:925   */\n      0x00\n        /* \"#utility.yul\":959:961   */\n      0x20\n        /* \"#utility.yul\":948:957   */\n      dup3\n        /* \"#utility.yul\":944:962   */\n      add\n        /* \"#utility.yul\":936:962   */\n      swap1\n      pop\n        /* \"#utility.yul\":972:1080   */\n      tag_27\n        /* \"#utility.yul\":1077:1078   */\n      0x00\n        /* \"#utility.yul\":1066:1075   */\n      dup4\n        /* \"#utility.yul\":1062:1079   */\n      add\n        /* \"#utility.yul\":1053:1059   */\n      dup5\n        /* \"#utility.yul\":972:1080   */\n      tag_12\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":791:1087   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c55422b827a83a898077c5fa575ee5e6217b530eb9dee8acc0a0dc003fa614f564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "61010f61004d600b8282823980515f1a6073146041577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106032575f3560e01c806366e79509146036575b5f80fd5b603c6050565b6040516047919060c2565b60405180910390f35b5f81565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6090608c6088846054565b6073565b6054565b9050919050565b5f609f82607c565b9050919050565b5f60ae826097565b9050919050565b60bc8160a6565b82525050565b5f60208201905060d35f83018460b5565b9291505056fea2646970667358221220c55422b827a83a898077c5fa575ee5e6217b530eb9dee8acc0a0dc003fa614f564736f6c634300081a0033",
							"opcodes": "PUSH2 0x10F PUSH2 0x4D PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x41 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66E79509 EQ PUSH1 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x47 SWAP2 SWAP1 PUSH1 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x90 PUSH1 0x8C PUSH1 0x88 DUP5 PUSH1 0x54 JUMP JUMPDEST PUSH1 0x73 JUMP JUMPDEST PUSH1 0x54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x9F DUP3 PUSH1 0x7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xAE DUP3 PUSH1 0x97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xBC DUP2 PUSH1 0xA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xD3 PUSH0 DUP4 ADD DUP5 PUSH1 0xB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 SLOAD 0x22 0xB8 0x27 0xA8 GASPRICE DUP10 DUP1 PUSH24 0xC5FA575EE5E6217B530EB9DEE8ACC0A0DC003FA614F56473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "1059:4398:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADDRESS_ZERO_2331": {
									"entryPoint": 80,
									"id": 2331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_userDefinedValueType$_Currency_$2214_to_t_address_fromStack_library": {
									"entryPoint": 181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_userDefinedValueType$_Currency_$2214__to_t_address__fromStack_library_reversed": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_to_t_address": {
									"entryPoint": 166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1090:37",
										"nodeType": "YulBlock",
										"src": "0:1090:37",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:37",
													"nodeType": "YulBlock",
													"src": "52:81:37",
													"statements": [
														{
															"nativeSrc": "62:65:37",
															"nodeType": "YulAssignment",
															"src": "62:65:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:37",
																		"nodeType": "YulLiteral",
																		"src": "84:42:37",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:37"
																},
																"nativeSrc": "73:54:37",
																"nodeType": "YulFunctionCall",
																"src": "73:54:37"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:37"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:37",
														"nodeType": "YulTypedName",
														"src": "34:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:37",
														"nodeType": "YulTypedName",
														"src": "44:7:37",
														"type": ""
													}
												],
												"src": "7:126:37"
											},
											{
												"body": {
													"nativeSrc": "171:28:37",
													"nodeType": "YulBlock",
													"src": "171:28:37",
													"statements": [
														{
															"nativeSrc": "181:12:37",
															"nodeType": "YulAssignment",
															"src": "181:12:37",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:37",
																"nodeType": "YulIdentifier",
																"src": "188:5:37"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:37"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:37",
														"nodeType": "YulTypedName",
														"src": "157:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:37",
														"nodeType": "YulTypedName",
														"src": "167:3:37",
														"type": ""
													}
												],
												"src": "139:60:37"
											},
											{
												"body": {
													"nativeSrc": "265:82:37",
													"nodeType": "YulBlock",
													"src": "265:82:37",
													"statements": [
														{
															"nativeSrc": "275:66:37",
															"nodeType": "YulAssignment",
															"src": "275:66:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:37",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:37"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:37",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:37"
																				},
																				"nativeSrc": "315:24:37",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:37"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:37",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:37"
																		},
																		"nativeSrc": "306:34:37",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:37"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:37",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:37"
																},
																"nativeSrc": "288:53:37",
																"nodeType": "YulFunctionCall",
																"src": "288:53:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:37",
														"nodeType": "YulTypedName",
														"src": "245:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:37",
														"nodeType": "YulTypedName",
														"src": "255:9:37",
														"type": ""
													}
												],
												"src": "205:142:37"
											},
											{
												"body": {
													"nativeSrc": "413:66:37",
													"nodeType": "YulBlock",
													"src": "413:66:37",
													"statements": [
														{
															"nativeSrc": "423:50:37",
															"nodeType": "YulAssignment",
															"src": "423:50:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:37"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:37",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:37"
																},
																"nativeSrc": "436:37:37",
																"nodeType": "YulFunctionCall",
																"src": "436:37:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:37",
														"nodeType": "YulTypedName",
														"src": "393:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:37",
														"nodeType": "YulTypedName",
														"src": "403:9:37",
														"type": ""
													}
												],
												"src": "353:126:37"
											},
											{
												"body": {
													"nativeSrc": "545:66:37",
													"nodeType": "YulBlock",
													"src": "545:66:37",
													"statements": [
														{
															"nativeSrc": "555:50:37",
															"nodeType": "YulAssignment",
															"src": "555:50:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "599:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "599:5:37"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "568:30:37",
																	"nodeType": "YulIdentifier",
																	"src": "568:30:37"
																},
																"nativeSrc": "568:37:37",
																"nodeType": "YulFunctionCall",
																"src": "568:37:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "555:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "555:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_address_to_t_address",
												"nativeSrc": "485:126:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "525:5:37",
														"nodeType": "YulTypedName",
														"src": "525:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "535:9:37",
														"nodeType": "YulTypedName",
														"src": "535:9:37",
														"type": ""
													}
												],
												"src": "485:126:37"
											},
											{
												"body": {
													"nativeSrc": "719:66:37",
													"nodeType": "YulBlock",
													"src": "719:66:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "736:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "736:3:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "772:5:37",
																				"nodeType": "YulIdentifier",
																				"src": "772:5:37"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_to_t_address",
																			"nativeSrc": "741:30:37",
																			"nodeType": "YulIdentifier",
																			"src": "741:30:37"
																		},
																		"nativeSrc": "741:37:37",
																		"nodeType": "YulFunctionCall",
																		"src": "741:37:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "729:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "729:6:37"
																},
																"nativeSrc": "729:50:37",
																"nodeType": "YulFunctionCall",
																"src": "729:50:37"
															},
															"nativeSrc": "729:50:37",
															"nodeType": "YulExpressionStatement",
															"src": "729:50:37"
														}
													]
												},
												"name": "abi_encode_t_userDefinedValueType$_Currency_$2214_to_t_address_fromStack_library",
												"nativeSrc": "617:168:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "707:5:37",
														"nodeType": "YulTypedName",
														"src": "707:5:37",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "714:3:37",
														"nodeType": "YulTypedName",
														"src": "714:3:37",
														"type": ""
													}
												],
												"src": "617:168:37"
											},
											{
												"body": {
													"nativeSrc": "926:161:37",
													"nodeType": "YulBlock",
													"src": "926:161:37",
													"statements": [
														{
															"nativeSrc": "936:26:37",
															"nodeType": "YulAssignment",
															"src": "936:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "948:9:37",
																		"nodeType": "YulIdentifier",
																		"src": "948:9:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "959:2:37",
																		"nodeType": "YulLiteral",
																		"src": "959:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "944:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "944:3:37"
																},
																"nativeSrc": "944:18:37",
																"nodeType": "YulFunctionCall",
																"src": "944:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "936:4:37",
																	"nodeType": "YulIdentifier",
																	"src": "936:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1053:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "1053:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1066:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "1066:9:37"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1077:1:37",
																				"nodeType": "YulLiteral",
																				"src": "1077:1:37",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1062:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:37"
																		},
																		"nativeSrc": "1062:17:37",
																		"nodeType": "YulFunctionCall",
																		"src": "1062:17:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_userDefinedValueType$_Currency_$2214_to_t_address_fromStack_library",
																	"nativeSrc": "972:80:37",
																	"nodeType": "YulIdentifier",
																	"src": "972:80:37"
																},
																"nativeSrc": "972:108:37",
																"nodeType": "YulFunctionCall",
																"src": "972:108:37"
															},
															"nativeSrc": "972:108:37",
															"nodeType": "YulExpressionStatement",
															"src": "972:108:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_userDefinedValueType$_Currency_$2214__to_t_address__fromStack_library_reversed",
												"nativeSrc": "791:296:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "898:9:37",
														"nodeType": "YulTypedName",
														"src": "898:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "910:6:37",
														"nodeType": "YulTypedName",
														"src": "910:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "921:4:37",
														"nodeType": "YulTypedName",
														"src": "921:4:37",
														"type": ""
													}
												],
												"src": "791:296:37"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_userDefinedValueType$_Currency_$2214_to_t_address_fromStack_library(value, pos) {\n        mstore(pos, convert_t_address_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_userDefinedValueType$_Currency_$2214__to_t_address__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_userDefinedValueType$_Currency_$2214_to_t_address_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106032575f3560e01c806366e79509146036575b5f80fd5b603c6050565b6040516047919060c2565b60405180910390f35b5f81565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6090608c6088846054565b6073565b6054565b9050919050565b5f609f82607c565b9050919050565b5f60ae826097565b9050919050565b60bc8160a6565b82525050565b5f60208201905060d35f83018460b5565b9291505056fea2646970667358221220c55422b827a83a898077c5fa575ee5e6217b530eb9dee8acc0a0dc003fa614f564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66E79509 EQ PUSH1 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x47 SWAP2 SWAP1 PUSH1 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x90 PUSH1 0x8C PUSH1 0x88 DUP5 PUSH1 0x54 JUMP JUMPDEST PUSH1 0x73 JUMP JUMPDEST PUSH1 0x54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x9F DUP3 PUSH1 0x7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xAE DUP3 PUSH1 0x97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xBC DUP2 PUSH1 0xA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xD3 PUSH0 DUP4 ADD DUP5 PUSH1 0xB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 SLOAD 0x22 0xB8 0x27 0xA8 GASPRICE DUP10 DUP1 PUSH24 0xC5FA575EE5E6217B530EB9DEE8ACC0A0DC003FA614F56473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "1059:4398:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;1400:65;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1462:1;1400:65;:::o;7:126:37:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:::-;535:9;568:37;599:5;568:37;:::i;:::-;555:50;;485:126;;;:::o;617:168::-;741:37;772:5;741:37;:::i;:::-;736:3;729:50;617:168;;:::o;791:296::-;921:4;959:2;948:9;944:18;936:26;;972:108;1077:1;1066:9;1062:17;1053:6;972:108;:::i;:::-;791:296;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "54200",
								"executionCost": "128",
								"totalCost": "54328"
							},
							"external": {
								"ADDRESS_ZERO()": "infinite"
							},
							"internal": {
								"balanceOf(Currency,address)": "infinite",
								"balanceOfSelf(Currency)": "infinite",
								"fromId(uint256)": "infinite",
								"isAddressZero(Currency)": "infinite",
								"toId(Currency)": "infinite",
								"transfer(Currency,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c55422b827a83a898077c5fa575ee5e6217b530eb9dee8acc0a0dc003fa614f564736f6c634300081a0033",
									".code": [
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 19,
											"value": "66E79509"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "tag",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "tag",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1400,
											"end": 1465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "tag",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 1400,
											"end": 1465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "tag",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "tag",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1400,
											"end": 1465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 37,
											"value": "7"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 37,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 37
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 37,
											"value": "8"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 37,
											"value": "9"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "17"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "18"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "19"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "7"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 37,
											"value": "19"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "8"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 37,
											"value": "18"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "7"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 37,
											"value": "17"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 37,
											"value": "10"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "21"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "9"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 37,
											"value": "21"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 485,
											"end": 611,
											"name": "tag",
											"source": 37,
											"value": "11"
										},
										{
											"begin": 485,
											"end": 611,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 535,
											"end": 544,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "23"
										},
										{
											"begin": 599,
											"end": 604,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 568,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "10"
										},
										{
											"begin": 568,
											"end": 605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 568,
											"end": 605,
											"name": "tag",
											"source": 37,
											"value": "23"
										},
										{
											"begin": 568,
											"end": 605,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 555,
											"end": 605,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 555,
											"end": 605,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 485,
											"end": 611,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 485,
											"end": 611,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 485,
											"end": 611,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 485,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 617,
											"end": 785,
											"name": "tag",
											"source": 37,
											"value": "12"
										},
										{
											"begin": 617,
											"end": 785,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 741,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "25"
										},
										{
											"begin": 772,
											"end": 777,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 741,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "11"
										},
										{
											"begin": 741,
											"end": 778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 741,
											"end": 778,
											"name": "tag",
											"source": 37,
											"value": "25"
										},
										{
											"begin": 741,
											"end": 778,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 729,
											"end": 779,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 617,
											"end": 785,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 617,
											"end": 785,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 617,
											"end": 785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 791,
											"end": 1087,
											"name": "tag",
											"source": 37,
											"value": "6"
										},
										{
											"begin": 791,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 921,
											"end": 925,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 957,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 944,
											"end": 962,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 936,
											"end": 962,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 936,
											"end": 962,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 972,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "27"
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1075,
											"name": "DUP4",
											"source": 37
										},
										{
											"begin": 1062,
											"end": 1079,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 1053,
											"end": 1059,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 972,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "12"
										},
										{
											"begin": 972,
											"end": 1080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 972,
											"end": 1080,
											"name": "tag",
											"source": 37,
											"value": "27"
										},
										{
											"begin": 972,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 791,
											"end": 1087,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 791,
											"end": 1087,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 791,
											"end": 1087,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 791,
											"end": 1087,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 791,
											"end": 1087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADDRESS_ZERO()": "66e79509"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ADDRESS_ZERO\",\"outputs\":[{\"internalType\":\"Currency\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This library allows for transferring and holding native tokens and ERC20 tokens\",\"kind\":\"dev\",\"methods\":{},\"title\":\"CurrencyLibrary\",\"version\":1},\"userdoc\":{\"errors\":{\"ERC20TransferFailed()\":[{\"notice\":\"Additional context for ERC-7751 wrapped error when an ERC20 transfer fails\"}],\"NativeTransferFailed()\":[{\"notice\":\"Additional context for ERC-7751 wrapped error when a native transfer fails\"}]},\"kind\":\"user\",\"methods\":{\"ADDRESS_ZERO()\":{\"notice\":\"A constant to represent the native currency\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/types/Currency.sol\":\"CurrencyLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ERC20TransferFailed()": [
								{
									"notice": "Additional context for ERC-7751 wrapped error when an ERC20 transfer fails"
								}
							],
							"NativeTransferFailed()": [
								{
									"notice": "Additional context for ERC-7751 wrapped error when a native transfer fails"
								}
							]
						},
						"kind": "user",
						"methods": {
							"ADDRESS_ZERO()": {
								"notice": "A constant to represent the native currency"
							}
						},
						"version": 1
					}
				}
			},
			"@uniswap/v4-core/src/types/PoolId.sol": {
				"PoolIdLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v4-core/src/types/PoolId.sol\":173:538  library PoolIdLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v4-core/src/types/PoolId.sol\":173:538  library PoolIdLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122097f29b6838bfce238f864124613802a62be06bcd8a0c2148873dd54abc31651c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122097f29b6838bfce238f864124613802a62be06bcd8a0c2148873dd54abc31651c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 CALLCODE SWAP12 PUSH9 0x38BFCE238F86412461 CODESIZE MUL 0xA6 0x2B 0xE0 PUSH12 0xCD8A0C2148873DD54ABC3165 SHR PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "173:365:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122097f29b6838bfce238f864124613802a62be06bcd8a0c2148873dd54abc31651c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 CALLCODE SWAP12 PUSH9 0x38BFCE238F86412461 CODESIZE MUL 0xA6 0x2B 0xE0 PUSH12 0xCD8A0C2148873DD54ABC3165 SHR PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "173:365:20:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toId(struct PoolKey memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 20,
									"value": "B"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "BYTE",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "ADDRESS",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "MSTORE8",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 173,
									"end": 538,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122097f29b6838bfce238f864124613802a62be06bcd8a0c2148873dd54abc31651c64736f6c634300081a0033",
									".code": [
										{
											"begin": 173,
											"end": 538,
											"name": "PUSHDEPLOYADDRESS",
											"source": 20
										},
										{
											"begin": 173,
											"end": 538,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 173,
											"end": 538,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 173,
											"end": 538,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 173,
											"end": 538,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 538,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 173,
											"end": 538,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 538,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 173,
											"end": 538,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library for computing the ID of a pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v4-core/src/types/PoolId.sol\":\"PoolIdLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Library for computing the ID of a pool",
						"version": 1
					}
				}
			},
			"contracts/Transaction.sol": {
				"Transaction": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract IERC20",
									"name": "USDC_ADDRESS",
									"type": "address"
								}
							],
							"name": "ContractDeployed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UNISWAP_POOLMANAGER_SEPOLIA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC_ADDRESS_SEPOLIA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "balanceOfETH",
									"type": "uint16"
								}
							],
							"name": "executeSwap",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "gainOfUSDC",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Transaction.sol\":1085:2146  contract Transaction {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Transaction.sol\":1532:1725  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Transaction.sol\":1564:1574  msg.sender */\n  caller\n    /* \"contracts/Transaction.sol\":1556:1561  owner */\n  0x02\n  0x00\n    /* \"contracts/Transaction.sol\":1556:1574  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Transaction.sol\":1312:1354  0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n  0x1c7d4b196cb0c7b01d743fbc6116a902379c7238\n    /* \"contracts/Transaction.sol\":1593:1605  USDC_ADDRESS */\n  0x01\n  0x00\n    /* \"contracts/Transaction.sol\":1593:1628  USDC_ADDRESS = USDC_ADDRESS_SEPOLIA */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Transaction.sol\":1652:1664  USDC_ADDRESS */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Transaction.sol\":1638:1642  USDC */\n  0x00\n  dup1\n    /* \"contracts/Transaction.sol\":1638:1665  USDC = IERC20(USDC_ADDRESS) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Transaction.sol\":1689:1718  ContractDeployed(owner, USDC) */\n  0x33c981baba081f8fd2c52ac6ad1ea95b6814b4376640f55689051f6584729688\n    /* \"contracts/Transaction.sol\":1706:1711  owner */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Transaction.sol\":1713:1717  USDC */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Transaction.sol\":1689:1718  ContractDeployed(owner, USDC) */\n  mload(0x40)\n  tag_4\n  swap3\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/Transaction.sol\":1085:2146  contract Transaction {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:133   */\ntag_7:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_8:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_18\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_7\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_9:\n    /* \"#utility.yul\":328:352   */\n  tag_20\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_8\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:425   */\ntag_10:\n    /* \"#utility.yul\":393:396   */\n  0x00\n    /* \"#utility.yul\":414:419   */\n  dup2\n    /* \"#utility.yul\":407:419   */\n  swap1\n  pop\n    /* \"#utility.yul\":365:425   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":431:573   */\ntag_11:\n    /* \"#utility.yul\":481:490   */\n  0x00\n    /* \"#utility.yul\":514:567   */\n  tag_23\n    /* \"#utility.yul\":532:566   */\n  tag_24\n    /* \"#utility.yul\":541:565   */\n  tag_25\n    /* \"#utility.yul\":559:564   */\n  dup5\n    /* \"#utility.yul\":541:565   */\n  tag_7\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":532:566   */\n  tag_10\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":514:567   */\n  tag_7\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":501:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":431:573   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":579:705   */\ntag_12:\n    /* \"#utility.yul\":629:638   */\n  0x00\n    /* \"#utility.yul\":662:699   */\n  tag_27\n    /* \"#utility.yul\":693:698   */\n  dup3\n    /* \"#utility.yul\":662:699   */\n  tag_11\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":649:699   */\n  swap1\n  pop\n    /* \"#utility.yul\":579:705   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":711:850   */\ntag_13:\n    /* \"#utility.yul\":774:783   */\n  0x00\n    /* \"#utility.yul\":807:844   */\n  tag_29\n    /* \"#utility.yul\":838:843   */\n  dup3\n    /* \"#utility.yul\":807:844   */\n  tag_12\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":794:844   */\n  swap1\n  pop\n    /* \"#utility.yul\":711:850   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":856:1013   */\ntag_14:\n    /* \"#utility.yul\":956:1006   */\n  tag_31\n    /* \"#utility.yul\":1000:1005   */\n  dup2\n    /* \"#utility.yul\":956:1006   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":951:954   */\n  dup3\n    /* \"#utility.yul\":944:1007   */\n  mstore\n    /* \"#utility.yul\":856:1013   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1019:1377   */\ntag_5:\n    /* \"#utility.yul\":1153:1157   */\n  0x00\n    /* \"#utility.yul\":1191:1193   */\n  0x40\n    /* \"#utility.yul\":1180:1189   */\n  dup3\n    /* \"#utility.yul\":1176:1194   */\n  add\n    /* \"#utility.yul\":1168:1194   */\n  swap1\n  pop\n    /* \"#utility.yul\":1204:1275   */\n  tag_33\n    /* \"#utility.yul\":1272:1273   */\n  0x00\n    /* \"#utility.yul\":1261:1270   */\n  dup4\n    /* \"#utility.yul\":1257:1274   */\n  add\n    /* \"#utility.yul\":1248:1254   */\n  dup6\n    /* \"#utility.yul\":1204:1275   */\n  tag_9\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1285:1370   */\n  tag_34\n    /* \"#utility.yul\":1366:1368   */\n  0x20\n    /* \"#utility.yul\":1355:1364   */\n  dup4\n    /* \"#utility.yul\":1351:1369   */\n  add\n    /* \"#utility.yul\":1342:1348   */\n  dup5\n    /* \"#utility.yul\":1285:1370   */\n  tag_14\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1019:1377   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Transaction.sol\":1085:2146  contract Transaction {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Transaction.sol\":1085:2146  contract Transaction {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4bf2e99b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x74667906\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xbb09d9b7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xca43b4fc\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Transaction.sol\":1265:1354  address public constant USDC_ADDRESS_SEPOLIA = 0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Transaction.sol\":1163:1259  address public constant UNISWAP_POOLMANAGER_SEPOLIA = 0xC532a74256D3Db42D0Bf7a0400fEFDbad7694008 */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Transaction.sol\":1113:1131  IERC20 public USDC */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Transaction.sol\":1421:1441  address public owner */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Transaction.sol\":1361:1388  address public USDC_ADDRESS */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Transaction.sol\":1842:2144  function executeSwap (uint16 balanceOfETH) public view onlyOwner returns (uint16 gainOfUSDC, uint256) {... */\n    tag_8:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Transaction.sol\":1265:1354  address public constant USDC_ADDRESS_SEPOLIA = 0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n    tag_10:\n        /* \"contracts/Transaction.sol\":1312:1354  0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n      0x1c7d4b196cb0c7b01d743fbc6116a902379c7238\n        /* \"contracts/Transaction.sol\":1265:1354  address public constant USDC_ADDRESS_SEPOLIA = 0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238 */\n      dup2\n      jump\t// out\n        /* \"contracts/Transaction.sol\":1163:1259  address public constant UNISWAP_POOLMANAGER_SEPOLIA = 0xC532a74256D3Db42D0Bf7a0400fEFDbad7694008 */\n    tag_14:\n        /* \"contracts/Transaction.sol\":1217:1259  0xC532a74256D3Db42D0Bf7a0400fEFDbad7694008 */\n      0xc532a74256d3db42d0bf7a0400fefdbad7694008\n        /* \"contracts/Transaction.sol\":1163:1259  address public constant UNISWAP_POOLMANAGER_SEPOLIA = 0xC532a74256D3Db42D0Bf7a0400fEFDbad7694008 */\n      dup2\n      jump\t// out\n        /* \"contracts/Transaction.sol\":1113:1131  IERC20 public USDC */\n    tag_17:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Transaction.sol\":1421:1441  address public owner */\n    tag_21:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Transaction.sol\":1361:1388  address public USDC_ADDRESS */\n    tag_24:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Transaction.sol\":1842:2144  function executeSwap (uint16 balanceOfETH) public view onlyOwner returns (uint16 gainOfUSDC, uint256) {... */\n    tag_29:\n        /* \"contracts/Transaction.sol\":1916:1933  uint16 gainOfUSDC */\n      0x00\n        /* \"contracts/Transaction.sol\":1935:1942  uint256 */\n      dup1\n        /* \"contracts/Transaction.sol\":1785:1790  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Transaction.sol\":1771:1790  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Transaction.sol\":1771:1781  msg.sender */\n      caller\n        /* \"contracts/Transaction.sol\":1771:1790  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Transaction.sol\":1762:1818  require (msg.sender == owner, \"Only owner can do this.\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"contracts/Transaction.sol\":2072:2076  3039 */\n      0x0bdf\n        /* \"contracts/Transaction.sol\":2057:2069  balanceOfETH */\n      dup4\n        /* \"contracts/Transaction.sol\":2057:2076  balanceOfETH * 3039 */\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/Transaction.sol\":2044:2076  gainOfUSDC = balanceOfETH * 3039 */\n      swap2\n      pop\n        /* \"contracts/Transaction.sol\":2095:2105  gainOfUSDC */\n      dup2\n        /* \"contracts/Transaction.sol\":2107:2111  USDC */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Transaction.sol\":2107:2121  USDC.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Transaction.sol\":2130:2134  this */\n      address\n        /* \"contracts/Transaction.sol\":2107:2136  USDC.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_39:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"contracts/Transaction.sol\":2087:2137  return (gainOfUSDC, USDC.balanceOf(address(this))) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Transaction.sol\":1842:2144  function executeSwap (uint16 balanceOfETH) public view onlyOwner returns (uint16 gainOfUSDC, uint256) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_44:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_45:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_70\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_44\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_46:\n        /* \"#utility.yul\":328:352   */\n      tag_72\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_45\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_12:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_74\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_46\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:653   */\n    tag_47:\n        /* \"#utility.yul\":621:624   */\n      0x00\n        /* \"#utility.yul\":642:647   */\n      dup2\n        /* \"#utility.yul\":635:647   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":659:801   */\n    tag_48:\n        /* \"#utility.yul\":709:718   */\n      0x00\n        /* \"#utility.yul\":742:795   */\n      tag_77\n        /* \"#utility.yul\":760:794   */\n      tag_78\n        /* \"#utility.yul\":769:793   */\n      tag_79\n        /* \"#utility.yul\":787:792   */\n      dup5\n        /* \"#utility.yul\":769:793   */\n      tag_44\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":760:794   */\n      tag_47\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":742:795   */\n      tag_44\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":729:795   */\n      swap1\n      pop\n        /* \"#utility.yul\":659:801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":807:933   */\n    tag_49:\n        /* \"#utility.yul\":857:866   */\n      0x00\n        /* \"#utility.yul\":890:927   */\n      tag_81\n        /* \"#utility.yul\":921:926   */\n      dup3\n        /* \"#utility.yul\":890:927   */\n      tag_48\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":877:927   */\n      swap1\n      pop\n        /* \"#utility.yul\":807:933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":939:1078   */\n    tag_50:\n        /* \"#utility.yul\":1002:1011   */\n      0x00\n        /* \"#utility.yul\":1035:1072   */\n      tag_83\n        /* \"#utility.yul\":1066:1071   */\n      dup3\n        /* \"#utility.yul\":1035:1072   */\n      tag_49\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1022:1072   */\n      swap1\n      pop\n        /* \"#utility.yul\":939:1078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1084:1241   */\n    tag_51:\n        /* \"#utility.yul\":1184:1234   */\n      tag_85\n        /* \"#utility.yul\":1228:1233   */\n      dup2\n        /* \"#utility.yul\":1184:1234   */\n      tag_50\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1179:1182   */\n      dup3\n        /* \"#utility.yul\":1172:1235   */\n      mstore\n        /* \"#utility.yul\":1084:1241   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1247:1495   */\n    tag_19:\n        /* \"#utility.yul\":1353:1357   */\n      0x00\n        /* \"#utility.yul\":1391:1393   */\n      0x20\n        /* \"#utility.yul\":1380:1389   */\n      dup3\n        /* \"#utility.yul\":1376:1394   */\n      add\n        /* \"#utility.yul\":1368:1394   */\n      swap1\n      pop\n        /* \"#utility.yul\":1404:1488   */\n      tag_87\n        /* \"#utility.yul\":1485:1486   */\n      0x00\n        /* \"#utility.yul\":1474:1483   */\n      dup4\n        /* \"#utility.yul\":1470:1487   */\n      add\n        /* \"#utility.yul\":1461:1467   */\n      dup5\n        /* \"#utility.yul\":1404:1488   */\n      tag_51\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1247:1495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1582:1699   */\n    tag_53:\n        /* \"#utility.yul\":1691:1692   */\n      0x00\n        /* \"#utility.yul\":1688:1689   */\n      dup1\n        /* \"#utility.yul\":1681:1693   */\n      revert\n        /* \"#utility.yul\":1828:1917   */\n    tag_55:\n        /* \"#utility.yul\":1864:1871   */\n      0x00\n        /* \"#utility.yul\":1904:1910   */\n      0xffff\n        /* \"#utility.yul\":1897:1902   */\n      dup3\n        /* \"#utility.yul\":1893:1911   */\n      and\n        /* \"#utility.yul\":1882:1911   */\n      swap1\n      pop\n        /* \"#utility.yul\":1828:1917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1923:2043   */\n    tag_56:\n        /* \"#utility.yul\":1995:2018   */\n      tag_93\n        /* \"#utility.yul\":2012:2017   */\n      dup2\n        /* \"#utility.yul\":1995:2018   */\n      tag_55\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1988:1993   */\n      dup2\n        /* \"#utility.yul\":1985:2019   */\n      eq\n        /* \"#utility.yul\":1975:2037   */\n      tag_94\n      jumpi\n        /* \"#utility.yul\":2033:2034   */\n      0x00\n        /* \"#utility.yul\":2030:2031   */\n      dup1\n        /* \"#utility.yul\":2023:2035   */\n      revert\n        /* \"#utility.yul\":1975:2037   */\n    tag_94:\n        /* \"#utility.yul\":1923:2043   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2049:2186   */\n    tag_57:\n        /* \"#utility.yul\":2094:2099   */\n      0x00\n        /* \"#utility.yul\":2132:2138   */\n      dup2\n        /* \"#utility.yul\":2119:2139   */\n      calldataload\n        /* \"#utility.yul\":2110:2139   */\n      swap1\n      pop\n        /* \"#utility.yul\":2148:2180   */\n      tag_96\n        /* \"#utility.yul\":2174:2179   */\n      dup2\n        /* \"#utility.yul\":2148:2180   */\n      tag_56\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2049:2186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2192:2519   */\n    tag_28:\n        /* \"#utility.yul\":2250:2256   */\n      0x00\n        /* \"#utility.yul\":2299:2301   */\n      0x20\n        /* \"#utility.yul\":2287:2296   */\n      dup3\n        /* \"#utility.yul\":2278:2285   */\n      dup5\n        /* \"#utility.yul\":2274:2297   */\n      sub\n        /* \"#utility.yul\":2270:2302   */\n      slt\n        /* \"#utility.yul\":2267:2386   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":2305:2384   */\n      tag_99\n      tag_53\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2267:2386   */\n    tag_98:\n        /* \"#utility.yul\":2425:2426   */\n      0x00\n        /* \"#utility.yul\":2450:2502   */\n      tag_100\n        /* \"#utility.yul\":2494:2501   */\n      dup5\n        /* \"#utility.yul\":2485:2491   */\n      dup3\n        /* \"#utility.yul\":2474:2483   */\n      dup6\n        /* \"#utility.yul\":2470:2492   */\n      add\n        /* \"#utility.yul\":2450:2502   */\n      tag_57\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2440:2502   */\n      swap2\n      pop\n        /* \"#utility.yul\":2396:2512   */\n      pop\n        /* \"#utility.yul\":2192:2519   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2525:2640   */\n    tag_58:\n        /* \"#utility.yul\":2610:2633   */\n      tag_102\n        /* \"#utility.yul\":2627:2632   */\n      dup2\n        /* \"#utility.yul\":2610:2633   */\n      tag_55\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2605:2608   */\n      dup3\n        /* \"#utility.yul\":2598:2634   */\n      mstore\n        /* \"#utility.yul\":2525:2640   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2646:2723   */\n    tag_59:\n        /* \"#utility.yul\":2683:2690   */\n      0x00\n        /* \"#utility.yul\":2712:2717   */\n      dup2\n        /* \"#utility.yul\":2701:2717   */\n      swap1\n      pop\n        /* \"#utility.yul\":2646:2723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2729:2847   */\n    tag_60:\n        /* \"#utility.yul\":2816:2840   */\n      tag_105\n        /* \"#utility.yul\":2834:2839   */\n      dup2\n        /* \"#utility.yul\":2816:2840   */\n      tag_59\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2811:2814   */\n      dup3\n        /* \"#utility.yul\":2804:2841   */\n      mstore\n        /* \"#utility.yul\":2729:2847   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2853:3181   */\n    tag_31:\n        /* \"#utility.yul\":2972:2976   */\n      0x00\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2999:3008   */\n      dup3\n        /* \"#utility.yul\":2995:3013   */\n      add\n        /* \"#utility.yul\":2987:3013   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3092   */\n      tag_107\n        /* \"#utility.yul\":3089:3090   */\n      0x00\n        /* \"#utility.yul\":3078:3087   */\n      dup4\n        /* \"#utility.yul\":3074:3091   */\n      add\n        /* \"#utility.yul\":3065:3071   */\n      dup6\n        /* \"#utility.yul\":3023:3092   */\n      tag_58\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3102:3174   */\n      tag_108\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"#utility.yul\":3159:3168   */\n      dup4\n        /* \"#utility.yul\":3155:3173   */\n      add\n        /* \"#utility.yul\":3146:3152   */\n      dup5\n        /* \"#utility.yul\":3102:3174   */\n      tag_60\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2853:3181   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3187:3356   */\n    tag_61:\n        /* \"#utility.yul\":3271:3282   */\n      0x00\n        /* \"#utility.yul\":3305:3311   */\n      dup3\n        /* \"#utility.yul\":3300:3303   */\n      dup3\n        /* \"#utility.yul\":3293:3312   */\n      mstore\n        /* \"#utility.yul\":3345:3349   */\n      0x20\n        /* \"#utility.yul\":3340:3343   */\n      dup3\n        /* \"#utility.yul\":3336:3350   */\n      add\n        /* \"#utility.yul\":3321:3350   */\n      swap1\n      pop\n        /* \"#utility.yul\":3187:3356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3362:3535   */\n    tag_62:\n        /* \"#utility.yul\":3502:3527   */\n      0x4f6e6c79206f776e65722063616e20646f20746869732e000000000000000000\n        /* \"#utility.yul\":3498:3499   */\n      0x00\n        /* \"#utility.yul\":3490:3496   */\n      dup3\n        /* \"#utility.yul\":3486:3500   */\n      add\n        /* \"#utility.yul\":3479:3528   */\n      mstore\n        /* \"#utility.yul\":3362:3535   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3541:3907   */\n    tag_63:\n        /* \"#utility.yul\":3683:3686   */\n      0x00\n        /* \"#utility.yul\":3704:3771   */\n      tag_112\n        /* \"#utility.yul\":3768:3770   */\n      0x17\n        /* \"#utility.yul\":3763:3766   */\n      dup4\n        /* \"#utility.yul\":3704:3771   */\n      tag_61\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3697:3771   */\n      swap2\n      pop\n        /* \"#utility.yul\":3780:3873   */\n      tag_113\n        /* \"#utility.yul\":3869:3872   */\n      dup3\n        /* \"#utility.yul\":3780:3873   */\n      tag_62\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3898:3900   */\n      0x20\n        /* \"#utility.yul\":3893:3896   */\n      dup3\n        /* \"#utility.yul\":3889:3901   */\n      add\n        /* \"#utility.yul\":3882:3901   */\n      swap1\n      pop\n        /* \"#utility.yul\":3541:3907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3913:4332   */\n    tag_35:\n        /* \"#utility.yul\":4079:4083   */\n      0x00\n        /* \"#utility.yul\":4117:4119   */\n      0x20\n        /* \"#utility.yul\":4106:4115   */\n      dup3\n        /* \"#utility.yul\":4102:4120   */\n      add\n        /* \"#utility.yul\":4094:4120   */\n      swap1\n      pop\n        /* \"#utility.yul\":4166:4175   */\n      dup2\n        /* \"#utility.yul\":4160:4164   */\n      dup2\n        /* \"#utility.yul\":4156:4176   */\n      sub\n        /* \"#utility.yul\":4152:4153   */\n      0x00\n        /* \"#utility.yul\":4141:4150   */\n      dup4\n        /* \"#utility.yul\":4137:4154   */\n      add\n        /* \"#utility.yul\":4130:4177   */\n      mstore\n        /* \"#utility.yul\":4194:4325   */\n      tag_115\n        /* \"#utility.yul\":4320:4324   */\n      dup2\n        /* \"#utility.yul\":4194:4325   */\n      tag_63\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4186:4325   */\n      swap1\n      pop\n        /* \"#utility.yul\":3913:4332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4338:4518   */\n    tag_64:\n        /* \"#utility.yul\":4386:4463   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4383:4384   */\n      0x00\n        /* \"#utility.yul\":4376:4464   */\n      mstore\n        /* \"#utility.yul\":4483:4487   */\n      0x11\n        /* \"#utility.yul\":4480:4481   */\n      0x04\n        /* \"#utility.yul\":4473:4488   */\n      mstore\n        /* \"#utility.yul\":4507:4511   */\n      0x24\n        /* \"#utility.yul\":4504:4505   */\n      0x00\n        /* \"#utility.yul\":4497:4512   */\n      revert\n        /* \"#utility.yul\":4524:4799   */\n    tag_38:\n        /* \"#utility.yul\":4563:4570   */\n      0x00\n        /* \"#utility.yul\":4586:4605   */\n      tag_118\n        /* \"#utility.yul\":4603:4604   */\n      dup3\n        /* \"#utility.yul\":4586:4605   */\n      tag_55\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4581:4605   */\n      swap2\n      pop\n        /* \"#utility.yul\":4619:4638   */\n      tag_119\n        /* \"#utility.yul\":4636:4637   */\n      dup4\n        /* \"#utility.yul\":4619:4638   */\n      tag_55\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":4614:4638   */\n      swap3\n      pop\n        /* \"#utility.yul\":4673:4674   */\n      dup3\n        /* \"#utility.yul\":4670:4671   */\n      dup3\n        /* \"#utility.yul\":4666:4675   */\n      mul\n        /* \"#utility.yul\":4695:4724   */\n      tag_120\n        /* \"#utility.yul\":4712:4723   */\n      dup2\n        /* \"#utility.yul\":4695:4724   */\n      tag_55\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":4684:4724   */\n      swap2\n      pop\n        /* \"#utility.yul\":4756:4767   */\n      dup1\n        /* \"#utility.yul\":4747:4754   */\n      dup3\n        /* \"#utility.yul\":4744:4768   */\n      eq\n        /* \"#utility.yul\":4734:4792   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":4772:4790   */\n      tag_122\n      tag_64\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4734:4792   */\n    tag_121:\n        /* \"#utility.yul\":4571:4799   */\n      pop\n        /* \"#utility.yul\":4524:4799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4805:4927   */\n    tag_65:\n        /* \"#utility.yul\":4878:4902   */\n      tag_124\n        /* \"#utility.yul\":4896:4901   */\n      dup2\n        /* \"#utility.yul\":4878:4902   */\n      tag_59\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4871:4876   */\n      dup2\n        /* \"#utility.yul\":4868:4903   */\n      eq\n        /* \"#utility.yul\":4858:4921   */\n      tag_125\n      jumpi\n        /* \"#utility.yul\":4917:4918   */\n      0x00\n        /* \"#utility.yul\":4914:4915   */\n      dup1\n        /* \"#utility.yul\":4907:4919   */\n      revert\n        /* \"#utility.yul\":4858:4921   */\n    tag_125:\n        /* \"#utility.yul\":4805:4927   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4933:5076   */\n    tag_66:\n        /* \"#utility.yul\":4990:4995   */\n      0x00\n        /* \"#utility.yul\":5021:5027   */\n      dup2\n        /* \"#utility.yul\":5015:5028   */\n      mload\n        /* \"#utility.yul\":5006:5028   */\n      swap1\n      pop\n        /* \"#utility.yul\":5037:5070   */\n      tag_127\n        /* \"#utility.yul\":5064:5069   */\n      dup2\n        /* \"#utility.yul\":5037:5070   */\n      tag_65\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4933:5076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5082:5433   */\n    tag_43:\n        /* \"#utility.yul\":5152:5158   */\n      0x00\n        /* \"#utility.yul\":5201:5203   */\n      0x20\n        /* \"#utility.yul\":5189:5198   */\n      dup3\n        /* \"#utility.yul\":5180:5187   */\n      dup5\n        /* \"#utility.yul\":5176:5199   */\n      sub\n        /* \"#utility.yul\":5172:5204   */\n      slt\n        /* \"#utility.yul\":5169:5288   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":5207:5286   */\n      tag_130\n      tag_53\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5169:5288   */\n    tag_129:\n        /* \"#utility.yul\":5327:5328   */\n      0x00\n        /* \"#utility.yul\":5352:5416   */\n      tag_131\n        /* \"#utility.yul\":5408:5415   */\n      dup5\n        /* \"#utility.yul\":5399:5405   */\n      dup3\n        /* \"#utility.yul\":5388:5397   */\n      dup6\n        /* \"#utility.yul\":5384:5406   */\n      add\n        /* \"#utility.yul\":5352:5416   */\n      tag_66\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5342:5416   */\n      swap2\n      pop\n        /* \"#utility.yul\":5298:5426   */\n      pop\n        /* \"#utility.yul\":5082:5433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e9ea542ec63bea142ef9dbe6c82771fb6705e0bb5ea5b66728f5ec10a26b4d9464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2636": {
									"entryPoint": null,
									"id": 2636,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_contract$_IERC20_$77__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1380:37",
										"nodeType": "YulBlock",
										"src": "0:1380:37",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:37",
													"nodeType": "YulBlock",
													"src": "52:81:37",
													"statements": [
														{
															"nativeSrc": "62:65:37",
															"nodeType": "YulAssignment",
															"src": "62:65:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:37",
																		"nodeType": "YulLiteral",
																		"src": "84:42:37",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:37"
																},
																"nativeSrc": "73:54:37",
																"nodeType": "YulFunctionCall",
																"src": "73:54:37"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:37"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:37",
														"nodeType": "YulTypedName",
														"src": "34:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:37",
														"nodeType": "YulTypedName",
														"src": "44:7:37",
														"type": ""
													}
												],
												"src": "7:126:37"
											},
											{
												"body": {
													"nativeSrc": "184:51:37",
													"nodeType": "YulBlock",
													"src": "184:51:37",
													"statements": [
														{
															"nativeSrc": "194:35:37",
															"nodeType": "YulAssignment",
															"src": "194:35:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:37"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:37",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:37"
																},
																"nativeSrc": "205:24:37",
																"nodeType": "YulFunctionCall",
																"src": "205:24:37"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:37"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:37",
														"nodeType": "YulTypedName",
														"src": "166:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:37",
														"nodeType": "YulTypedName",
														"src": "176:7:37",
														"type": ""
													}
												],
												"src": "139:96:37"
											},
											{
												"body": {
													"nativeSrc": "306:53:37",
													"nodeType": "YulBlock",
													"src": "306:53:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:37",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:37"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:37",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:37"
																		},
																		"nativeSrc": "328:24:37",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:37"
																},
																"nativeSrc": "316:37:37",
																"nodeType": "YulFunctionCall",
																"src": "316:37:37"
															},
															"nativeSrc": "316:37:37",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:37"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:37",
														"nodeType": "YulTypedName",
														"src": "294:5:37",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:37",
														"nodeType": "YulTypedName",
														"src": "301:3:37",
														"type": ""
													}
												],
												"src": "241:118:37"
											},
											{
												"body": {
													"nativeSrc": "397:28:37",
													"nodeType": "YulBlock",
													"src": "397:28:37",
													"statements": [
														{
															"nativeSrc": "407:12:37",
															"nodeType": "YulAssignment",
															"src": "407:12:37",
															"value": {
																"name": "value",
																"nativeSrc": "414:5:37",
																"nodeType": "YulIdentifier",
																"src": "414:5:37"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "407:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "407:3:37"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "365:60:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "383:5:37",
														"nodeType": "YulTypedName",
														"src": "383:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "393:3:37",
														"nodeType": "YulTypedName",
														"src": "393:3:37",
														"type": ""
													}
												],
												"src": "365:60:37"
											},
											{
												"body": {
													"nativeSrc": "491:82:37",
													"nodeType": "YulBlock",
													"src": "491:82:37",
													"statements": [
														{
															"nativeSrc": "501:66:37",
															"nodeType": "YulAssignment",
															"src": "501:66:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "559:5:37",
																						"nodeType": "YulIdentifier",
																						"src": "559:5:37"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "541:17:37",
																					"nodeType": "YulIdentifier",
																					"src": "541:17:37"
																				},
																				"nativeSrc": "541:24:37",
																				"nodeType": "YulFunctionCall",
																				"src": "541:24:37"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "532:8:37",
																			"nodeType": "YulIdentifier",
																			"src": "532:8:37"
																		},
																		"nativeSrc": "532:34:37",
																		"nodeType": "YulFunctionCall",
																		"src": "532:34:37"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "514:17:37",
																	"nodeType": "YulIdentifier",
																	"src": "514:17:37"
																},
																"nativeSrc": "514:53:37",
																"nodeType": "YulFunctionCall",
																"src": "514:53:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "501:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "501:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "431:142:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "471:5:37",
														"nodeType": "YulTypedName",
														"src": "471:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "481:9:37",
														"nodeType": "YulTypedName",
														"src": "481:9:37",
														"type": ""
													}
												],
												"src": "431:142:37"
											},
											{
												"body": {
													"nativeSrc": "639:66:37",
													"nodeType": "YulBlock",
													"src": "639:66:37",
													"statements": [
														{
															"nativeSrc": "649:50:37",
															"nodeType": "YulAssignment",
															"src": "649:50:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "693:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "693:5:37"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "662:30:37",
																	"nodeType": "YulIdentifier",
																	"src": "662:30:37"
																},
																"nativeSrc": "662:37:37",
																"nodeType": "YulFunctionCall",
																"src": "662:37:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "649:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "649:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "579:126:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "619:5:37",
														"nodeType": "YulTypedName",
														"src": "619:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "629:9:37",
														"nodeType": "YulTypedName",
														"src": "629:9:37",
														"type": ""
													}
												],
												"src": "579:126:37"
											},
											{
												"body": {
													"nativeSrc": "784:66:37",
													"nodeType": "YulBlock",
													"src": "784:66:37",
													"statements": [
														{
															"nativeSrc": "794:50:37",
															"nodeType": "YulAssignment",
															"src": "794:50:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "838:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "838:5:37"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "807:30:37",
																	"nodeType": "YulIdentifier",
																	"src": "807:30:37"
																},
																"nativeSrc": "807:37:37",
																"nodeType": "YulFunctionCall",
																"src": "807:37:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "794:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "794:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nativeSrc": "711:139:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "764:5:37",
														"nodeType": "YulTypedName",
														"src": "764:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "774:9:37",
														"nodeType": "YulTypedName",
														"src": "774:9:37",
														"type": ""
													}
												],
												"src": "711:139:37"
											},
											{
												"body": {
													"nativeSrc": "934:79:37",
													"nodeType": "YulBlock",
													"src": "934:79:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1000:5:37",
																				"nodeType": "YulIdentifier",
																				"src": "1000:5:37"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nativeSrc": "956:43:37",
																			"nodeType": "YulIdentifier",
																			"src": "956:43:37"
																		},
																		"nativeSrc": "956:50:37",
																		"nodeType": "YulFunctionCall",
																		"src": "956:50:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "944:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:37"
																},
																"nativeSrc": "944:63:37",
																"nodeType": "YulFunctionCall",
																"src": "944:63:37"
															},
															"nativeSrc": "944:63:37",
															"nodeType": "YulExpressionStatement",
															"src": "944:63:37"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nativeSrc": "856:157:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "922:5:37",
														"nodeType": "YulTypedName",
														"src": "922:5:37",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "929:3:37",
														"nodeType": "YulTypedName",
														"src": "929:3:37",
														"type": ""
													}
												],
												"src": "856:157:37"
											},
											{
												"body": {
													"nativeSrc": "1158:219:37",
													"nodeType": "YulBlock",
													"src": "1158:219:37",
													"statements": [
														{
															"nativeSrc": "1168:26:37",
															"nodeType": "YulAssignment",
															"src": "1168:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1180:9:37",
																		"nodeType": "YulIdentifier",
																		"src": "1180:9:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1191:2:37",
																		"nodeType": "YulLiteral",
																		"src": "1191:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1176:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "1176:3:37"
																},
																"nativeSrc": "1176:18:37",
																"nodeType": "YulFunctionCall",
																"src": "1176:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1168:4:37",
																	"nodeType": "YulIdentifier",
																	"src": "1168:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1248:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "1248:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1261:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "1261:9:37"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1272:1:37",
																				"nodeType": "YulLiteral",
																				"src": "1272:1:37",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1257:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "1257:3:37"
																		},
																		"nativeSrc": "1257:17:37",
																		"nodeType": "YulFunctionCall",
																		"src": "1257:17:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1204:43:37",
																	"nodeType": "YulIdentifier",
																	"src": "1204:43:37"
																},
																"nativeSrc": "1204:71:37",
																"nodeType": "YulFunctionCall",
																"src": "1204:71:37"
															},
															"nativeSrc": "1204:71:37",
															"nodeType": "YulExpressionStatement",
															"src": "1204:71:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1342:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "1342:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1355:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "1355:9:37"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1366:2:37",
																				"nodeType": "YulLiteral",
																				"src": "1366:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1351:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "1351:3:37"
																		},
																		"nativeSrc": "1351:18:37",
																		"nodeType": "YulFunctionCall",
																		"src": "1351:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nativeSrc": "1285:56:37",
																	"nodeType": "YulIdentifier",
																	"src": "1285:56:37"
																},
																"nativeSrc": "1285:85:37",
																"nodeType": "YulFunctionCall",
																"src": "1285:85:37"
															},
															"nativeSrc": "1285:85:37",
															"nodeType": "YulExpressionStatement",
															"src": "1285:85:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_contract$_IERC20_$77__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "1019:358:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:37",
														"nodeType": "YulTypedName",
														"src": "1122:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1134:6:37",
														"nodeType": "YulTypedName",
														"src": "1134:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1142:6:37",
														"nodeType": "YulTypedName",
														"src": "1142:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1153:4:37",
														"nodeType": "YulTypedName",
														"src": "1153:4:37",
														"type": ""
													}
												],
												"src": "1019:358:37"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_contract$_IERC20_$77__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b503360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731c7d4b196cb0c7b01d743fbc6116a902379c723860015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f33c981baba081f8fd2c52ac6ad1ea95b6814b4376640f55689051f658472968860025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161017592919061021c565b60405180910390a1610243565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101ab82610182565b9050919050565b6101bb816101a1565b82525050565b5f819050919050565b5f6101e46101df6101da84610182565b6101c1565b610182565b9050919050565b5f6101f5826101ca565b9050919050565b5f610206826101eb565b9050919050565b610216816101fc565b82525050565b5f60408201905061022f5f8301856101b2565b61023c602083018461020d565b9392505050565b6105f6806102505f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c80634bf2e99b14610064578063746679061461008257806389a30271146100a05780638da5cb5b146100be578063bb09d9b7146100dc578063ca43b4fc146100fa575b5f80fd5b61006c61012b565b6040516100799190610349565b60405180910390f35b61008a610143565b6040516100979190610349565b60405180910390f35b6100a861015b565b6040516100b591906103bd565b60405180910390f35b6100c661017e565b6040516100d39190610349565b60405180910390f35b6100e46101a3565b6040516100f19190610349565b60405180910390f35b610114600480360381019061010f9190610411565b6101c8565b604051610122929190610463565b60405180910390f35b731c7d4b196cb0c7b01d743fbc6116a902379c723881565b73c532a74256d3db42d0bf7a0400fefdbad769400881565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610259576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610250906104e4565b60405180910390fd5b610bdf83610267919061052f565b9150815f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102c29190610349565b602060405180830381865afa1580156102dd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103019190610595565b91509150915091565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103338261030a565b9050919050565b61034381610329565b82525050565b5f60208201905061035c5f83018461033a565b92915050565b5f819050919050565b5f61038561038061037b8461030a565b610362565b61030a565b9050919050565b5f6103968261036b565b9050919050565b5f6103a78261038c565b9050919050565b6103b78161039d565b82525050565b5f6020820190506103d05f8301846103ae565b92915050565b5f80fd5b5f61ffff82169050919050565b6103f0816103da565b81146103fa575f80fd5b50565b5f8135905061040b816103e7565b92915050565b5f60208284031215610426576104256103d6565b5b5f610433848285016103fd565b91505092915050565b610445816103da565b82525050565b5f819050919050565b61045d8161044b565b82525050565b5f6040820190506104765f83018561043c565b6104836020830184610454565b9392505050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e20646f20746869732e0000000000000000005f82015250565b5f6104ce60178361048a565b91506104d98261049a565b602082019050919050565b5f6020820190508181035f8301526104fb816104c2565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610539826103da565b9150610544836103da565b9250828202610552816103da565b915080821461056457610563610502565b5b5092915050565b6105748161044b565b811461057e575f80fd5b50565b5f8151905061058f8161056b565b92915050565b5f602082840312156105aa576105a96103d6565b5b5f6105b784828501610581565b9150509291505056fea2646970667358221220e9ea542ec63bea142ef9dbe6c82771fb6705e0bb5ea5b66728f5ec10a26b4d9464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x33C981BABA081F8FD2C52AC6AD1EA95B6814B4376640F55689051F6584729688 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x175 SWAP3 SWAP2 SWAP1 PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x243 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB DUP3 PUSH2 0x182 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E4 PUSH2 0x1DF PUSH2 0x1DA DUP5 PUSH2 0x182 JUMP JUMPDEST PUSH2 0x1C1 JUMP JUMPDEST PUSH2 0x182 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F5 DUP3 PUSH2 0x1CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x206 DUP3 PUSH2 0x1EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216 DUP2 PUSH2 0x1FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22F PUSH0 DUP4 ADD DUP6 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x23C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5F6 DUP1 PUSH2 0x250 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BF2E99B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x74667906 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0xBB09D9B7 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0xCA43B4FC EQ PUSH2 0xFA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x411 JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP3 SWAP2 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 DUP2 JUMP JUMPDEST PUSH20 0xC532A74256D3DB42D0BF7A0400FEFDBAD7694008 DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBDF DUP4 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x52F JUMP JUMPDEST SWAP2 POP DUP2 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x595 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x333 DUP3 PUSH2 0x30A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x329 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35C PUSH0 DUP4 ADD DUP5 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x385 PUSH2 0x380 PUSH2 0x37B DUP5 PUSH2 0x30A JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x396 DUP3 PUSH2 0x36B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3A7 DUP3 PUSH2 0x38C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B7 DUP2 PUSH2 0x39D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x3AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F0 DUP2 PUSH2 0x3DA JUMP JUMPDEST DUP2 EQ PUSH2 0x3FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x40B DUP2 PUSH2 0x3E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x426 JUMPI PUSH2 0x425 PUSH2 0x3D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x433 DUP5 DUP3 DUP6 ADD PUSH2 0x3FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x445 DUP2 PUSH2 0x3DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45D DUP2 PUSH2 0x44B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x476 PUSH0 DUP4 ADD DUP6 PUSH2 0x43C JUMP JUMPDEST PUSH2 0x483 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x454 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E20646F20746869732E000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4CE PUSH1 0x17 DUP4 PUSH2 0x48A JUMP JUMPDEST SWAP2 POP PUSH2 0x4D9 DUP3 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4FB DUP2 PUSH2 0x4C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x539 DUP3 PUSH2 0x3DA JUMP JUMPDEST SWAP2 POP PUSH2 0x544 DUP4 PUSH2 0x3DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x552 DUP2 PUSH2 0x3DA JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x564 JUMPI PUSH2 0x563 PUSH2 0x502 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x574 DUP2 PUSH2 0x44B JUMP JUMPDEST DUP2 EQ PUSH2 0x57E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x58F DUP2 PUSH2 0x56B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5AA JUMPI PUSH2 0x5A9 PUSH2 0x3D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5B7 DUP5 DUP3 DUP6 ADD PUSH2 0x581 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xEA SLOAD 0x2E 0xC6 EXTCODESIZE 0xEA EQ 0x2E 0xF9 0xDB 0xE6 0xC8 0x27 PUSH18 0xFB6705E0BB5EA5B66728F5EC10A26B4D9464 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1085:1061:23:-:0;;;1532:193;;;;;;;;;;1564:10;1556:5;;:18;;;;;;;;;;;;;;;;;;1312:42;1593:12;;:35;;;;;;;;;;;;;;;;;;1652:12;;;;;;;;;;;1638:4;;:27;;;;;;;;;;;;;;;;;;1689:29;1706:5;;;;;;;;;;;1713:4;;;;;;;;;;1689:29;;;;;;;:::i;:::-;;;;;;;;1085:1061;;7:126:37;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:60::-;393:3;414:5;407:12;;365:60;;;:::o;431:142::-;481:9;514:53;532:34;541:24;559:5;541:24;:::i;:::-;532:34;:::i;:::-;514:53;:::i;:::-;501:66;;431:142;;;:::o;579:126::-;629:9;662:37;693:5;662:37;:::i;:::-;649:50;;579:126;;;:::o;711:139::-;774:9;807:37;838:5;807:37;:::i;:::-;794:50;;711:139;;;:::o;856:157::-;956:50;1000:5;956:50;:::i;:::-;951:3;944:63;856:157;;:::o;1019:358::-;1153:4;1191:2;1180:9;1176:18;1168:26;;1204:71;1272:1;1261:9;1257:17;1248:6;1204:71;:::i;:::-;1285:85;1366:2;1355:9;1351:18;1342:6;1285:85;:::i;:::-;1019:358;;;;;:::o;1085:1061:23:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UNISWAP_POOLMANAGER_SEPOLIA_2598": {
									"entryPoint": 323,
									"id": 2598,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_2595": {
									"entryPoint": 347,
									"id": 2595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_ADDRESS_2603": {
									"entryPoint": 419,
									"id": 2603,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_ADDRESS_SEPOLIA_2601": {
									"entryPoint": 299,
									"id": 2601,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@executeSwap_2676": {
									"entryPoint": 456,
									"id": 2676,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@owner_2605": {
									"entryPoint": 382,
									"id": 2605,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint16": {
									"entryPoint": 1021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 1084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16_t_uint256__to_t_uint16_t_uint256__fromStack_reversed": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint16": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5436:37",
										"nodeType": "YulBlock",
										"src": "0:5436:37",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:37",
													"nodeType": "YulBlock",
													"src": "52:81:37",
													"statements": [
														{
															"nativeSrc": "62:65:37",
															"nodeType": "YulAssignment",
															"src": "62:65:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:37",
																		"nodeType": "YulLiteral",
																		"src": "84:42:37",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:37"
																},
																"nativeSrc": "73:54:37",
																"nodeType": "YulFunctionCall",
																"src": "73:54:37"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:37"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:37",
														"nodeType": "YulTypedName",
														"src": "34:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:37",
														"nodeType": "YulTypedName",
														"src": "44:7:37",
														"type": ""
													}
												],
												"src": "7:126:37"
											},
											{
												"body": {
													"nativeSrc": "184:51:37",
													"nodeType": "YulBlock",
													"src": "184:51:37",
													"statements": [
														{
															"nativeSrc": "194:35:37",
															"nodeType": "YulAssignment",
															"src": "194:35:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:37"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:37",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:37"
																},
																"nativeSrc": "205:24:37",
																"nodeType": "YulFunctionCall",
																"src": "205:24:37"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:37"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:37",
														"nodeType": "YulTypedName",
														"src": "166:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:37",
														"nodeType": "YulTypedName",
														"src": "176:7:37",
														"type": ""
													}
												],
												"src": "139:96:37"
											},
											{
												"body": {
													"nativeSrc": "306:53:37",
													"nodeType": "YulBlock",
													"src": "306:53:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:37",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:37"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:37",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:37"
																		},
																		"nativeSrc": "328:24:37",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:37"
																},
																"nativeSrc": "316:37:37",
																"nodeType": "YulFunctionCall",
																"src": "316:37:37"
															},
															"nativeSrc": "316:37:37",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:37"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:37",
														"nodeType": "YulTypedName",
														"src": "294:5:37",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:37",
														"nodeType": "YulTypedName",
														"src": "301:3:37",
														"type": ""
													}
												],
												"src": "241:118:37"
											},
											{
												"body": {
													"nativeSrc": "463:124:37",
													"nodeType": "YulBlock",
													"src": "463:124:37",
													"statements": [
														{
															"nativeSrc": "473:26:37",
															"nodeType": "YulAssignment",
															"src": "473:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:37",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:37",
																		"nodeType": "YulLiteral",
																		"src": "496:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:37"
																},
																"nativeSrc": "481:18:37",
																"nodeType": "YulFunctionCall",
																"src": "481:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:37",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:37"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:37",
																				"nodeType": "YulLiteral",
																				"src": "577:1:37",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:37"
																		},
																		"nativeSrc": "562:17:37",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:37",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:37"
																},
																"nativeSrc": "509:71:37",
																"nodeType": "YulFunctionCall",
																"src": "509:71:37"
															},
															"nativeSrc": "509:71:37",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:37",
														"nodeType": "YulTypedName",
														"src": "435:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:37",
														"nodeType": "YulTypedName",
														"src": "447:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:37",
														"nodeType": "YulTypedName",
														"src": "458:4:37",
														"type": ""
													}
												],
												"src": "365:222:37"
											},
											{
												"body": {
													"nativeSrc": "625:28:37",
													"nodeType": "YulBlock",
													"src": "625:28:37",
													"statements": [
														{
															"nativeSrc": "635:12:37",
															"nodeType": "YulAssignment",
															"src": "635:12:37",
															"value": {
																"name": "value",
																"nativeSrc": "642:5:37",
																"nodeType": "YulIdentifier",
																"src": "642:5:37"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "635:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "635:3:37"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "593:60:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:37",
														"nodeType": "YulTypedName",
														"src": "611:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "621:3:37",
														"nodeType": "YulTypedName",
														"src": "621:3:37",
														"type": ""
													}
												],
												"src": "593:60:37"
											},
											{
												"body": {
													"nativeSrc": "719:82:37",
													"nodeType": "YulBlock",
													"src": "719:82:37",
													"statements": [
														{
															"nativeSrc": "729:66:37",
															"nodeType": "YulAssignment",
															"src": "729:66:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "787:5:37",
																						"nodeType": "YulIdentifier",
																						"src": "787:5:37"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "769:17:37",
																					"nodeType": "YulIdentifier",
																					"src": "769:17:37"
																				},
																				"nativeSrc": "769:24:37",
																				"nodeType": "YulFunctionCall",
																				"src": "769:24:37"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "760:8:37",
																			"nodeType": "YulIdentifier",
																			"src": "760:8:37"
																		},
																		"nativeSrc": "760:34:37",
																		"nodeType": "YulFunctionCall",
																		"src": "760:34:37"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "742:17:37",
																	"nodeType": "YulIdentifier",
																	"src": "742:17:37"
																},
																"nativeSrc": "742:53:37",
																"nodeType": "YulFunctionCall",
																"src": "742:53:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "729:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "729:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "659:142:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "699:5:37",
														"nodeType": "YulTypedName",
														"src": "699:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "709:9:37",
														"nodeType": "YulTypedName",
														"src": "709:9:37",
														"type": ""
													}
												],
												"src": "659:142:37"
											},
											{
												"body": {
													"nativeSrc": "867:66:37",
													"nodeType": "YulBlock",
													"src": "867:66:37",
													"statements": [
														{
															"nativeSrc": "877:50:37",
															"nodeType": "YulAssignment",
															"src": "877:50:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "921:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "921:5:37"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "890:30:37",
																	"nodeType": "YulIdentifier",
																	"src": "890:30:37"
																},
																"nativeSrc": "890:37:37",
																"nodeType": "YulFunctionCall",
																"src": "890:37:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "877:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "877:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "807:126:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "847:5:37",
														"nodeType": "YulTypedName",
														"src": "847:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "857:9:37",
														"nodeType": "YulTypedName",
														"src": "857:9:37",
														"type": ""
													}
												],
												"src": "807:126:37"
											},
											{
												"body": {
													"nativeSrc": "1012:66:37",
													"nodeType": "YulBlock",
													"src": "1012:66:37",
													"statements": [
														{
															"nativeSrc": "1022:50:37",
															"nodeType": "YulAssignment",
															"src": "1022:50:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1066:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "1066:5:37"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1035:30:37",
																	"nodeType": "YulIdentifier",
																	"src": "1035:30:37"
																},
																"nativeSrc": "1035:37:37",
																"nodeType": "YulFunctionCall",
																"src": "1035:37:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1022:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "1022:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nativeSrc": "939:139:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "992:5:37",
														"nodeType": "YulTypedName",
														"src": "992:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1002:9:37",
														"nodeType": "YulTypedName",
														"src": "1002:9:37",
														"type": ""
													}
												],
												"src": "939:139:37"
											},
											{
												"body": {
													"nativeSrc": "1162:79:37",
													"nodeType": "YulBlock",
													"src": "1162:79:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1179:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "1179:3:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1228:5:37",
																				"nodeType": "YulIdentifier",
																				"src": "1228:5:37"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nativeSrc": "1184:43:37",
																			"nodeType": "YulIdentifier",
																			"src": "1184:43:37"
																		},
																		"nativeSrc": "1184:50:37",
																		"nodeType": "YulFunctionCall",
																		"src": "1184:50:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1172:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "1172:6:37"
																},
																"nativeSrc": "1172:63:37",
																"nodeType": "YulFunctionCall",
																"src": "1172:63:37"
															},
															"nativeSrc": "1172:63:37",
															"nodeType": "YulExpressionStatement",
															"src": "1172:63:37"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nativeSrc": "1084:157:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1150:5:37",
														"nodeType": "YulTypedName",
														"src": "1150:5:37",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1157:3:37",
														"nodeType": "YulTypedName",
														"src": "1157:3:37",
														"type": ""
													}
												],
												"src": "1084:157:37"
											},
											{
												"body": {
													"nativeSrc": "1358:137:37",
													"nodeType": "YulBlock",
													"src": "1358:137:37",
													"statements": [
														{
															"nativeSrc": "1368:26:37",
															"nodeType": "YulAssignment",
															"src": "1368:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1380:9:37",
																		"nodeType": "YulIdentifier",
																		"src": "1380:9:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1391:2:37",
																		"nodeType": "YulLiteral",
																		"src": "1391:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1376:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "1376:3:37"
																},
																"nativeSrc": "1376:18:37",
																"nodeType": "YulFunctionCall",
																"src": "1376:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1368:4:37",
																	"nodeType": "YulIdentifier",
																	"src": "1368:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1461:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "1461:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1474:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "1474:9:37"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1485:1:37",
																				"nodeType": "YulLiteral",
																				"src": "1485:1:37",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1470:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "1470:3:37"
																		},
																		"nativeSrc": "1470:17:37",
																		"nodeType": "YulFunctionCall",
																		"src": "1470:17:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nativeSrc": "1404:56:37",
																	"nodeType": "YulIdentifier",
																	"src": "1404:56:37"
																},
																"nativeSrc": "1404:84:37",
																"nodeType": "YulFunctionCall",
																"src": "1404:84:37"
															},
															"nativeSrc": "1404:84:37",
															"nodeType": "YulExpressionStatement",
															"src": "1404:84:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "1247:248:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1330:9:37",
														"nodeType": "YulTypedName",
														"src": "1330:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1342:6:37",
														"nodeType": "YulTypedName",
														"src": "1342:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1353:4:37",
														"nodeType": "YulTypedName",
														"src": "1353:4:37",
														"type": ""
													}
												],
												"src": "1247:248:37"
											},
											{
												"body": {
													"nativeSrc": "1541:35:37",
													"nodeType": "YulBlock",
													"src": "1541:35:37",
													"statements": [
														{
															"nativeSrc": "1551:19:37",
															"nodeType": "YulAssignment",
															"src": "1551:19:37",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1567:2:37",
																		"nodeType": "YulLiteral",
																		"src": "1567:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1561:5:37",
																	"nodeType": "YulIdentifier",
																	"src": "1561:5:37"
																},
																"nativeSrc": "1561:9:37",
																"nodeType": "YulFunctionCall",
																"src": "1561:9:37"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1551:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "1551:6:37"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1501:75:37",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1534:6:37",
														"nodeType": "YulTypedName",
														"src": "1534:6:37",
														"type": ""
													}
												],
												"src": "1501:75:37"
											},
											{
												"body": {
													"nativeSrc": "1671:28:37",
													"nodeType": "YulBlock",
													"src": "1671:28:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1688:1:37",
																		"nodeType": "YulLiteral",
																		"src": "1688:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1691:1:37",
																		"nodeType": "YulLiteral",
																		"src": "1691:1:37",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1681:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "1681:6:37"
																},
																"nativeSrc": "1681:12:37",
																"nodeType": "YulFunctionCall",
																"src": "1681:12:37"
															},
															"nativeSrc": "1681:12:37",
															"nodeType": "YulExpressionStatement",
															"src": "1681:12:37"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1582:117:37",
												"nodeType": "YulFunctionDefinition",
												"src": "1582:117:37"
											},
											{
												"body": {
													"nativeSrc": "1794:28:37",
													"nodeType": "YulBlock",
													"src": "1794:28:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1811:1:37",
																		"nodeType": "YulLiteral",
																		"src": "1811:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1814:1:37",
																		"nodeType": "YulLiteral",
																		"src": "1814:1:37",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1804:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "1804:6:37"
																},
																"nativeSrc": "1804:12:37",
																"nodeType": "YulFunctionCall",
																"src": "1804:12:37"
															},
															"nativeSrc": "1804:12:37",
															"nodeType": "YulExpressionStatement",
															"src": "1804:12:37"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1705:117:37",
												"nodeType": "YulFunctionDefinition",
												"src": "1705:117:37"
											},
											{
												"body": {
													"nativeSrc": "1872:45:37",
													"nodeType": "YulBlock",
													"src": "1872:45:37",
													"statements": [
														{
															"nativeSrc": "1882:29:37",
															"nodeType": "YulAssignment",
															"src": "1882:29:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1897:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "1897:5:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1904:6:37",
																		"nodeType": "YulLiteral",
																		"src": "1904:6:37",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1893:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "1893:3:37"
																},
																"nativeSrc": "1893:18:37",
																"nodeType": "YulFunctionCall",
																"src": "1893:18:37"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1882:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "1882:7:37"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "1828:89:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1854:5:37",
														"nodeType": "YulTypedName",
														"src": "1854:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1864:7:37",
														"nodeType": "YulTypedName",
														"src": "1864:7:37",
														"type": ""
													}
												],
												"src": "1828:89:37"
											},
											{
												"body": {
													"nativeSrc": "1965:78:37",
													"nodeType": "YulBlock",
													"src": "1965:78:37",
													"statements": [
														{
															"body": {
																"nativeSrc": "2021:16:37",
																"nodeType": "YulBlock",
																"src": "2021:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2030:1:37",
																					"nodeType": "YulLiteral",
																					"src": "2030:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2033:1:37",
																					"nodeType": "YulLiteral",
																					"src": "2033:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2023:6:37",
																				"nodeType": "YulIdentifier",
																				"src": "2023:6:37"
																			},
																			"nativeSrc": "2023:12:37",
																			"nodeType": "YulFunctionCall",
																			"src": "2023:12:37"
																		},
																		"nativeSrc": "2023:12:37",
																		"nodeType": "YulExpressionStatement",
																		"src": "2023:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1988:5:37",
																				"nodeType": "YulIdentifier",
																				"src": "1988:5:37"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2012:5:37",
																						"nodeType": "YulIdentifier",
																						"src": "2012:5:37"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "1995:16:37",
																					"nodeType": "YulIdentifier",
																					"src": "1995:16:37"
																				},
																				"nativeSrc": "1995:23:37",
																				"nodeType": "YulFunctionCall",
																				"src": "1995:23:37"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1985:2:37",
																			"nodeType": "YulIdentifier",
																			"src": "1985:2:37"
																		},
																		"nativeSrc": "1985:34:37",
																		"nodeType": "YulFunctionCall",
																		"src": "1985:34:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1978:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "1978:6:37"
																},
																"nativeSrc": "1978:42:37",
																"nodeType": "YulFunctionCall",
																"src": "1978:42:37"
															},
															"nativeSrc": "1975:62:37",
															"nodeType": "YulIf",
															"src": "1975:62:37"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "1923:120:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1958:5:37",
														"nodeType": "YulTypedName",
														"src": "1958:5:37",
														"type": ""
													}
												],
												"src": "1923:120:37"
											},
											{
												"body": {
													"nativeSrc": "2100:86:37",
													"nodeType": "YulBlock",
													"src": "2100:86:37",
													"statements": [
														{
															"nativeSrc": "2110:29:37",
															"nodeType": "YulAssignment",
															"src": "2110:29:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2132:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "2132:6:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2119:12:37",
																	"nodeType": "YulIdentifier",
																	"src": "2119:12:37"
																},
																"nativeSrc": "2119:20:37",
																"nodeType": "YulFunctionCall",
																"src": "2119:20:37"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2110:5:37",
																	"nodeType": "YulIdentifier",
																	"src": "2110:5:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2174:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "2174:5:37"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "2148:25:37",
																	"nodeType": "YulIdentifier",
																	"src": "2148:25:37"
																},
																"nativeSrc": "2148:32:37",
																"nodeType": "YulFunctionCall",
																"src": "2148:32:37"
															},
															"nativeSrc": "2148:32:37",
															"nodeType": "YulExpressionStatement",
															"src": "2148:32:37"
														}
													]
												},
												"name": "abi_decode_t_uint16",
												"nativeSrc": "2049:137:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2078:6:37",
														"nodeType": "YulTypedName",
														"src": "2078:6:37",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2086:3:37",
														"nodeType": "YulTypedName",
														"src": "2086:3:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2094:5:37",
														"nodeType": "YulTypedName",
														"src": "2094:5:37",
														"type": ""
													}
												],
												"src": "2049:137:37"
											},
											{
												"body": {
													"nativeSrc": "2257:262:37",
													"nodeType": "YulBlock",
													"src": "2257:262:37",
													"statements": [
														{
															"body": {
																"nativeSrc": "2303:83:37",
																"nodeType": "YulBlock",
																"src": "2303:83:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2305:77:37",
																				"nodeType": "YulIdentifier",
																				"src": "2305:77:37"
																			},
																			"nativeSrc": "2305:79:37",
																			"nodeType": "YulFunctionCall",
																			"src": "2305:79:37"
																		},
																		"nativeSrc": "2305:79:37",
																		"nodeType": "YulExpressionStatement",
																		"src": "2305:79:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2278:7:37",
																				"nodeType": "YulIdentifier",
																				"src": "2278:7:37"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2287:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "2287:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2274:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "2274:3:37"
																		},
																		"nativeSrc": "2274:23:37",
																		"nodeType": "YulFunctionCall",
																		"src": "2274:23:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2299:2:37",
																		"nodeType": "YulLiteral",
																		"src": "2299:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2270:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "2270:3:37"
																},
																"nativeSrc": "2270:32:37",
																"nodeType": "YulFunctionCall",
																"src": "2270:32:37"
															},
															"nativeSrc": "2267:119:37",
															"nodeType": "YulIf",
															"src": "2267:119:37"
														},
														{
															"nativeSrc": "2396:116:37",
															"nodeType": "YulBlock",
															"src": "2396:116:37",
															"statements": [
																{
																	"nativeSrc": "2411:15:37",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2411:15:37",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2425:1:37",
																		"nodeType": "YulLiteral",
																		"src": "2425:1:37",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2415:6:37",
																			"nodeType": "YulTypedName",
																			"src": "2415:6:37",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2440:62:37",
																	"nodeType": "YulAssignment",
																	"src": "2440:62:37",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2474:9:37",
																						"nodeType": "YulIdentifier",
																						"src": "2474:9:37"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2485:6:37",
																						"nodeType": "YulIdentifier",
																						"src": "2485:6:37"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2470:3:37",
																					"nodeType": "YulIdentifier",
																					"src": "2470:3:37"
																				},
																				"nativeSrc": "2470:22:37",
																				"nodeType": "YulFunctionCall",
																				"src": "2470:22:37"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2494:7:37",
																				"nodeType": "YulIdentifier",
																				"src": "2494:7:37"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nativeSrc": "2450:19:37",
																			"nodeType": "YulIdentifier",
																			"src": "2450:19:37"
																		},
																		"nativeSrc": "2450:52:37",
																		"nodeType": "YulFunctionCall",
																		"src": "2450:52:37"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2440:6:37",
																			"nodeType": "YulIdentifier",
																			"src": "2440:6:37"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16",
												"nativeSrc": "2192:327:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2227:9:37",
														"nodeType": "YulTypedName",
														"src": "2227:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2238:7:37",
														"nodeType": "YulTypedName",
														"src": "2238:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2250:6:37",
														"nodeType": "YulTypedName",
														"src": "2250:6:37",
														"type": ""
													}
												],
												"src": "2192:327:37"
											},
											{
												"body": {
													"nativeSrc": "2588:52:37",
													"nodeType": "YulBlock",
													"src": "2588:52:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2605:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "2605:3:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2627:5:37",
																				"nodeType": "YulIdentifier",
																				"src": "2627:5:37"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nativeSrc": "2610:16:37",
																			"nodeType": "YulIdentifier",
																			"src": "2610:16:37"
																		},
																		"nativeSrc": "2610:23:37",
																		"nodeType": "YulFunctionCall",
																		"src": "2610:23:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:37"
																},
																"nativeSrc": "2598:36:37",
																"nodeType": "YulFunctionCall",
																"src": "2598:36:37"
															},
															"nativeSrc": "2598:36:37",
															"nodeType": "YulExpressionStatement",
															"src": "2598:36:37"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nativeSrc": "2525:115:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2576:5:37",
														"nodeType": "YulTypedName",
														"src": "2576:5:37",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2583:3:37",
														"nodeType": "YulTypedName",
														"src": "2583:3:37",
														"type": ""
													}
												],
												"src": "2525:115:37"
											},
											{
												"body": {
													"nativeSrc": "2691:32:37",
													"nodeType": "YulBlock",
													"src": "2691:32:37",
													"statements": [
														{
															"nativeSrc": "2701:16:37",
															"nodeType": "YulAssignment",
															"src": "2701:16:37",
															"value": {
																"name": "value",
																"nativeSrc": "2712:5:37",
																"nodeType": "YulIdentifier",
																"src": "2712:5:37"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2701:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "2701:7:37"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2646:77:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2673:5:37",
														"nodeType": "YulTypedName",
														"src": "2673:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2683:7:37",
														"nodeType": "YulTypedName",
														"src": "2683:7:37",
														"type": ""
													}
												],
												"src": "2646:77:37"
											},
											{
												"body": {
													"nativeSrc": "2794:53:37",
													"nodeType": "YulBlock",
													"src": "2794:53:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2811:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "2811:3:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2834:5:37",
																				"nodeType": "YulIdentifier",
																				"src": "2834:5:37"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2816:17:37",
																			"nodeType": "YulIdentifier",
																			"src": "2816:17:37"
																		},
																		"nativeSrc": "2816:24:37",
																		"nodeType": "YulFunctionCall",
																		"src": "2816:24:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2804:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "2804:6:37"
																},
																"nativeSrc": "2804:37:37",
																"nodeType": "YulFunctionCall",
																"src": "2804:37:37"
															},
															"nativeSrc": "2804:37:37",
															"nodeType": "YulExpressionStatement",
															"src": "2804:37:37"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2729:118:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2782:5:37",
														"nodeType": "YulTypedName",
														"src": "2782:5:37",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2789:3:37",
														"nodeType": "YulTypedName",
														"src": "2789:3:37",
														"type": ""
													}
												],
												"src": "2729:118:37"
											},
											{
												"body": {
													"nativeSrc": "2977:204:37",
													"nodeType": "YulBlock",
													"src": "2977:204:37",
													"statements": [
														{
															"nativeSrc": "2987:26:37",
															"nodeType": "YulAssignment",
															"src": "2987:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2999:9:37",
																		"nodeType": "YulIdentifier",
																		"src": "2999:9:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3010:2:37",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2995:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "2995:3:37"
																},
																"nativeSrc": "2995:18:37",
																"nodeType": "YulFunctionCall",
																"src": "2995:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2987:4:37",
																	"nodeType": "YulIdentifier",
																	"src": "2987:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3065:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "3065:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3078:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "3078:9:37"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3089:1:37",
																				"nodeType": "YulLiteral",
																				"src": "3089:1:37",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3074:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "3074:3:37"
																		},
																		"nativeSrc": "3074:17:37",
																		"nodeType": "YulFunctionCall",
																		"src": "3074:17:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nativeSrc": "3023:41:37",
																	"nodeType": "YulIdentifier",
																	"src": "3023:41:37"
																},
																"nativeSrc": "3023:69:37",
																"nodeType": "YulFunctionCall",
																"src": "3023:69:37"
															},
															"nativeSrc": "3023:69:37",
															"nodeType": "YulExpressionStatement",
															"src": "3023:69:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3146:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "3146:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3159:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "3159:9:37"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3170:2:37",
																				"nodeType": "YulLiteral",
																				"src": "3170:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3155:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "3155:3:37"
																		},
																		"nativeSrc": "3155:18:37",
																		"nodeType": "YulFunctionCall",
																		"src": "3155:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3102:43:37",
																	"nodeType": "YulIdentifier",
																	"src": "3102:43:37"
																},
																"nativeSrc": "3102:72:37",
																"nodeType": "YulFunctionCall",
																"src": "3102:72:37"
															},
															"nativeSrc": "3102:72:37",
															"nodeType": "YulExpressionStatement",
															"src": "3102:72:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16_t_uint256__to_t_uint16_t_uint256__fromStack_reversed",
												"nativeSrc": "2853:328:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2941:9:37",
														"nodeType": "YulTypedName",
														"src": "2941:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2953:6:37",
														"nodeType": "YulTypedName",
														"src": "2953:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2961:6:37",
														"nodeType": "YulTypedName",
														"src": "2961:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2972:4:37",
														"nodeType": "YulTypedName",
														"src": "2972:4:37",
														"type": ""
													}
												],
												"src": "2853:328:37"
											},
											{
												"body": {
													"nativeSrc": "3283:73:37",
													"nodeType": "YulBlock",
													"src": "3283:73:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3300:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "3300:3:37"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3305:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "3305:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3293:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "3293:6:37"
																},
																"nativeSrc": "3293:19:37",
																"nodeType": "YulFunctionCall",
																"src": "3293:19:37"
															},
															"nativeSrc": "3293:19:37",
															"nodeType": "YulExpressionStatement",
															"src": "3293:19:37"
														},
														{
															"nativeSrc": "3321:29:37",
															"nodeType": "YulAssignment",
															"src": "3321:29:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3340:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "3340:3:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3345:4:37",
																		"nodeType": "YulLiteral",
																		"src": "3345:4:37",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3336:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "3336:3:37"
																},
																"nativeSrc": "3336:14:37",
																"nodeType": "YulFunctionCall",
																"src": "3336:14:37"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3321:11:37",
																	"nodeType": "YulIdentifier",
																	"src": "3321:11:37"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3187:169:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3255:3:37",
														"nodeType": "YulTypedName",
														"src": "3255:3:37",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3260:6:37",
														"nodeType": "YulTypedName",
														"src": "3260:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3271:11:37",
														"nodeType": "YulTypedName",
														"src": "3271:11:37",
														"type": ""
													}
												],
												"src": "3187:169:37"
											},
											{
												"body": {
													"nativeSrc": "3468:67:37",
													"nodeType": "YulBlock",
													"src": "3468:67:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3490:6:37",
																				"nodeType": "YulIdentifier",
																				"src": "3490:6:37"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3498:1:37",
																				"nodeType": "YulLiteral",
																				"src": "3498:1:37",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3486:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "3486:3:37"
																		},
																		"nativeSrc": "3486:14:37",
																		"nodeType": "YulFunctionCall",
																		"src": "3486:14:37"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e20646f20746869732e",
																		"kind": "string",
																		"nativeSrc": "3502:25:37",
																		"nodeType": "YulLiteral",
																		"src": "3502:25:37",
																		"type": "",
																		"value": "Only owner can do this."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3479:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "3479:6:37"
																},
																"nativeSrc": "3479:49:37",
																"nodeType": "YulFunctionCall",
																"src": "3479:49:37"
															},
															"nativeSrc": "3479:49:37",
															"nodeType": "YulExpressionStatement",
															"src": "3479:49:37"
														}
													]
												},
												"name": "store_literal_in_memory_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca",
												"nativeSrc": "3362:173:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3460:6:37",
														"nodeType": "YulTypedName",
														"src": "3460:6:37",
														"type": ""
													}
												],
												"src": "3362:173:37"
											},
											{
												"body": {
													"nativeSrc": "3687:220:37",
													"nodeType": "YulBlock",
													"src": "3687:220:37",
													"statements": [
														{
															"nativeSrc": "3697:74:37",
															"nodeType": "YulAssignment",
															"src": "3697:74:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3763:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "3763:3:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3768:2:37",
																		"nodeType": "YulLiteral",
																		"src": "3768:2:37",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3704:58:37",
																	"nodeType": "YulIdentifier",
																	"src": "3704:58:37"
																},
																"nativeSrc": "3704:67:37",
																"nodeType": "YulFunctionCall",
																"src": "3704:67:37"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3697:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "3697:3:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3869:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "3869:3:37"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca",
																	"nativeSrc": "3780:88:37",
																	"nodeType": "YulIdentifier",
																	"src": "3780:88:37"
																},
																"nativeSrc": "3780:93:37",
																"nodeType": "YulFunctionCall",
																"src": "3780:93:37"
															},
															"nativeSrc": "3780:93:37",
															"nodeType": "YulExpressionStatement",
															"src": "3780:93:37"
														},
														{
															"nativeSrc": "3882:19:37",
															"nodeType": "YulAssignment",
															"src": "3882:19:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3893:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "3893:3:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3898:2:37",
																		"nodeType": "YulLiteral",
																		"src": "3898:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3889:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "3889:3:37"
																},
																"nativeSrc": "3889:12:37",
																"nodeType": "YulFunctionCall",
																"src": "3889:12:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3882:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "3882:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3541:366:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3675:3:37",
														"nodeType": "YulTypedName",
														"src": "3675:3:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3683:3:37",
														"nodeType": "YulTypedName",
														"src": "3683:3:37",
														"type": ""
													}
												],
												"src": "3541:366:37"
											},
											{
												"body": {
													"nativeSrc": "4084:248:37",
													"nodeType": "YulBlock",
													"src": "4084:248:37",
													"statements": [
														{
															"nativeSrc": "4094:26:37",
															"nodeType": "YulAssignment",
															"src": "4094:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4106:9:37",
																		"nodeType": "YulIdentifier",
																		"src": "4106:9:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4117:2:37",
																		"nodeType": "YulLiteral",
																		"src": "4117:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4102:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "4102:3:37"
																},
																"nativeSrc": "4102:18:37",
																"nodeType": "YulFunctionCall",
																"src": "4102:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4094:4:37",
																	"nodeType": "YulIdentifier",
																	"src": "4094:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4141:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "4141:9:37"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4152:1:37",
																				"nodeType": "YulLiteral",
																				"src": "4152:1:37",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4137:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "4137:3:37"
																		},
																		"nativeSrc": "4137:17:37",
																		"nodeType": "YulFunctionCall",
																		"src": "4137:17:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4160:4:37",
																				"nodeType": "YulIdentifier",
																				"src": "4160:4:37"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4166:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4156:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "4156:3:37"
																		},
																		"nativeSrc": "4156:20:37",
																		"nodeType": "YulFunctionCall",
																		"src": "4156:20:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4130:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "4130:6:37"
																},
																"nativeSrc": "4130:47:37",
																"nodeType": "YulFunctionCall",
																"src": "4130:47:37"
															},
															"nativeSrc": "4130:47:37",
															"nodeType": "YulExpressionStatement",
															"src": "4130:47:37"
														},
														{
															"nativeSrc": "4186:139:37",
															"nodeType": "YulAssignment",
															"src": "4186:139:37",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4320:4:37",
																		"nodeType": "YulIdentifier",
																		"src": "4320:4:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4194:124:37",
																	"nodeType": "YulIdentifier",
																	"src": "4194:124:37"
																},
																"nativeSrc": "4194:131:37",
																"nodeType": "YulFunctionCall",
																"src": "4194:131:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4186:4:37",
																	"nodeType": "YulIdentifier",
																	"src": "4186:4:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3913:419:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4064:9:37",
														"nodeType": "YulTypedName",
														"src": "4064:9:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4079:4:37",
														"nodeType": "YulTypedName",
														"src": "4079:4:37",
														"type": ""
													}
												],
												"src": "3913:419:37"
											},
											{
												"body": {
													"nativeSrc": "4366:152:37",
													"nodeType": "YulBlock",
													"src": "4366:152:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4383:1:37",
																		"nodeType": "YulLiteral",
																		"src": "4383:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4386:77:37",
																		"nodeType": "YulLiteral",
																		"src": "4386:77:37",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4376:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "4376:6:37"
																},
																"nativeSrc": "4376:88:37",
																"nodeType": "YulFunctionCall",
																"src": "4376:88:37"
															},
															"nativeSrc": "4376:88:37",
															"nodeType": "YulExpressionStatement",
															"src": "4376:88:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4480:1:37",
																		"nodeType": "YulLiteral",
																		"src": "4480:1:37",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4483:4:37",
																		"nodeType": "YulLiteral",
																		"src": "4483:4:37",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4473:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "4473:6:37"
																},
																"nativeSrc": "4473:15:37",
																"nodeType": "YulFunctionCall",
																"src": "4473:15:37"
															},
															"nativeSrc": "4473:15:37",
															"nodeType": "YulExpressionStatement",
															"src": "4473:15:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4504:1:37",
																		"nodeType": "YulLiteral",
																		"src": "4504:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4507:4:37",
																		"nodeType": "YulLiteral",
																		"src": "4507:4:37",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4497:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "4497:6:37"
																},
																"nativeSrc": "4497:15:37",
																"nodeType": "YulFunctionCall",
																"src": "4497:15:37"
															},
															"nativeSrc": "4497:15:37",
															"nodeType": "YulExpressionStatement",
															"src": "4497:15:37"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4338:180:37",
												"nodeType": "YulFunctionDefinition",
												"src": "4338:180:37"
											},
											{
												"body": {
													"nativeSrc": "4571:228:37",
													"nodeType": "YulBlock",
													"src": "4571:228:37",
													"statements": [
														{
															"nativeSrc": "4581:24:37",
															"nodeType": "YulAssignment",
															"src": "4581:24:37",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4603:1:37",
																		"nodeType": "YulIdentifier",
																		"src": "4603:1:37"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nativeSrc": "4586:16:37",
																	"nodeType": "YulIdentifier",
																	"src": "4586:16:37"
																},
																"nativeSrc": "4586:19:37",
																"nodeType": "YulFunctionCall",
																"src": "4586:19:37"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4581:1:37",
																	"nodeType": "YulIdentifier",
																	"src": "4581:1:37"
																}
															]
														},
														{
															"nativeSrc": "4614:24:37",
															"nodeType": "YulAssignment",
															"src": "4614:24:37",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4636:1:37",
																		"nodeType": "YulIdentifier",
																		"src": "4636:1:37"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nativeSrc": "4619:16:37",
																	"nodeType": "YulIdentifier",
																	"src": "4619:16:37"
																},
																"nativeSrc": "4619:19:37",
																"nodeType": "YulFunctionCall",
																"src": "4619:19:37"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4614:1:37",
																	"nodeType": "YulIdentifier",
																	"src": "4614:1:37"
																}
															]
														},
														{
															"nativeSrc": "4647:28:37",
															"nodeType": "YulVariableDeclaration",
															"src": "4647:28:37",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4670:1:37",
																		"nodeType": "YulIdentifier",
																		"src": "4670:1:37"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4673:1:37",
																		"nodeType": "YulIdentifier",
																		"src": "4673:1:37"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4666:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "4666:3:37"
																},
																"nativeSrc": "4666:9:37",
																"nodeType": "YulFunctionCall",
																"src": "4666:9:37"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4651:11:37",
																	"nodeType": "YulTypedName",
																	"src": "4651:11:37",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4684:40:37",
															"nodeType": "YulAssignment",
															"src": "4684:40:37",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4712:11:37",
																		"nodeType": "YulIdentifier",
																		"src": "4712:11:37"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nativeSrc": "4695:16:37",
																	"nodeType": "YulIdentifier",
																	"src": "4695:16:37"
																},
																"nativeSrc": "4695:29:37",
																"nodeType": "YulFunctionCall",
																"src": "4695:29:37"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4684:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "4684:7:37"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4770:22:37",
																"nodeType": "YulBlock",
																"src": "4770:22:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4772:16:37",
																				"nodeType": "YulIdentifier",
																				"src": "4772:16:37"
																			},
																			"nativeSrc": "4772:18:37",
																			"nodeType": "YulFunctionCall",
																			"src": "4772:18:37"
																		},
																		"nativeSrc": "4772:18:37",
																		"nodeType": "YulExpressionStatement",
																		"src": "4772:18:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nativeSrc": "4747:7:37",
																				"nodeType": "YulIdentifier",
																				"src": "4747:7:37"
																			},
																			{
																				"name": "product_raw",
																				"nativeSrc": "4756:11:37",
																				"nodeType": "YulIdentifier",
																				"src": "4756:11:37"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4744:2:37",
																			"nodeType": "YulIdentifier",
																			"src": "4744:2:37"
																		},
																		"nativeSrc": "4744:24:37",
																		"nodeType": "YulFunctionCall",
																		"src": "4744:24:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4737:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "4737:6:37"
																},
																"nativeSrc": "4737:32:37",
																"nodeType": "YulFunctionCall",
																"src": "4737:32:37"
															},
															"nativeSrc": "4734:58:37",
															"nodeType": "YulIf",
															"src": "4734:58:37"
														}
													]
												},
												"name": "checked_mul_t_uint16",
												"nativeSrc": "4524:275:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4554:1:37",
														"nodeType": "YulTypedName",
														"src": "4554:1:37",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4557:1:37",
														"nodeType": "YulTypedName",
														"src": "4557:1:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4563:7:37",
														"nodeType": "YulTypedName",
														"src": "4563:7:37",
														"type": ""
													}
												],
												"src": "4524:275:37"
											},
											{
												"body": {
													"nativeSrc": "4848:79:37",
													"nodeType": "YulBlock",
													"src": "4848:79:37",
													"statements": [
														{
															"body": {
																"nativeSrc": "4905:16:37",
																"nodeType": "YulBlock",
																"src": "4905:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4914:1:37",
																					"nodeType": "YulLiteral",
																					"src": "4914:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4917:1:37",
																					"nodeType": "YulLiteral",
																					"src": "4917:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4907:6:37",
																				"nodeType": "YulIdentifier",
																				"src": "4907:6:37"
																			},
																			"nativeSrc": "4907:12:37",
																			"nodeType": "YulFunctionCall",
																			"src": "4907:12:37"
																		},
																		"nativeSrc": "4907:12:37",
																		"nodeType": "YulExpressionStatement",
																		"src": "4907:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4871:5:37",
																				"nodeType": "YulIdentifier",
																				"src": "4871:5:37"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4896:5:37",
																						"nodeType": "YulIdentifier",
																						"src": "4896:5:37"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4878:17:37",
																					"nodeType": "YulIdentifier",
																					"src": "4878:17:37"
																				},
																				"nativeSrc": "4878:24:37",
																				"nodeType": "YulFunctionCall",
																				"src": "4878:24:37"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4868:2:37",
																			"nodeType": "YulIdentifier",
																			"src": "4868:2:37"
																		},
																		"nativeSrc": "4868:35:37",
																		"nodeType": "YulFunctionCall",
																		"src": "4868:35:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4861:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:37"
																},
																"nativeSrc": "4861:43:37",
																"nodeType": "YulFunctionCall",
																"src": "4861:43:37"
															},
															"nativeSrc": "4858:63:37",
															"nodeType": "YulIf",
															"src": "4858:63:37"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4805:122:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4841:5:37",
														"nodeType": "YulTypedName",
														"src": "4841:5:37",
														"type": ""
													}
												],
												"src": "4805:122:37"
											},
											{
												"body": {
													"nativeSrc": "4996:80:37",
													"nodeType": "YulBlock",
													"src": "4996:80:37",
													"statements": [
														{
															"nativeSrc": "5006:22:37",
															"nodeType": "YulAssignment",
															"src": "5006:22:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5021:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "5021:6:37"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5015:5:37",
																	"nodeType": "YulIdentifier",
																	"src": "5015:5:37"
																},
																"nativeSrc": "5015:13:37",
																"nodeType": "YulFunctionCall",
																"src": "5015:13:37"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5006:5:37",
																	"nodeType": "YulIdentifier",
																	"src": "5006:5:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5064:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "5064:5:37"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5037:26:37",
																	"nodeType": "YulIdentifier",
																	"src": "5037:26:37"
																},
																"nativeSrc": "5037:33:37",
																"nodeType": "YulFunctionCall",
																"src": "5037:33:37"
															},
															"nativeSrc": "5037:33:37",
															"nodeType": "YulExpressionStatement",
															"src": "5037:33:37"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "4933:143:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4974:6:37",
														"nodeType": "YulTypedName",
														"src": "4974:6:37",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4982:3:37",
														"nodeType": "YulTypedName",
														"src": "4982:3:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4990:5:37",
														"nodeType": "YulTypedName",
														"src": "4990:5:37",
														"type": ""
													}
												],
												"src": "4933:143:37"
											},
											{
												"body": {
													"nativeSrc": "5159:274:37",
													"nodeType": "YulBlock",
													"src": "5159:274:37",
													"statements": [
														{
															"body": {
																"nativeSrc": "5205:83:37",
																"nodeType": "YulBlock",
																"src": "5205:83:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5207:77:37",
																				"nodeType": "YulIdentifier",
																				"src": "5207:77:37"
																			},
																			"nativeSrc": "5207:79:37",
																			"nodeType": "YulFunctionCall",
																			"src": "5207:79:37"
																		},
																		"nativeSrc": "5207:79:37",
																		"nodeType": "YulExpressionStatement",
																		"src": "5207:79:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5180:7:37",
																				"nodeType": "YulIdentifier",
																				"src": "5180:7:37"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5189:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "5189:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5176:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "5176:3:37"
																		},
																		"nativeSrc": "5176:23:37",
																		"nodeType": "YulFunctionCall",
																		"src": "5176:23:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5201:2:37",
																		"nodeType": "YulLiteral",
																		"src": "5201:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5172:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "5172:3:37"
																},
																"nativeSrc": "5172:32:37",
																"nodeType": "YulFunctionCall",
																"src": "5172:32:37"
															},
															"nativeSrc": "5169:119:37",
															"nodeType": "YulIf",
															"src": "5169:119:37"
														},
														{
															"nativeSrc": "5298:128:37",
															"nodeType": "YulBlock",
															"src": "5298:128:37",
															"statements": [
																{
																	"nativeSrc": "5313:15:37",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5313:15:37",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5327:1:37",
																		"nodeType": "YulLiteral",
																		"src": "5327:1:37",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5317:6:37",
																			"nodeType": "YulTypedName",
																			"src": "5317:6:37",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5342:74:37",
																	"nodeType": "YulAssignment",
																	"src": "5342:74:37",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5388:9:37",
																						"nodeType": "YulIdentifier",
																						"src": "5388:9:37"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5399:6:37",
																						"nodeType": "YulIdentifier",
																						"src": "5399:6:37"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5384:3:37",
																					"nodeType": "YulIdentifier",
																					"src": "5384:3:37"
																				},
																				"nativeSrc": "5384:22:37",
																				"nodeType": "YulFunctionCall",
																				"src": "5384:22:37"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5408:7:37",
																				"nodeType": "YulIdentifier",
																				"src": "5408:7:37"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5352:31:37",
																			"nodeType": "YulIdentifier",
																			"src": "5352:31:37"
																		},
																		"nativeSrc": "5352:64:37",
																		"nodeType": "YulFunctionCall",
																		"src": "5352:64:37"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5342:6:37",
																			"nodeType": "YulIdentifier",
																			"src": "5342:6:37"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5082:351:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5129:9:37",
														"nodeType": "YulTypedName",
														"src": "5129:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5140:7:37",
														"nodeType": "YulTypedName",
														"src": "5140:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5152:6:37",
														"nodeType": "YulTypedName",
														"src": "5152:6:37",
														"type": ""
													}
												],
												"src": "5082:351:37"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint256__to_t_uint16_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can do this.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint16(x, y) -> product {\n        x := cleanup_t_uint16(x)\n        y := cleanup_t_uint16(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint16(product_raw)\n\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c80634bf2e99b14610064578063746679061461008257806389a30271146100a05780638da5cb5b146100be578063bb09d9b7146100dc578063ca43b4fc146100fa575b5f80fd5b61006c61012b565b6040516100799190610349565b60405180910390f35b61008a610143565b6040516100979190610349565b60405180910390f35b6100a861015b565b6040516100b591906103bd565b60405180910390f35b6100c661017e565b6040516100d39190610349565b60405180910390f35b6100e46101a3565b6040516100f19190610349565b60405180910390f35b610114600480360381019061010f9190610411565b6101c8565b604051610122929190610463565b60405180910390f35b731c7d4b196cb0c7b01d743fbc6116a902379c723881565b73c532a74256d3db42d0bf7a0400fefdbad769400881565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610259576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610250906104e4565b60405180910390fd5b610bdf83610267919061052f565b9150815f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102c29190610349565b602060405180830381865afa1580156102dd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103019190610595565b91509150915091565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103338261030a565b9050919050565b61034381610329565b82525050565b5f60208201905061035c5f83018461033a565b92915050565b5f819050919050565b5f61038561038061037b8461030a565b610362565b61030a565b9050919050565b5f6103968261036b565b9050919050565b5f6103a78261038c565b9050919050565b6103b78161039d565b82525050565b5f6020820190506103d05f8301846103ae565b92915050565b5f80fd5b5f61ffff82169050919050565b6103f0816103da565b81146103fa575f80fd5b50565b5f8135905061040b816103e7565b92915050565b5f60208284031215610426576104256103d6565b5b5f610433848285016103fd565b91505092915050565b610445816103da565b82525050565b5f819050919050565b61045d8161044b565b82525050565b5f6040820190506104765f83018561043c565b6104836020830184610454565b9392505050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e20646f20746869732e0000000000000000005f82015250565b5f6104ce60178361048a565b91506104d98261049a565b602082019050919050565b5f6020820190508181035f8301526104fb816104c2565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610539826103da565b9150610544836103da565b9250828202610552816103da565b915080821461056457610563610502565b5b5092915050565b6105748161044b565b811461057e575f80fd5b50565b5f8151905061058f8161056b565b92915050565b5f602082840312156105aa576105a96103d6565b5b5f6105b784828501610581565b9150509291505056fea2646970667358221220e9ea542ec63bea142ef9dbe6c82771fb6705e0bb5ea5b66728f5ec10a26b4d9464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BF2E99B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x74667906 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0xBB09D9B7 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0xCA43B4FC EQ PUSH2 0xFA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x411 JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP3 SWAP2 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0x1C7D4B196CB0C7B01D743FBC6116A902379C7238 DUP2 JUMP JUMPDEST PUSH20 0xC532A74256D3DB42D0BF7A0400FEFDBAD7694008 DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBDF DUP4 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x52F JUMP JUMPDEST SWAP2 POP DUP2 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x595 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x333 DUP3 PUSH2 0x30A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x329 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35C PUSH0 DUP4 ADD DUP5 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x385 PUSH2 0x380 PUSH2 0x37B DUP5 PUSH2 0x30A JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x396 DUP3 PUSH2 0x36B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3A7 DUP3 PUSH2 0x38C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B7 DUP2 PUSH2 0x39D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x3AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F0 DUP2 PUSH2 0x3DA JUMP JUMPDEST DUP2 EQ PUSH2 0x3FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x40B DUP2 PUSH2 0x3E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x426 JUMPI PUSH2 0x425 PUSH2 0x3D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x433 DUP5 DUP3 DUP6 ADD PUSH2 0x3FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x445 DUP2 PUSH2 0x3DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45D DUP2 PUSH2 0x44B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x476 PUSH0 DUP4 ADD DUP6 PUSH2 0x43C JUMP JUMPDEST PUSH2 0x483 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x454 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E20646F20746869732E000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4CE PUSH1 0x17 DUP4 PUSH2 0x48A JUMP JUMPDEST SWAP2 POP PUSH2 0x4D9 DUP3 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4FB DUP2 PUSH2 0x4C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x539 DUP3 PUSH2 0x3DA JUMP JUMPDEST SWAP2 POP PUSH2 0x544 DUP4 PUSH2 0x3DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x552 DUP2 PUSH2 0x3DA JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x564 JUMPI PUSH2 0x563 PUSH2 0x502 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x574 DUP2 PUSH2 0x44B JUMP JUMPDEST DUP2 EQ PUSH2 0x57E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x58F DUP2 PUSH2 0x56B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5AA JUMPI PUSH2 0x5A9 PUSH2 0x3D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5B7 DUP5 DUP3 DUP6 ADD PUSH2 0x581 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xEA SLOAD 0x2E 0xC6 EXTCODESIZE 0xEA EQ 0x2E 0xF9 0xDB 0xE6 0xC8 0x27 PUSH18 0xFB6705E0BB5EA5B66728F5EC10A26B4D9464 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1085:1061:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1265:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1163:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1113:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1421:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1361:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1842:302;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1265:89;1312:42;1265:89;:::o;1163:96::-;1217:42;1163:96;:::o;1113:18::-;;;;;;;;;;;;:::o;1421:20::-;;;;;;;;;;;;;:::o;1361:27::-;;;;;;;;;;;;;:::o;1842:302::-;1916:17;1935:7;1785:5;;;;;;;;;;;1771:19;;:10;:19;;;1762:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2072:4:::1;2057:12;:19;;;;:::i;:::-;2044:32;;2095:10;2107:4;::::0;::::1;;;;;;;;:14;;;2130:4;2107:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2087:50;;;;1842:302:::0;;;:::o;7:126:37:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:60::-;621:3;642:5;635:12;;593:60;;;:::o;659:142::-;709:9;742:53;760:34;769:24;787:5;769:24;:::i;:::-;760:34;:::i;:::-;742:53;:::i;:::-;729:66;;659:142;;;:::o;807:126::-;857:9;890:37;921:5;890:37;:::i;:::-;877:50;;807:126;;;:::o;939:139::-;1002:9;1035:37;1066:5;1035:37;:::i;:::-;1022:50;;939:139;;;:::o;1084:157::-;1184:50;1228:5;1184:50;:::i;:::-;1179:3;1172:63;1084:157;;:::o;1247:248::-;1353:4;1391:2;1380:9;1376:18;1368:26;;1404:84;1485:1;1474:9;1470:17;1461:6;1404:84;:::i;:::-;1247:248;;;;:::o;1582:117::-;1691:1;1688;1681:12;1828:89;1864:7;1904:6;1897:5;1893:18;1882:29;;1828:89;;;:::o;1923:120::-;1995:23;2012:5;1995:23;:::i;:::-;1988:5;1985:34;1975:62;;2033:1;2030;2023:12;1975:62;1923:120;:::o;2049:137::-;2094:5;2132:6;2119:20;2110:29;;2148:32;2174:5;2148:32;:::i;:::-;2049:137;;;;:::o;2192:327::-;2250:6;2299:2;2287:9;2278:7;2274:23;2270:32;2267:119;;;2305:79;;:::i;:::-;2267:119;2425:1;2450:52;2494:7;2485:6;2474:9;2470:22;2450:52;:::i;:::-;2440:62;;2396:116;2192:327;;;;:::o;2525:115::-;2610:23;2627:5;2610:23;:::i;:::-;2605:3;2598:36;2525:115;;:::o;2646:77::-;2683:7;2712:5;2701:16;;2646:77;;;:::o;2729:118::-;2816:24;2834:5;2816:24;:::i;:::-;2811:3;2804:37;2729:118;;:::o;2853:328::-;2972:4;3010:2;2999:9;2995:18;2987:26;;3023:69;3089:1;3078:9;3074:17;3065:6;3023:69;:::i;:::-;3102:72;3170:2;3159:9;3155:18;3146:6;3102:72;:::i;:::-;2853:328;;;;;:::o;3187:169::-;3271:11;3305:6;3300:3;3293:19;3345:4;3340:3;3336:14;3321:29;;3187:169;;;;:::o;3362:173::-;3502:25;3498:1;3490:6;3486:14;3479:49;3362:173;:::o;3541:366::-;3683:3;3704:67;3768:2;3763:3;3704:67;:::i;:::-;3697:74;;3780:93;3869:3;3780:93;:::i;:::-;3898:2;3893:3;3889:12;3882:19;;3541:366;;;:::o;3913:419::-;4079:4;4117:2;4106:9;4102:18;4094:26;;4166:9;4160:4;4156:20;4152:1;4141:9;4137:17;4130:47;4194:131;4320:4;4194:131;:::i;:::-;4186:139;;3913:419;;;:::o;4338:180::-;4386:77;4383:1;4376:88;4483:4;4480:1;4473:15;4507:4;4504:1;4497:15;4524:275;4563:7;4586:19;4603:1;4586:19;:::i;:::-;4581:24;;4619:19;4636:1;4619:19;:::i;:::-;4614:24;;4673:1;4670;4666:9;4695:29;4712:11;4695:29;:::i;:::-;4684:40;;4756:11;4747:7;4744:24;4734:58;;4772:18;;:::i;:::-;4734:58;4571:228;4524:275;;;;:::o;4805:122::-;4878:24;4896:5;4878:24;:::i;:::-;4871:5;4868:35;4858:63;;4917:1;4914;4907:12;4858:63;4805:122;:::o;4933:143::-;4990:5;5021:6;5015:13;5006:22;;5037:33;5064:5;5037:33;:::i;:::-;4933:143;;;;:::o;5082:351::-;5152:6;5201:2;5189:9;5180:7;5176:23;5172:32;5169:119;;;5207:79;;:::i;:::-;5169:119;5327:1;5352:64;5408:7;5399:6;5388:9;5384:22;5352:64;:::i;:::-;5342:74;;5298:128;5082:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "305200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UNISWAP_POOLMANAGER_SEPOLIA()": "373",
								"USDC()": "infinite",
								"USDC_ADDRESS()": "2574",
								"USDC_ADDRESS_SEPOLIA()": "351",
								"executeSwap(uint16)": "infinite",
								"owner()": "2552"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1085,
									"end": 2146,
									"name": "PUSH",
									"source": 23,
									"value": "80"
								},
								{
									"begin": 1085,
									"end": 2146,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 1085,
									"end": 2146,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 1532,
									"end": 1725,
									"name": "CALLVALUE",
									"source": 23
								},
								{
									"begin": 1532,
									"end": 1725,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1532,
									"end": 1725,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 1532,
									"end": 1725,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 1725,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 1532,
									"end": 1725,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 1725,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1532,
									"end": 1725,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 1532,
									"end": 1725,
									"name": "tag",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 1725,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1532,
									"end": 1725,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1564,
									"end": 1574,
									"name": "CALLER",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1561,
									"name": "PUSH",
									"source": 23,
									"value": "2"
								},
								{
									"begin": 1556,
									"end": 1561,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "PUSH",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "EXP",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "OR",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 1556,
									"end": 1574,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1312,
									"end": 1354,
									"name": "PUSH",
									"source": 23,
									"value": "1C7D4B196CB0C7B01D743FBC6116A902379C7238"
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "PUSH",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "EXP",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "OR",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1652,
									"end": 1664,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 1652,
									"end": 1664,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1664,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1652,
									"end": 1664,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 1652,
									"end": 1664,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1652,
									"end": 1664,
									"name": "PUSH",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 1652,
									"end": 1664,
									"name": "EXP",
									"source": 23
								},
								{
									"begin": 1652,
									"end": 1664,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1652,
									"end": 1664,
									"name": "DIV",
									"source": 23
								},
								{
									"begin": 1652,
									"end": 1664,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1652,
									"end": 1664,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "PUSH",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "EXP",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "OR",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1665,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "PUSH",
									"source": 23,
									"value": "33C981BABA081F8FD2C52AC6AD1EA95B6814B4376640F55689051F6584729688"
								},
								{
									"begin": 1706,
									"end": 1711,
									"name": "PUSH",
									"source": 23,
									"value": "2"
								},
								{
									"begin": 1706,
									"end": 1711,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1706,
									"end": 1711,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1706,
									"end": 1711,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 1706,
									"end": 1711,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1706,
									"end": 1711,
									"name": "PUSH",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 1706,
									"end": 1711,
									"name": "EXP",
									"source": 23
								},
								{
									"begin": 1706,
									"end": 1711,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1706,
									"end": 1711,
									"name": "DIV",
									"source": 23
								},
								{
									"begin": 1706,
									"end": 1711,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1706,
									"end": 1711,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1713,
									"end": 1717,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1713,
									"end": 1717,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1713,
									"end": 1717,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 1713,
									"end": 1717,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1713,
									"end": 1717,
									"name": "PUSH",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 1713,
									"end": 1717,
									"name": "EXP",
									"source": 23
								},
								{
									"begin": 1713,
									"end": 1717,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1713,
									"end": 1717,
									"name": "DIV",
									"source": 23
								},
								{
									"begin": 1713,
									"end": 1717,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1713,
									"end": 1717,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "5"
								},
								{
									"begin": 1689,
									"end": 1718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "tag",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1689,
									"end": 1718,
									"name": "LOG1",
									"source": 23
								},
								{
									"begin": 1085,
									"end": 2146,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "6"
								},
								{
									"begin": 1085,
									"end": 2146,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 37,
									"value": "7"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 37,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 37
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 37
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 37,
									"value": "8"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "18"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "7"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 37,
									"value": "18"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 37
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 37,
									"value": "9"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "20"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 37
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "8"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 37,
									"value": "20"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 37
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 365,
									"end": 425,
									"name": "tag",
									"source": 37,
									"value": "10"
								},
								{
									"begin": 365,
									"end": 425,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 393,
									"end": 396,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 419,
									"name": "DUP2",
									"source": 37
								},
								{
									"begin": 407,
									"end": 419,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 407,
									"end": 419,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 365,
									"end": 425,
									"name": "SWAP2",
									"source": 37
								},
								{
									"begin": 365,
									"end": 425,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 365,
									"end": 425,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 365,
									"end": 425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 431,
									"end": 573,
									"name": "tag",
									"source": 37,
									"value": "11"
								},
								{
									"begin": 431,
									"end": 573,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 481,
									"end": 490,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 514,
									"end": 567,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 566,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "24"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "25"
								},
								{
									"begin": 559,
									"end": 564,
									"name": "DUP5",
									"source": 37
								},
								{
									"begin": 541,
									"end": 565,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "7"
								},
								{
									"begin": 541,
									"end": 565,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 541,
									"end": 565,
									"name": "tag",
									"source": 37,
									"value": "25"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 532,
									"end": 566,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 532,
									"end": 566,
									"name": "tag",
									"source": 37,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 566,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 514,
									"end": 567,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "7"
								},
								{
									"begin": 514,
									"end": 567,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 514,
									"end": 567,
									"name": "tag",
									"source": 37,
									"value": "23"
								},
								{
									"begin": 514,
									"end": 567,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 501,
									"end": 567,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 501,
									"end": 567,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 431,
									"end": 573,
									"name": "SWAP2",
									"source": 37
								},
								{
									"begin": 431,
									"end": 573,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 431,
									"end": 573,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 431,
									"end": 573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 579,
									"end": 705,
									"name": "tag",
									"source": 37,
									"value": "12"
								},
								{
									"begin": 579,
									"end": 705,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 629,
									"end": 638,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 699,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "27"
								},
								{
									"begin": 693,
									"end": 698,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 662,
									"end": 699,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "11"
								},
								{
									"begin": 662,
									"end": 699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 662,
									"end": 699,
									"name": "tag",
									"source": 37,
									"value": "27"
								},
								{
									"begin": 662,
									"end": 699,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 649,
									"end": 699,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 649,
									"end": 699,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 579,
									"end": 705,
									"name": "SWAP2",
									"source": 37
								},
								{
									"begin": 579,
									"end": 705,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 579,
									"end": 705,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 579,
									"end": 705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 711,
									"end": 850,
									"name": "tag",
									"source": 37,
									"value": "13"
								},
								{
									"begin": 711,
									"end": 850,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 774,
									"end": 783,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 844,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "29"
								},
								{
									"begin": 838,
									"end": 843,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 807,
									"end": 844,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "12"
								},
								{
									"begin": 807,
									"end": 844,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 807,
									"end": 844,
									"name": "tag",
									"source": 37,
									"value": "29"
								},
								{
									"begin": 807,
									"end": 844,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 794,
									"end": 844,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 794,
									"end": 844,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 711,
									"end": 850,
									"name": "SWAP2",
									"source": 37
								},
								{
									"begin": 711,
									"end": 850,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 711,
									"end": 850,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 711,
									"end": 850,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 856,
									"end": 1013,
									"name": "tag",
									"source": 37,
									"value": "14"
								},
								{
									"begin": 856,
									"end": 1013,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 956,
									"end": 1006,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "31"
								},
								{
									"begin": 1000,
									"end": 1005,
									"name": "DUP2",
									"source": 37
								},
								{
									"begin": 956,
									"end": 1006,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "13"
								},
								{
									"begin": 956,
									"end": 1006,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 956,
									"end": 1006,
									"name": "tag",
									"source": 37,
									"value": "31"
								},
								{
									"begin": 956,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 951,
									"end": 954,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 944,
									"end": 1007,
									"name": "MSTORE",
									"source": 37
								},
								{
									"begin": 856,
									"end": 1013,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 856,
									"end": 1013,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 856,
									"end": 1013,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 1019,
									"end": 1377,
									"name": "tag",
									"source": 37,
									"value": "5"
								},
								{
									"begin": 1019,
									"end": 1377,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 1153,
									"end": 1157,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 1191,
									"end": 1193,
									"name": "PUSH",
									"source": 37,
									"value": "40"
								},
								{
									"begin": 1180,
									"end": 1189,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 1176,
									"end": 1194,
									"name": "ADD",
									"source": 37
								},
								{
									"begin": 1168,
									"end": 1194,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 1168,
									"end": 1194,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 1204,
									"end": 1275,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "33"
								},
								{
									"begin": 1272,
									"end": 1273,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 1261,
									"end": 1270,
									"name": "DUP4",
									"source": 37
								},
								{
									"begin": 1257,
									"end": 1274,
									"name": "ADD",
									"source": 37
								},
								{
									"begin": 1248,
									"end": 1254,
									"name": "DUP6",
									"source": 37
								},
								{
									"begin": 1204,
									"end": 1275,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "9"
								},
								{
									"begin": 1204,
									"end": 1275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 1204,
									"end": 1275,
									"name": "tag",
									"source": 37,
									"value": "33"
								},
								{
									"begin": 1204,
									"end": 1275,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 1285,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "34"
								},
								{
									"begin": 1366,
									"end": 1368,
									"name": "PUSH",
									"source": 37,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1364,
									"name": "DUP4",
									"source": 37
								},
								{
									"begin": 1351,
									"end": 1369,
									"name": "ADD",
									"source": 37
								},
								{
									"begin": 1342,
									"end": 1348,
									"name": "DUP5",
									"source": 37
								},
								{
									"begin": 1285,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "14"
								},
								{
									"begin": 1285,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 1285,
									"end": 1370,
									"name": "tag",
									"source": 37,
									"value": "34"
								},
								{
									"begin": 1285,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 1019,
									"end": 1377,
									"name": "SWAP4",
									"source": 37
								},
								{
									"begin": 1019,
									"end": 1377,
									"name": "SWAP3",
									"source": 37
								},
								{
									"begin": 1019,
									"end": 1377,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 1019,
									"end": 1377,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 1019,
									"end": 1377,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 1019,
									"end": 1377,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 1085,
									"end": 2146,
									"name": "tag",
									"source": 23,
									"value": "6"
								},
								{
									"begin": 1085,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1085,
									"end": 2146,
									"name": "PUSH #[$]",
									"source": 23,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1085,
									"end": 2146,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1085,
									"end": 2146,
									"name": "PUSH [$]",
									"source": 23,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1085,
									"end": 2146,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1085,
									"end": 2146,
									"name": "CODECOPY",
									"source": 23
								},
								{
									"begin": 1085,
									"end": 2146,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1085,
									"end": 2146,
									"name": "RETURN",
									"source": 23
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e9ea542ec63bea142ef9dbe6c82771fb6705e0bb5ea5b66728f5ec10a26b4d9464736f6c634300081a0033",
									".code": [
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "CALLVALUE",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "tag",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "CALLDATASIZE",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "2"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "E0"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "SHR",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "4BF2E99B"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "3"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "74667906"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "89A30271"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "5"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "6"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "BB09D9B7"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "7"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "CA43B4FC"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "8"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "tag",
											"source": 23,
											"value": "2"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1085,
											"end": 2146,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "tag",
											"source": 23,
											"value": "3"
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "9"
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "10"
										},
										{
											"begin": 1265,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "tag",
											"source": 23,
											"value": "9"
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "11"
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "12"
										},
										{
											"begin": 1265,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "tag",
											"source": 23,
											"value": "11"
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "RETURN",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "tag",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "13"
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "14"
										},
										{
											"begin": 1163,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "tag",
											"source": 23,
											"value": "13"
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "15"
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "12"
										},
										{
											"begin": 1163,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "tag",
											"source": 23,
											"value": "15"
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "RETURN",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "tag",
											"source": 23,
											"value": "5"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "16"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "17"
										},
										{
											"begin": 1113,
											"end": 1131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "tag",
											"source": 23,
											"value": "16"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "18"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "19"
										},
										{
											"begin": 1113,
											"end": 1131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "tag",
											"source": 23,
											"value": "18"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "RETURN",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "tag",
											"source": 23,
											"value": "6"
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "21"
										},
										{
											"begin": 1421,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "tag",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "22"
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "12"
										},
										{
											"begin": 1421,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "tag",
											"source": 23,
											"value": "22"
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "RETURN",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "tag",
											"source": 23,
											"value": "7"
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "23"
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 1361,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "tag",
											"source": 23,
											"value": "23"
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "25"
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "12"
										},
										{
											"begin": 1361,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "tag",
											"source": 23,
											"value": "25"
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "RETURN",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "tag",
											"source": 23,
											"value": "8"
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "26"
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "CALLDATASIZE",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "27"
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "28"
										},
										{
											"begin": 1842,
											"end": 2144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "tag",
											"source": 23,
											"value": "27"
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "29"
										},
										{
											"begin": 1842,
											"end": 2144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "tag",
											"source": 23,
											"value": "26"
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "30"
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "31"
										},
										{
											"begin": 1842,
											"end": 2144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "tag",
											"source": 23,
											"value": "30"
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "RETURN",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "tag",
											"source": 23,
											"value": "10"
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1312,
											"end": 1354,
											"name": "PUSH",
											"source": 23,
											"value": "1C7D4B196CB0C7B01D743FBC6116A902379C7238"
										},
										{
											"begin": 1265,
											"end": 1354,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "tag",
											"source": 23,
											"value": "14"
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH",
											"source": 23,
											"value": "C532A74256D3DB42D0BF7A0400FEFDBAD7694008"
										},
										{
											"begin": 1163,
											"end": 1259,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1163,
											"end": 1259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "tag",
											"source": 23,
											"value": "17"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "SLOAD",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "PUSH",
											"source": 23,
											"value": "100"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "EXP",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "tag",
											"source": 23,
											"value": "21"
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "PUSH",
											"source": 23,
											"value": "2"
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "SLOAD",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "PUSH",
											"source": 23,
											"value": "100"
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "EXP",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1421,
											"end": 1441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "tag",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "PUSH",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "SLOAD",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "PUSH",
											"source": 23,
											"value": "100"
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "EXP",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1361,
											"end": 1388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "tag",
											"source": 23,
											"value": "29"
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1916,
											"end": 1933,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1942,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 23,
											"value": "2"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "SLOAD",
											"source": 23
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 23,
											"value": "100"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "EXP",
											"source": 23
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1771,
											"end": 1790,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1771,
											"end": 1790,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1771,
											"end": 1781,
											"name": "CALLER",
											"source": 23
										},
										{
											"begin": 1771,
											"end": 1790,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1771,
											"end": 1790,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1771,
											"end": 1790,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "33"
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "PUSH",
											"source": 23,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "34"
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "35"
										},
										{
											"begin": 1762,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "tag",
											"source": 23,
											"value": "34"
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "tag",
											"source": 23,
											"value": "33"
										},
										{
											"begin": 1762,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2072,
											"end": 2076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "BDF"
										},
										{
											"begin": 2057,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 2057,
											"end": 2076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "37"
										},
										{
											"begin": 2057,
											"end": 2076,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2057,
											"end": 2076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2057,
											"end": 2076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "38"
										},
										{
											"begin": 2057,
											"end": 2076,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2057,
											"end": 2076,
											"modifierDepth": 1,
											"name": "tag",
											"source": 23,
											"value": "37"
										},
										{
											"begin": 2057,
											"end": 2076,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2044,
											"end": 2076,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2044,
											"end": 2076,
											"modifierDepth": 1,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2095,
											"end": 2105,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2111,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2111,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2111,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "100"
										},
										{
											"begin": 2107,
											"end": 2111,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2111,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2111,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2107,
											"end": 2111,
											"modifierDepth": 1,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2107,
											"end": 2121,
											"modifierDepth": 1,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "70A08231"
										},
										{
											"begin": 2130,
											"end": 2134,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "E0"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "39"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "12"
										},
										{
											"begin": 2107,
											"end": 2136,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 23,
											"value": "39"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "41"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2136,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 23,
											"value": "41"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "42"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "43"
										},
										{
											"begin": 2107,
											"end": 2136,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 23,
											"value": "42"
										},
										{
											"begin": 2107,
											"end": 2136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2087,
											"end": 2137,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2087,
											"end": 2137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2087,
											"end": 2137,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2087,
											"end": 2137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1842,
											"end": 2144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 37,
											"value": "44"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 37,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 37
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 37,
											"value": "45"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "70"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "44"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 37,
											"value": "70"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 37,
											"value": "46"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "72"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "45"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 37,
											"value": "72"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 37,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "74"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 37
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "46"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 37,
											"value": "74"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 593,
											"end": 653,
											"name": "tag",
											"source": 37,
											"value": "47"
										},
										{
											"begin": 593,
											"end": 653,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 621,
											"end": 624,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 647,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 635,
											"end": 647,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 635,
											"end": 647,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 593,
											"end": 653,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 593,
											"end": 653,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 593,
											"end": 653,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 593,
											"end": 653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 659,
											"end": 801,
											"name": "tag",
											"source": 37,
											"value": "48"
										},
										{
											"begin": 659,
											"end": 801,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 709,
											"end": 718,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "77"
										},
										{
											"begin": 760,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "78"
										},
										{
											"begin": 769,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "79"
										},
										{
											"begin": 787,
											"end": 792,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 769,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 769,
											"end": 793,
											"name": "tag",
											"source": 37,
											"value": "79"
										},
										{
											"begin": 769,
											"end": 793,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 760,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "47"
										},
										{
											"begin": 760,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 760,
											"end": 794,
											"name": "tag",
											"source": 37,
											"value": "78"
										},
										{
											"begin": 760,
											"end": 794,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 742,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "44"
										},
										{
											"begin": 742,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 742,
											"end": 795,
											"name": "tag",
											"source": 37,
											"value": "77"
										},
										{
											"begin": 742,
											"end": 795,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 729,
											"end": 795,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 729,
											"end": 795,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 659,
											"end": 801,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 659,
											"end": 801,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 659,
											"end": 801,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 659,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 807,
											"end": 933,
											"name": "tag",
											"source": 37,
											"value": "49"
										},
										{
											"begin": 807,
											"end": 933,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 857,
											"end": 866,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "81"
										},
										{
											"begin": 921,
											"end": 926,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 890,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "48"
										},
										{
											"begin": 890,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 890,
											"end": 927,
											"name": "tag",
											"source": 37,
											"value": "81"
										},
										{
											"begin": 890,
											"end": 927,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 877,
											"end": 927,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 877,
											"end": 927,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 807,
											"end": 933,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 807,
											"end": 933,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 807,
											"end": 933,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 807,
											"end": 933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 939,
											"end": 1078,
											"name": "tag",
											"source": 37,
											"value": "50"
										},
										{
											"begin": 939,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1002,
											"end": 1011,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "83"
										},
										{
											"begin": 1066,
											"end": 1071,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 1035,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "49"
										},
										{
											"begin": 1035,
											"end": 1072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 1035,
											"end": 1072,
											"name": "tag",
											"source": 37,
											"value": "83"
										},
										{
											"begin": 1035,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1022,
											"end": 1072,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 1022,
											"end": 1072,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 939,
											"end": 1078,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 939,
											"end": 1078,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 939,
											"end": 1078,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 939,
											"end": 1078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 1084,
											"end": 1241,
											"name": "tag",
											"source": 37,
											"value": "51"
										},
										{
											"begin": 1084,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1184,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "85"
										},
										{
											"begin": 1228,
											"end": 1233,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 1184,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "50"
										},
										{
											"begin": 1184,
											"end": 1234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 1184,
											"end": 1234,
											"name": "tag",
											"source": 37,
											"value": "85"
										},
										{
											"begin": 1184,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 1172,
											"end": 1235,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 1084,
											"end": 1241,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1084,
											"end": 1241,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1084,
											"end": 1241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 1247,
											"end": 1495,
											"name": "tag",
											"source": 37,
											"value": "19"
										},
										{
											"begin": 1247,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1353,
											"end": 1357,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1393,
											"name": "PUSH",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1389,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1404,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "87"
										},
										{
											"begin": 1485,
											"end": 1486,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1483,
											"name": "DUP4",
											"source": 37
										},
										{
											"begin": 1470,
											"end": 1487,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 1461,
											"end": 1467,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 1404,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "51"
										},
										{
											"begin": 1404,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 1404,
											"end": 1488,
											"name": "tag",
											"source": 37,
											"value": "87"
										},
										{
											"begin": 1404,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1247,
											"end": 1495,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 1247,
											"end": 1495,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 1247,
											"end": 1495,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1247,
											"end": 1495,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1247,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 1582,
											"end": 1699,
											"name": "tag",
											"source": 37,
											"value": "53"
										},
										{
											"begin": 1582,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "DUP1",
											"source": 37
										},
										{
											"begin": 1681,
											"end": 1693,
											"name": "REVERT",
											"source": 37
										},
										{
											"begin": 1828,
											"end": 1917,
											"name": "tag",
											"source": 37,
											"value": "55"
										},
										{
											"begin": 1828,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1864,
											"end": 1871,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "PUSH",
											"source": 37,
											"value": "FFFF"
										},
										{
											"begin": 1897,
											"end": 1902,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 1893,
											"end": 1911,
											"name": "AND",
											"source": 37
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1828,
											"end": 1917,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 1828,
											"end": 1917,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 1828,
											"end": 1917,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1828,
											"end": 1917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 1923,
											"end": 2043,
											"name": "tag",
											"source": 37,
											"value": "56"
										},
										{
											"begin": 1923,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1995,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "93"
										},
										{
											"begin": 2012,
											"end": 2017,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 1995,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "55"
										},
										{
											"begin": 1995,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 1995,
											"end": 2018,
											"name": "tag",
											"source": 37,
											"value": "93"
										},
										{
											"begin": 1995,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 1985,
											"end": 2019,
											"name": "EQ",
											"source": 37
										},
										{
											"begin": 1975,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "94"
										},
										{
											"begin": 1975,
											"end": 2037,
											"name": "JUMPI",
											"source": 37
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2031,
											"name": "DUP1",
											"source": 37
										},
										{
											"begin": 2023,
											"end": 2035,
											"name": "REVERT",
											"source": 37
										},
										{
											"begin": 1975,
											"end": 2037,
											"name": "tag",
											"source": 37,
											"value": "94"
										},
										{
											"begin": 1975,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 1923,
											"end": 2043,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 1923,
											"end": 2043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 2049,
											"end": 2186,
											"name": "tag",
											"source": 37,
											"value": "57"
										},
										{
											"begin": 2049,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 2094,
											"end": 2099,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2138,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 2119,
											"end": 2139,
											"name": "CALLDATALOAD",
											"source": 37
										},
										{
											"begin": 2110,
											"end": 2139,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 2110,
											"end": 2139,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2148,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "96"
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 2148,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "56"
										},
										{
											"begin": 2148,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 2148,
											"end": 2180,
											"name": "tag",
											"source": 37,
											"value": "96"
										},
										{
											"begin": 2148,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 2049,
											"end": 2186,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 2049,
											"end": 2186,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 2049,
											"end": 2186,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2049,
											"end": 2186,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2049,
											"end": 2186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 2192,
											"end": 2519,
											"name": "tag",
											"source": 37,
											"value": "28"
										},
										{
											"begin": 2192,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2301,
											"name": "PUSH",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2296,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 2278,
											"end": 2285,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 2274,
											"end": 2297,
											"name": "SUB",
											"source": 37
										},
										{
											"begin": 2270,
											"end": 2302,
											"name": "SLT",
											"source": 37
										},
										{
											"begin": 2267,
											"end": 2386,
											"name": "ISZERO",
											"source": 37
										},
										{
											"begin": 2267,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "98"
										},
										{
											"begin": 2267,
											"end": 2386,
											"name": "JUMPI",
											"source": 37
										},
										{
											"begin": 2305,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "99"
										},
										{
											"begin": 2305,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "53"
										},
										{
											"begin": 2305,
											"end": 2384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 2305,
											"end": 2384,
											"name": "tag",
											"source": 37,
											"value": "99"
										},
										{
											"begin": 2305,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 2267,
											"end": 2386,
											"name": "tag",
											"source": 37,
											"value": "98"
										},
										{
											"begin": 2267,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 2425,
											"end": 2426,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "100"
										},
										{
											"begin": 2494,
											"end": 2501,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 2474,
											"end": 2483,
											"name": "DUP6",
											"source": 37
										},
										{
											"begin": 2470,
											"end": 2492,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 2450,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "57"
										},
										{
											"begin": 2450,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 2450,
											"end": 2502,
											"name": "tag",
											"source": 37,
											"value": "100"
										},
										{
											"begin": 2450,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 2440,
											"end": 2502,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 2440,
											"end": 2502,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2396,
											"end": 2512,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2192,
											"end": 2519,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 2192,
											"end": 2519,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 2192,
											"end": 2519,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2192,
											"end": 2519,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2192,
											"end": 2519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 2525,
											"end": 2640,
											"name": "tag",
											"source": 37,
											"value": "58"
										},
										{
											"begin": 2525,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "102"
										},
										{
											"begin": 2627,
											"end": 2632,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "55"
										},
										{
											"begin": 2610,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "tag",
											"source": 37,
											"value": "102"
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 2605,
											"end": 2608,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 2598,
											"end": 2634,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 2525,
											"end": 2640,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2525,
											"end": 2640,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2525,
											"end": 2640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 2646,
											"end": 2723,
											"name": "tag",
											"source": 37,
											"value": "59"
										},
										{
											"begin": 2646,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 2683,
											"end": 2690,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2717,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2646,
											"end": 2723,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 2646,
											"end": 2723,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 2646,
											"end": 2723,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2646,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 2729,
											"end": 2847,
											"name": "tag",
											"source": 37,
											"value": "60"
										},
										{
											"begin": 2729,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 2816,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "105"
										},
										{
											"begin": 2834,
											"end": 2839,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 2816,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "59"
										},
										{
											"begin": 2816,
											"end": 2840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 2816,
											"end": 2840,
											"name": "tag",
											"source": 37,
											"value": "105"
										},
										{
											"begin": 2816,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 2811,
											"end": 2814,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 2804,
											"end": 2841,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 2729,
											"end": 2847,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2729,
											"end": 2847,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2729,
											"end": 2847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 2853,
											"end": 3181,
											"name": "tag",
											"source": 37,
											"value": "31"
										},
										{
											"begin": 2853,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 2972,
											"end": 2976,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 37,
											"value": "40"
										},
										{
											"begin": 2999,
											"end": 3008,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 3023,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "107"
										},
										{
											"begin": 3089,
											"end": 3090,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3087,
											"name": "DUP4",
											"source": 37
										},
										{
											"begin": 3074,
											"end": 3091,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "DUP6",
											"source": 37
										},
										{
											"begin": 3023,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "58"
										},
										{
											"begin": 3023,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 3023,
											"end": 3092,
											"name": "tag",
											"source": 37,
											"value": "107"
										},
										{
											"begin": 3023,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 3102,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "108"
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "DUP4",
											"source": 37
										},
										{
											"begin": 3155,
											"end": 3173,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 3146,
											"end": 3152,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 3102,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "60"
										},
										{
											"begin": 3102,
											"end": 3174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 3102,
											"end": 3174,
											"name": "tag",
											"source": 37,
											"value": "108"
										},
										{
											"begin": 3102,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 2853,
											"end": 3181,
											"name": "SWAP4",
											"source": 37
										},
										{
											"begin": 2853,
											"end": 3181,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 2853,
											"end": 3181,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2853,
											"end": 3181,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2853,
											"end": 3181,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 2853,
											"end": 3181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 3187,
											"end": 3356,
											"name": "tag",
											"source": 37,
											"value": "61"
										},
										{
											"begin": 3187,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 3271,
											"end": 3282,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3311,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 3300,
											"end": 3303,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 3293,
											"end": 3312,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 3345,
											"end": 3349,
											"name": "PUSH",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 3340,
											"end": 3343,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 3336,
											"end": 3350,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 3321,
											"end": 3350,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 3321,
											"end": 3350,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 3187,
											"end": 3356,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 3187,
											"end": 3356,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 3187,
											"end": 3356,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 3187,
											"end": 3356,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 3187,
											"end": 3356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 3362,
											"end": 3535,
											"name": "tag",
											"source": 37,
											"value": "62"
										},
										{
											"begin": 3362,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 3502,
											"end": 3527,
											"name": "PUSH",
											"source": 37,
											"value": "4F6E6C79206F776E65722063616E20646F20746869732E000000000000000000"
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3496,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 3486,
											"end": 3500,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 3479,
											"end": 3528,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 3362,
											"end": 3535,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 3362,
											"end": 3535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 3541,
											"end": 3907,
											"name": "tag",
											"source": 37,
											"value": "63"
										},
										{
											"begin": 3541,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 3683,
											"end": 3686,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 3704,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "112"
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 37,
											"value": "17"
										},
										{
											"begin": 3763,
											"end": 3766,
											"name": "DUP4",
											"source": 37
										},
										{
											"begin": 3704,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "61"
										},
										{
											"begin": 3704,
											"end": 3771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 3704,
											"end": 3771,
											"name": "tag",
											"source": 37,
											"value": "112"
										},
										{
											"begin": 3704,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 3697,
											"end": 3771,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 3697,
											"end": 3771,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 3780,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "113"
										},
										{
											"begin": 3869,
											"end": 3872,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 3780,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "62"
										},
										{
											"begin": 3780,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 3780,
											"end": 3873,
											"name": "tag",
											"source": 37,
											"value": "113"
										},
										{
											"begin": 3780,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 3893,
											"end": 3896,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 3889,
											"end": 3901,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 3882,
											"end": 3901,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 3882,
											"end": 3901,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 3541,
											"end": 3907,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 3541,
											"end": 3907,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 3541,
											"end": 3907,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 3541,
											"end": 3907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 3913,
											"end": 4332,
											"name": "tag",
											"source": 37,
											"value": "35"
										},
										{
											"begin": 3913,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4079,
											"end": 4083,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 4117,
											"end": 4119,
											"name": "PUSH",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 4106,
											"end": 4115,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 4094,
											"end": 4120,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 4094,
											"end": 4120,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 4166,
											"end": 4175,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 4160,
											"end": 4164,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 4156,
											"end": 4176,
											"name": "SUB",
											"source": 37
										},
										{
											"begin": 4152,
											"end": 4153,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4150,
											"name": "DUP4",
											"source": 37
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 4130,
											"end": 4177,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 4194,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "115"
										},
										{
											"begin": 4320,
											"end": 4324,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 4194,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "63"
										},
										{
											"begin": 4194,
											"end": 4325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 4194,
											"end": 4325,
											"name": "tag",
											"source": 37,
											"value": "115"
										},
										{
											"begin": 4194,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4186,
											"end": 4325,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 4186,
											"end": 4325,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 3913,
											"end": 4332,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 3913,
											"end": 4332,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 3913,
											"end": 4332,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 3913,
											"end": 4332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 4338,
											"end": 4518,
											"name": "tag",
											"source": 37,
											"value": "64"
										},
										{
											"begin": 4338,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4386,
											"end": 4463,
											"name": "PUSH",
											"source": 37,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4383,
											"end": 4384,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4464,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 4483,
											"end": 4487,
											"name": "PUSH",
											"source": 37,
											"value": "11"
										},
										{
											"begin": 4480,
											"end": 4481,
											"name": "PUSH",
											"source": 37,
											"value": "4"
										},
										{
											"begin": 4473,
											"end": 4488,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 4507,
											"end": 4511,
											"name": "PUSH",
											"source": 37,
											"value": "24"
										},
										{
											"begin": 4504,
											"end": 4505,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 4497,
											"end": 4512,
											"name": "REVERT",
											"source": 37
										},
										{
											"begin": 4524,
											"end": 4799,
											"name": "tag",
											"source": 37,
											"value": "38"
										},
										{
											"begin": 4524,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4563,
											"end": 4570,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 4586,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "118"
										},
										{
											"begin": 4603,
											"end": 4604,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 4586,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "55"
										},
										{
											"begin": 4586,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 4586,
											"end": 4605,
											"name": "tag",
											"source": 37,
											"value": "118"
										},
										{
											"begin": 4586,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4581,
											"end": 4605,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 4581,
											"end": 4605,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 4619,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "119"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "DUP4",
											"source": 37
										},
										{
											"begin": 4619,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "55"
										},
										{
											"begin": 4619,
											"end": 4638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 4619,
											"end": 4638,
											"name": "tag",
											"source": 37,
											"value": "119"
										},
										{
											"begin": 4619,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4614,
											"end": 4638,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 4614,
											"end": 4638,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 4670,
											"end": 4671,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 4666,
											"end": 4675,
											"name": "MUL",
											"source": 37
										},
										{
											"begin": 4695,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "120"
										},
										{
											"begin": 4712,
											"end": 4723,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 4695,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "55"
										},
										{
											"begin": 4695,
											"end": 4724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 4695,
											"end": 4724,
											"name": "tag",
											"source": 37,
											"value": "120"
										},
										{
											"begin": 4695,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4684,
											"end": 4724,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 4684,
											"end": 4724,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 4756,
											"end": 4767,
											"name": "DUP1",
											"source": 37
										},
										{
											"begin": 4747,
											"end": 4754,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 4744,
											"end": 4768,
											"name": "EQ",
											"source": 37
										},
										{
											"begin": 4734,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "121"
										},
										{
											"begin": 4734,
											"end": 4792,
											"name": "JUMPI",
											"source": 37
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "122"
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "64"
										},
										{
											"begin": 4772,
											"end": 4790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "tag",
											"source": 37,
											"value": "122"
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4734,
											"end": 4792,
											"name": "tag",
											"source": 37,
											"value": "121"
										},
										{
											"begin": 4734,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4571,
											"end": 4799,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 4524,
											"end": 4799,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 4524,
											"end": 4799,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 4524,
											"end": 4799,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 4524,
											"end": 4799,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 4524,
											"end": 4799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 4805,
											"end": 4927,
											"name": "tag",
											"source": 37,
											"value": "65"
										},
										{
											"begin": 4805,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4878,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "124"
										},
										{
											"begin": 4896,
											"end": 4901,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 4878,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "59"
										},
										{
											"begin": 4878,
											"end": 4902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 4878,
											"end": 4902,
											"name": "tag",
											"source": 37,
											"value": "124"
										},
										{
											"begin": 4878,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4871,
											"end": 4876,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 4868,
											"end": 4903,
											"name": "EQ",
											"source": 37
										},
										{
											"begin": 4858,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "125"
										},
										{
											"begin": 4858,
											"end": 4921,
											"name": "JUMPI",
											"source": 37
										},
										{
											"begin": 4917,
											"end": 4918,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4915,
											"name": "DUP1",
											"source": 37
										},
										{
											"begin": 4907,
											"end": 4919,
											"name": "REVERT",
											"source": 37
										},
										{
											"begin": 4858,
											"end": 4921,
											"name": "tag",
											"source": 37,
											"value": "125"
										},
										{
											"begin": 4858,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4805,
											"end": 4927,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 4805,
											"end": 4927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 4933,
											"end": 5076,
											"name": "tag",
											"source": 37,
											"value": "66"
										},
										{
											"begin": 4933,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4990,
											"end": 4995,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5027,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 5015,
											"end": 5028,
											"name": "MLOAD",
											"source": 37
										},
										{
											"begin": 5006,
											"end": 5028,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 5006,
											"end": 5028,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 5037,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "127"
										},
										{
											"begin": 5064,
											"end": 5069,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 5037,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "65"
										},
										{
											"begin": 5037,
											"end": 5070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 5037,
											"end": 5070,
											"name": "tag",
											"source": 37,
											"value": "127"
										},
										{
											"begin": 5037,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 4933,
											"end": 5076,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 4933,
											"end": 5076,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 4933,
											"end": 5076,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 4933,
											"end": 5076,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 4933,
											"end": 5076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 5082,
											"end": 5433,
											"name": "tag",
											"source": 37,
											"value": "43"
										},
										{
											"begin": 5082,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 5152,
											"end": 5158,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5203,
											"name": "PUSH",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 5189,
											"end": 5198,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 5180,
											"end": 5187,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 5176,
											"end": 5199,
											"name": "SUB",
											"source": 37
										},
										{
											"begin": 5172,
											"end": 5204,
											"name": "SLT",
											"source": 37
										},
										{
											"begin": 5169,
											"end": 5288,
											"name": "ISZERO",
											"source": 37
										},
										{
											"begin": 5169,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "129"
										},
										{
											"begin": 5169,
											"end": 5288,
											"name": "JUMPI",
											"source": 37
										},
										{
											"begin": 5207,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "130"
										},
										{
											"begin": 5207,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "53"
										},
										{
											"begin": 5207,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 5207,
											"end": 5286,
											"name": "tag",
											"source": 37,
											"value": "130"
										},
										{
											"begin": 5207,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 5169,
											"end": 5288,
											"name": "tag",
											"source": 37,
											"value": "129"
										},
										{
											"begin": 5169,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 5327,
											"end": 5328,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "131"
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 5399,
											"end": 5405,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 5388,
											"end": 5397,
											"name": "DUP6",
											"source": 37
										},
										{
											"begin": 5384,
											"end": 5406,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 5352,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "66"
										},
										{
											"begin": 5352,
											"end": 5416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 5352,
											"end": 5416,
											"name": "tag",
											"source": 37,
											"value": "131"
										},
										{
											"begin": 5352,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 5342,
											"end": 5416,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 5342,
											"end": 5416,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 5298,
											"end": 5426,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 5082,
											"end": 5433,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 5082,
											"end": 5433,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 5082,
											"end": 5433,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 5082,
											"end": 5433,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 5082,
											"end": 5433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UNISWAP_POOLMANAGER_SEPOLIA()": "74667906",
							"USDC()": "89a30271",
							"USDC_ADDRESS()": "bb09d9b7",
							"USDC_ADDRESS_SEPOLIA()": "4bf2e99b",
							"executeSwap(uint16)": "ca43b4fc",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"USDC_ADDRESS\",\"type\":\"address\"}],\"name\":\"ContractDeployed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UNISWAP_POOLMANAGER_SEPOLIA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_ADDRESS_SEPOLIA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"balanceOfETH\",\"type\":\"uint16\"}],\"name\":\"executeSwap\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"gainOfUSDC\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"1\\u3001 \\u4ec0\\u9ebc\\u662f\\u91cd\\u5165\\u653b\\u64ca? \\u5982\\u4f55\\u9810\\u9632? \\u91cd\\u5165\\u653b\\u64ca\\uff08Reentrancy Attack\\uff09\\uff1a\\u91cd\\u5165\\u653b\\u64ca\\u767c\\u751f\\u5728\\u4e00\\u500b\\u5916\\u90e8\\u547c\\u53eb\\uff08External Call\\uff09\\u5728\\u5b8c\\u6210\\u524d\\uff0c\\u56de\\u8abf\\u5230\\u539f\\u5408\\u7d04\\uff0c\\u9020\\u6210\\u60e1\\u610f\\u4f7f\\u7528\\u8005\\u91cd\\u8907\\u63d0\\u6b3e\\u6216\\u5176\\u4ed6\\u975e\\u9810\\u671f\\u7684\\u884c\\u70ba\\u3002 \\u9810\\u9632\\u65b9\\u6cd5\\uff1a\\u5728\\u57f7\\u884c\\u4efb\\u4f55\\u64cd\\u4f5c\\u4e4b\\u524d\\uff0c\\u5148\\u6aa2\\u67e5\\u6240\\u6709\\u524d\\u63d0\\u689d\\u4ef6\\u3002\\u66f4\\u65b0\\u5408\\u7d04\\u7684\\u5167\\u90e8\\u72c0\\u614b\\u8b8a\\u6578\\u5fc5\\u9808\\u5728\\u4efb\\u4f55\\u5916\\u90e8\\u547c\\u53eb\\u4e4b\\u524d\\u5b8c\\u6210\\u3002 2\\u3001 \\u4e09\\u7a2e send Ether \\u7684\\u65b9\\u5f0f\\u5177\\u9ad4\\u5dee\\u7570\\u70ba\\u4f55? transfer()\\uff1a\\u5982\\u679c\\u767c\\u9001\\u5931\\u6557\\u6703\\u81ea\\u52d5\\u9084\\u539f\\uff08revert\\uff09\\u6574\\u500b\\u4ea4\\u6613\\u3002 send()\\uff1a\\u5982\\u679c\\u767c\\u9001\\u5931\\u6557\\uff0c\\u4e0d\\u6703\\u81ea\\u52d5\\u9084\\u539f\\u4ea4\\u6613\\uff0c\\u800c\\u662f\\u8fd4\\u56de false\\uff0c\\u6240\\u4ee5\\u9700\\u8981\\u81ea\\u884c\\u6aa2\\u67e5\\u8fd4\\u56de\\u503c\\u4f86\\u8655\\u7406\\u767c\\u9001\\u5931\\u6557\\u7684\\u60c5\\u6cc1\\u3002 call()\\uff1a\\u5982\\u679c\\u547c\\u53eb\\u5931\\u6557\\uff0c\\u4e0d\\u6703\\u81ea\\u52d5\\u9084\\u539f\\u4ea4\\u6613\\uff0c\\u53ea\\u6703\\u5c07 success \\u8a2d\\u5b9a\\u70ba false\\uff0c\\u56e0\\u6b64\\u5fc5\\u9808\\u81ea\\u884c\\u6aa2\\u67e5 success \\u7684\\u8fd4\\u56de\\u503c\\u3002\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Transaction.sol\":\"Transaction\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@uniswap/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"@uniswap/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"@uniswap/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"@uniswap/v4-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e\",\"dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi\"]},\"@uniswap/v4-core/src/libraries/CurrencyReserves.sol\":{\"keccak256\":\"0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725\",\"dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/Lock.sol\":{\"keccak256\":\"0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c\",\"dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF\"]},\"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol\":{\"keccak256\":\"0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59\",\"dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/libraries/TickMath.sol\":{\"keccak256\":\"0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70\",\"dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva\"]},\"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol\":{\"keccak256\":\"0x7d1e0875747bd89b32c25f1a48da2766e5f4aff1f671ad5f3c0c07ebbbcb946a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76cfeb1cb60595b41ecc51c8a12fb4bf63a7fc733d0b1a2e3adb55abeb1f9d5\",\"dweb:/ipfs/Qmb8oX7DtsRpw3tTtdWZwGhauj1evq43d3PLwe4nSDAKkV\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"contracts/Transaction.sol\":{\"keccak256\":\"0xcabe2ad299cd3fcdf1a420010201e74a1f4042eef9427e22a385559a5cf6aeab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b604ca819379f585a8eeed27b29f8bee7914d33517c06b6acb038c37aff81b8\",\"dweb:/ipfs/QmdpFH6FkoQtHkxo4mpmZ78CY3B1zg5wQdx9pPiz6xLhgN\"]},\"https://github.com/Uniswap/v4-periphery/src/V4Router.sol\":{\"keccak256\":\"0x492c743b65a9fc0e54c2a20b13c7d0230e93d4d5b41fba6aaf52f911dfdacf83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abcf73253c19bd5539480cc10f4c15263059fe0ebdfda9c12fae76612e8006e8\",\"dweb:/ipfs/QmP81WPqTM4x1E9RVgoaGaa6zC1PgfEZyvRXfX43MS9yEH\"]},\"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol\":{\"keccak256\":\"0xc9ed11618c4d82c5b723841a7d8eaf61600118c593e01e9929a193ecdb1ad63a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b048aa814ef6bdeec79eba67aa765186d74b58f98f4b2be913cc291a15986169\",\"dweb:/ipfs/QmRoFpoCG7DYJtc3uewYwwj2Eb4bXLrefgV3t8vekY3XWg\"]},\"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol\":{\"keccak256\":\"0x94a2da2be5c924df65a8e1e29f585bbe4c37777fedd43b45989c66d509a4a83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42bba590f6e817fd56328b74ae99bfdc4df57386d0a69ee22b9108341953ed36\",\"dweb:/ipfs/QmdusastK7FWYouLz9gvV5J3z8MQbNKLJNNHTrc1vi7DWw\"]},\"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x1867c9fa2f9b4fa73bab0fcdc9d19ccef4eeac552273d8b84a170cd1cc90350a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af2d699b439e13b599632fddfe82718aebd41055fba7c075f186675c588d1337\",\"dweb:/ipfs/Qmc111gckSKb9aESn3wRFLeLiS4KGujaUcaYJgRnCRfwQU\"]},\"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol\":{\"keccak256\":\"0xd78b583df1b9ee06d58e83b84fc9f08971389b34dd34bc13db072e0c13c710da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0a47f4bcd6060c4462153b9a7c52a60a460ace91acb6ddd5492eab28ec26173\",\"dweb:/ipfs/QmdRCTRS1dhFjWEy6z577j4xz9J5HPfHBwcNzAic8G59oT\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol\":{\"keccak256\":\"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341\",\"dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol\":{\"keccak256\":\"0xcc7d4e3f2fde34cf1ad9f05a8e43977e04d19624f71eb8a8c295feaf64b362a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e02044b5e19cc9ca24d23f55667142fde6daefba66408b56c4f620b625fc189\",\"dweb:/ipfs/QmUqWdRBqWi2tZkNAPhzLZbknP26TZbD8iRQMd3fdZGFgi\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol\":{\"keccak256\":\"0xc4133fae25e61cc2447d7331729f6035322d7c1fe26b39b225422bf98cc63459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c24ff8428504e973e947a059f96289a66c520cd7f8ef47a3224f9cb6abdaf25\",\"dweb:/ipfs/QmVqxYnngWXXcCiuTC143vTEJrjZK5NXWB92pjvVbuJBQ5\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol\":{\"keccak256\":\"0x3d6f0e5b4a7b1e60bad93e73dce5db67fb66bebef11c31ed8355014a79aa03b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dfa42e24b1b5c7f66e75304ab034fbb6768518eb2410ccfff8b3defdd1658f2\",\"dweb:/ipfs/QmQQ7fud9mmv7PEWPAQiNzeZhNkWf28Z6nCHc2e6WJFfa7\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol\":{\"keccak256\":\"0x8efd4b8b289177ee27e557d9d0a5a9f973d66fe1eb1ef8959d316b11987ca830\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07fe35f194eb99465028f0546359befea574d844da53767d32f22b233c3bcc98\",\"dweb:/ipfs/Qmc19631uFxABTHAbGrDrroexi9GdyxWntaum1v8npPYz5\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol\":{\"keccak256\":\"0x37ebf99f5d086d9d9f6e7cecbf4d62167f47c63c30248cfcb921e828f0d7a359\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4f8e68a66bb6c166d72cdba6ed6fb83a93f713b79c2c572e8058084eb90ab6c\",\"dweb:/ipfs/QmY32FxtSBRf9PJzNUVzXqFY4i2ApTPHTUMpCBGovd2zo3\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol\":{\"keccak256\":\"0x26df49e13fb5410fd4db253cca877dfdfb3a1ba03e394d054c0e0514a88a56e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72a0c98c52171708f332f83d517deeb97fdd50ecf28f2510e1866e54593a6ff8\",\"dweb:/ipfs/QmY4LiDUfSKGj86nML7B6a8euiPciUqwYehasAyAVnMCHq\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol\":{\"keccak256\":\"0xbbd79ffefe045f025263e389539021266fb4d371463aefba405e1ff1d3fcf9bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d1c47b81a01218be46ee79f0a8837095479b94dc5cfd18abbf2006709f0ea89\",\"dweb:/ipfs/QmRb6CQ13Zp7f3WF5jbZtsF2szhxpPgcuWs9mjwQXxzqtg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2595,
								"contract": "contracts/Transaction.sol:Transaction",
								"label": "USDC",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 2603,
								"contract": "contracts/Transaction.sol:Transaction",
								"label": "USDC_ADDRESS",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 2605,
								"contract": "contracts/Transaction.sol:Transaction",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "1、 什麼是重入攻擊? 如何預防? 重入攻擊（Reentrancy Attack）：重入攻擊發生在一個外部呼叫（External Call）在完成前，回調到原合約，造成惡意使用者重複提款或其他非預期的行為。 預防方法：在執行任何操作之前，先檢查所有前提條件。更新合約的內部狀態變數必須在任何外部呼叫之前完成。 2、 三種 send Ether 的方式具體差異為何? transfer()：如果發送失敗會自動還原（revert）整個交易。 send()：如果發送失敗，不會自動還原交易，而是返回 false，所以需要自行檢查返回值來處理發送失敗的情況。 call()：如果呼叫失敗，不會自動還原交易，只會將 success 設定為 false，因此必須自行檢查 success 的返回值。",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v4-periphery/src/V4Router.sol": {
				"V4Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "DeltaNotNegative",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "DeltaNotPositive",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InputLengthMismatch",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidBips",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotPoolManager",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "action",
									"type": "uint256"
								}
							],
							"name": "UnsupportedAction",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "minAmountOutReceived",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountReceived",
									"type": "uint256"
								}
							],
							"name": "V4TooLittleReceived",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxAmountInRequested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountRequested",
									"type": "uint256"
								}
							],
							"name": "V4TooMuchRequested",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "msgSender",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolManager",
							"outputs": [
								{
									"internalType": "contract IPoolManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "unlockCallback",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "the entry point to executing actions in this contract is calling `BaseActionsRouter._executeActions` An inheriting contract should call _executeActions at the point that they wish actions to be executed",
						"kind": "dev",
						"methods": {
							"msgSender()": {
								"details": "The other context functions, _msgData and _msgValue, are not supported by this contract In many contracts this will be the address that calls the initial entry point that calls `_executeActions` `msg.sender` shouldn't be used, as this will be the v4 pool manager contract that calls `unlockCallback` If using ReentrancyLock.sol, this function can return _getLocker()"
							},
							"unlockCallback(bytes)": {
								"details": "We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.",
								"params": {
									"data": "The data that was passed to the call to unlock"
								},
								"returns": {
									"_0": "Any data that you want to be returned from the unlock call"
								}
							}
						},
						"title": "UniswapV4Router",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"msgSender()": "d737d0c7",
							"poolManager()": "dc4c90d3",
							"unlockCallback(bytes)": "91dd7346"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"DeltaNotNegative\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"DeltaNotPositive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBips\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"action\",\"type\":\"uint256\"}],\"name\":\"UnsupportedAction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minAmountOutReceived\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"V4TooLittleReceived\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmountInRequested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountRequested\",\"type\":\"uint256\"}],\"name\":\"V4TooMuchRequested\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"msgSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlockCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"the entry point to executing actions in this contract is calling `BaseActionsRouter._executeActions` An inheriting contract should call _executeActions at the point that they wish actions to be executed\",\"kind\":\"dev\",\"methods\":{\"msgSender()\":{\"details\":\"The other context functions, _msgData and _msgValue, are not supported by this contract In many contracts this will be the address that calls the initial entry point that calls `_executeActions` `msg.sender` shouldn't be used, as this will be the v4 pool manager contract that calls `unlockCallback` If using ReentrancyLock.sol, this function can return _getLocker()\"},\"unlockCallback(bytes)\":{\"details\":\"We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.\",\"params\":{\"data\":\"The data that was passed to the call to unlock\"},\"returns\":{\"_0\":\"Any data that you want to be returned from the unlock call\"}}},\"title\":\"UniswapV4Router\",\"version\":1},\"userdoc\":{\"errors\":{\"DeltaNotNegative(address)\":[{\"notice\":\"Emitted trying to take a negative delta.\"}],\"DeltaNotPositive(address)\":[{\"notice\":\"Emitted trying to settle a positive delta.\"}],\"InputLengthMismatch()\":[{\"notice\":\"emitted when different numbers of parameters and actions are provided\"}],\"InsufficientBalance()\":[{\"notice\":\"Emitted when the contract does not have enough balance to wrap or unwrap.\"}],\"InvalidBips()\":[{\"notice\":\"emitted when an invalid percentage is provided\"}],\"NotPoolManager()\":[{\"notice\":\"Thrown when the caller is not PoolManager\"}],\"UnsupportedAction(uint256)\":[{\"notice\":\"emitted when an inheriting contract does not support an action\"}],\"V4TooLittleReceived(uint256,uint256)\":[{\"notice\":\"Emitted when an exactInput swap does not receive its minAmountOut\"}],\"V4TooMuchRequested(uint256,uint256)\":[{\"notice\":\"Emitted when an exactOutput is asked for more than its maxAmountIn\"}]},\"kind\":\"user\",\"methods\":{\"msgSender()\":{\"notice\":\"function that returns address considered executor of the actions\"},\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"},\"unlockCallback(bytes)\":{\"notice\":\"Called by the pool manager on `msg.sender` when the manager is unlocked\"}},\"notice\":\"Abstract contract that contains all internal logic needed for routing through Uniswap v4 pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v4-periphery/src/V4Router.sol\":\"V4Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"@uniswap/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"@uniswap/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"@uniswap/v4-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e\",\"dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi\"]},\"@uniswap/v4-core/src/libraries/CurrencyReserves.sol\":{\"keccak256\":\"0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725\",\"dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/Lock.sol\":{\"keccak256\":\"0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c\",\"dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF\"]},\"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol\":{\"keccak256\":\"0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59\",\"dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/libraries/TickMath.sol\":{\"keccak256\":\"0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70\",\"dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva\"]},\"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol\":{\"keccak256\":\"0x7d1e0875747bd89b32c25f1a48da2766e5f4aff1f671ad5f3c0c07ebbbcb946a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76cfeb1cb60595b41ecc51c8a12fb4bf63a7fc733d0b1a2e3adb55abeb1f9d5\",\"dweb:/ipfs/Qmb8oX7DtsRpw3tTtdWZwGhauj1evq43d3PLwe4nSDAKkV\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"https://github.com/Uniswap/v4-periphery/src/V4Router.sol\":{\"keccak256\":\"0x492c743b65a9fc0e54c2a20b13c7d0230e93d4d5b41fba6aaf52f911dfdacf83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abcf73253c19bd5539480cc10f4c15263059fe0ebdfda9c12fae76612e8006e8\",\"dweb:/ipfs/QmP81WPqTM4x1E9RVgoaGaa6zC1PgfEZyvRXfX43MS9yEH\"]},\"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol\":{\"keccak256\":\"0xc9ed11618c4d82c5b723841a7d8eaf61600118c593e01e9929a193ecdb1ad63a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b048aa814ef6bdeec79eba67aa765186d74b58f98f4b2be913cc291a15986169\",\"dweb:/ipfs/QmRoFpoCG7DYJtc3uewYwwj2Eb4bXLrefgV3t8vekY3XWg\"]},\"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol\":{\"keccak256\":\"0x94a2da2be5c924df65a8e1e29f585bbe4c37777fedd43b45989c66d509a4a83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42bba590f6e817fd56328b74ae99bfdc4df57386d0a69ee22b9108341953ed36\",\"dweb:/ipfs/QmdusastK7FWYouLz9gvV5J3z8MQbNKLJNNHTrc1vi7DWw\"]},\"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x1867c9fa2f9b4fa73bab0fcdc9d19ccef4eeac552273d8b84a170cd1cc90350a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af2d699b439e13b599632fddfe82718aebd41055fba7c075f186675c588d1337\",\"dweb:/ipfs/Qmc111gckSKb9aESn3wRFLeLiS4KGujaUcaYJgRnCRfwQU\"]},\"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol\":{\"keccak256\":\"0xd78b583df1b9ee06d58e83b84fc9f08971389b34dd34bc13db072e0c13c710da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0a47f4bcd6060c4462153b9a7c52a60a460ace91acb6ddd5492eab28ec26173\",\"dweb:/ipfs/QmdRCTRS1dhFjWEy6z577j4xz9J5HPfHBwcNzAic8G59oT\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol\":{\"keccak256\":\"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341\",\"dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol\":{\"keccak256\":\"0xcc7d4e3f2fde34cf1ad9f05a8e43977e04d19624f71eb8a8c295feaf64b362a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e02044b5e19cc9ca24d23f55667142fde6daefba66408b56c4f620b625fc189\",\"dweb:/ipfs/QmUqWdRBqWi2tZkNAPhzLZbknP26TZbD8iRQMd3fdZGFgi\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol\":{\"keccak256\":\"0xc4133fae25e61cc2447d7331729f6035322d7c1fe26b39b225422bf98cc63459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c24ff8428504e973e947a059f96289a66c520cd7f8ef47a3224f9cb6abdaf25\",\"dweb:/ipfs/QmVqxYnngWXXcCiuTC143vTEJrjZK5NXWB92pjvVbuJBQ5\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol\":{\"keccak256\":\"0x3d6f0e5b4a7b1e60bad93e73dce5db67fb66bebef11c31ed8355014a79aa03b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dfa42e24b1b5c7f66e75304ab034fbb6768518eb2410ccfff8b3defdd1658f2\",\"dweb:/ipfs/QmQQ7fud9mmv7PEWPAQiNzeZhNkWf28Z6nCHc2e6WJFfa7\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol\":{\"keccak256\":\"0x8efd4b8b289177ee27e557d9d0a5a9f973d66fe1eb1ef8959d316b11987ca830\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07fe35f194eb99465028f0546359befea574d844da53767d32f22b233c3bcc98\",\"dweb:/ipfs/Qmc19631uFxABTHAbGrDrroexi9GdyxWntaum1v8npPYz5\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol\":{\"keccak256\":\"0x37ebf99f5d086d9d9f6e7cecbf4d62167f47c63c30248cfcb921e828f0d7a359\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4f8e68a66bb6c166d72cdba6ed6fb83a93f713b79c2c572e8058084eb90ab6c\",\"dweb:/ipfs/QmY32FxtSBRf9PJzNUVzXqFY4i2ApTPHTUMpCBGovd2zo3\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol\":{\"keccak256\":\"0x26df49e13fb5410fd4db253cca877dfdfb3a1ba03e394d054c0e0514a88a56e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72a0c98c52171708f332f83d517deeb97fdd50ecf28f2510e1866e54593a6ff8\",\"dweb:/ipfs/QmY4LiDUfSKGj86nML7B6a8euiPciUqwYehasAyAVnMCHq\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol\":{\"keccak256\":\"0xbbd79ffefe045f025263e389539021266fb4d371463aefba405e1ff1d3fcf9bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d1c47b81a01218be46ee79f0a8837095479b94dc5cfd18abbf2006709f0ea89\",\"dweb:/ipfs/QmRb6CQ13Zp7f3WF5jbZtsF2szhxpPgcuWs9mjwQXxzqtg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"DeltaNotNegative(address)": [
								{
									"notice": "Emitted trying to take a negative delta."
								}
							],
							"DeltaNotPositive(address)": [
								{
									"notice": "Emitted trying to settle a positive delta."
								}
							],
							"InputLengthMismatch()": [
								{
									"notice": "emitted when different numbers of parameters and actions are provided"
								}
							],
							"InsufficientBalance()": [
								{
									"notice": "Emitted when the contract does not have enough balance to wrap or unwrap."
								}
							],
							"InvalidBips()": [
								{
									"notice": "emitted when an invalid percentage is provided"
								}
							],
							"NotPoolManager()": [
								{
									"notice": "Thrown when the caller is not PoolManager"
								}
							],
							"UnsupportedAction(uint256)": [
								{
									"notice": "emitted when an inheriting contract does not support an action"
								}
							],
							"V4TooLittleReceived(uint256,uint256)": [
								{
									"notice": "Emitted when an exactInput swap does not receive its minAmountOut"
								}
							],
							"V4TooMuchRequested(uint256,uint256)": [
								{
									"notice": "Emitted when an exactOutput is asked for more than its maxAmountIn"
								}
							]
						},
						"kind": "user",
						"methods": {
							"msgSender()": {
								"notice": "function that returns address considered executor of the actions"
							},
							"poolManager()": {
								"notice": "The Uniswap v4 PoolManager contract"
							},
							"unlockCallback(bytes)": {
								"notice": "Called by the pool manager on `msg.sender` when the manager is unlocked"
							}
						},
						"notice": "Abstract contract that contains all internal logic needed for routing through Uniswap v4 pools",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol": {
				"BaseActionsRouter": {
					"abi": [
						{
							"inputs": [],
							"name": "InputLengthMismatch",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotPoolManager",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "action",
									"type": "uint256"
								}
							],
							"name": "UnsupportedAction",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "msgSender",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolManager",
							"outputs": [
								{
									"internalType": "contract IPoolManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "unlockCallback",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Suggested uint256 action values are defined in Actions.sol, however any definition can be used",
						"kind": "dev",
						"methods": {
							"msgSender()": {
								"details": "The other context functions, _msgData and _msgValue, are not supported by this contract In many contracts this will be the address that calls the initial entry point that calls `_executeActions` `msg.sender` shouldn't be used, as this will be the v4 pool manager contract that calls `unlockCallback` If using ReentrancyLock.sol, this function can return _getLocker()"
							},
							"unlockCallback(bytes)": {
								"details": "We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.",
								"params": {
									"data": "The data that was passed to the call to unlock"
								},
								"returns": {
									"_0": "Any data that you want to be returned from the unlock call"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"msgSender()": "d737d0c7",
							"poolManager()": "dc4c90d3",
							"unlockCallback(bytes)": "91dd7346"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InputLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"action\",\"type\":\"uint256\"}],\"name\":\"UnsupportedAction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"msgSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlockCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Suggested uint256 action values are defined in Actions.sol, however any definition can be used\",\"kind\":\"dev\",\"methods\":{\"msgSender()\":{\"details\":\"The other context functions, _msgData and _msgValue, are not supported by this contract In many contracts this will be the address that calls the initial entry point that calls `_executeActions` `msg.sender` shouldn't be used, as this will be the v4 pool manager contract that calls `unlockCallback` If using ReentrancyLock.sol, this function can return _getLocker()\"},\"unlockCallback(bytes)\":{\"details\":\"We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.\",\"params\":{\"data\":\"The data that was passed to the call to unlock\"},\"returns\":{\"_0\":\"Any data that you want to be returned from the unlock call\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InputLengthMismatch()\":[{\"notice\":\"emitted when different numbers of parameters and actions are provided\"}],\"NotPoolManager()\":[{\"notice\":\"Thrown when the caller is not PoolManager\"}],\"UnsupportedAction(uint256)\":[{\"notice\":\"emitted when an inheriting contract does not support an action\"}]},\"kind\":\"user\",\"methods\":{\"msgSender()\":{\"notice\":\"function that returns address considered executor of the actions\"},\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"},\"unlockCallback(bytes)\":{\"notice\":\"Called by the pool manager on `msg.sender` when the manager is unlocked\"}},\"notice\":\"Abstract contract for performing a combination of actions on Uniswap v4.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol\":\"BaseActionsRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"@uniswap/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"@uniswap/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol\":{\"keccak256\":\"0xc9ed11618c4d82c5b723841a7d8eaf61600118c593e01e9929a193ecdb1ad63a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b048aa814ef6bdeec79eba67aa765186d74b58f98f4b2be913cc291a15986169\",\"dweb:/ipfs/QmRoFpoCG7DYJtc3uewYwwj2Eb4bXLrefgV3t8vekY3XWg\"]},\"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x1867c9fa2f9b4fa73bab0fcdc9d19ccef4eeac552273d8b84a170cd1cc90350a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af2d699b439e13b599632fddfe82718aebd41055fba7c075f186675c588d1337\",\"dweb:/ipfs/Qmc111gckSKb9aESn3wRFLeLiS4KGujaUcaYJgRnCRfwQU\"]},\"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol\":{\"keccak256\":\"0xd78b583df1b9ee06d58e83b84fc9f08971389b34dd34bc13db072e0c13c710da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0a47f4bcd6060c4462153b9a7c52a60a460ace91acb6ddd5492eab28ec26173\",\"dweb:/ipfs/QmdRCTRS1dhFjWEy6z577j4xz9J5HPfHBwcNzAic8G59oT\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol\":{\"keccak256\":\"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341\",\"dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol\":{\"keccak256\":\"0xcc7d4e3f2fde34cf1ad9f05a8e43977e04d19624f71eb8a8c295feaf64b362a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e02044b5e19cc9ca24d23f55667142fde6daefba66408b56c4f620b625fc189\",\"dweb:/ipfs/QmUqWdRBqWi2tZkNAPhzLZbknP26TZbD8iRQMd3fdZGFgi\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol\":{\"keccak256\":\"0xc4133fae25e61cc2447d7331729f6035322d7c1fe26b39b225422bf98cc63459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c24ff8428504e973e947a059f96289a66c520cd7f8ef47a3224f9cb6abdaf25\",\"dweb:/ipfs/QmVqxYnngWXXcCiuTC143vTEJrjZK5NXWB92pjvVbuJBQ5\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol\":{\"keccak256\":\"0x3d6f0e5b4a7b1e60bad93e73dce5db67fb66bebef11c31ed8355014a79aa03b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dfa42e24b1b5c7f66e75304ab034fbb6768518eb2410ccfff8b3defdd1658f2\",\"dweb:/ipfs/QmQQ7fud9mmv7PEWPAQiNzeZhNkWf28Z6nCHc2e6WJFfa7\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol\":{\"keccak256\":\"0x26df49e13fb5410fd4db253cca877dfdfb3a1ba03e394d054c0e0514a88a56e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72a0c98c52171708f332f83d517deeb97fdd50ecf28f2510e1866e54593a6ff8\",\"dweb:/ipfs/QmY4LiDUfSKGj86nML7B6a8euiPciUqwYehasAyAVnMCHq\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol\":{\"keccak256\":\"0xbbd79ffefe045f025263e389539021266fb4d371463aefba405e1ff1d3fcf9bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d1c47b81a01218be46ee79f0a8837095479b94dc5cfd18abbf2006709f0ea89\",\"dweb:/ipfs/QmRb6CQ13Zp7f3WF5jbZtsF2szhxpPgcuWs9mjwQXxzqtg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"InputLengthMismatch()": [
								{
									"notice": "emitted when different numbers of parameters and actions are provided"
								}
							],
							"NotPoolManager()": [
								{
									"notice": "Thrown when the caller is not PoolManager"
								}
							],
							"UnsupportedAction(uint256)": [
								{
									"notice": "emitted when an inheriting contract does not support an action"
								}
							]
						},
						"kind": "user",
						"methods": {
							"msgSender()": {
								"notice": "function that returns address considered executor of the actions"
							},
							"poolManager()": {
								"notice": "The Uniswap v4 PoolManager contract"
							},
							"unlockCallback(bytes)": {
								"notice": "Called by the pool manager on `msg.sender` when the manager is unlocked"
							}
						},
						"notice": "Abstract contract for performing a combination of actions on Uniswap v4.",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol": {
				"DeltaResolver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "DeltaNotNegative",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "DeltaNotPositive",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotPoolManager",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "poolManager",
							"outputs": [
								{
									"internalType": "contract IPoolManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Note that sync() is called before any erc-20 transfer in `settle`.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"poolManager()": "dc4c90d3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"DeltaNotNegative\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"DeltaNotPositive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Note that sync() is called before any erc-20 transfer in `settle`.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"DeltaNotNegative(address)\":[{\"notice\":\"Emitted trying to take a negative delta.\"}],\"DeltaNotPositive(address)\":[{\"notice\":\"Emitted trying to settle a positive delta.\"}],\"InsufficientBalance()\":[{\"notice\":\"Emitted when the contract does not have enough balance to wrap or unwrap.\"}],\"NotPoolManager()\":[{\"notice\":\"Thrown when the caller is not PoolManager\"}]},\"kind\":\"user\",\"methods\":{\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"}},\"notice\":\"Abstract contract used to sync, send, and settle funds to the pool manager\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol\":\"DeltaResolver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"@uniswap/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"@uniswap/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"@uniswap/v4-core/src/libraries/CurrencyReserves.sol\":{\"keccak256\":\"0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725\",\"dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/Lock.sol\":{\"keccak256\":\"0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c\",\"dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF\"]},\"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol\":{\"keccak256\":\"0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59\",\"dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol\":{\"keccak256\":\"0x7d1e0875747bd89b32c25f1a48da2766e5f4aff1f671ad5f3c0c07ebbbcb946a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76cfeb1cb60595b41ecc51c8a12fb4bf63a7fc733d0b1a2e3adb55abeb1f9d5\",\"dweb:/ipfs/Qmb8oX7DtsRpw3tTtdWZwGhauj1evq43d3PLwe4nSDAKkV\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol\":{\"keccak256\":\"0x94a2da2be5c924df65a8e1e29f585bbe4c37777fedd43b45989c66d509a4a83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42bba590f6e817fd56328b74ae99bfdc4df57386d0a69ee22b9108341953ed36\",\"dweb:/ipfs/QmdusastK7FWYouLz9gvV5J3z8MQbNKLJNNHTrc1vi7DWw\"]},\"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x1867c9fa2f9b4fa73bab0fcdc9d19ccef4eeac552273d8b84a170cd1cc90350a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af2d699b439e13b599632fddfe82718aebd41055fba7c075f186675c588d1337\",\"dweb:/ipfs/Qmc111gckSKb9aESn3wRFLeLiS4KGujaUcaYJgRnCRfwQU\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol\":{\"keccak256\":\"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341\",\"dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol\":{\"keccak256\":\"0x3d6f0e5b4a7b1e60bad93e73dce5db67fb66bebef11c31ed8355014a79aa03b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dfa42e24b1b5c7f66e75304ab034fbb6768518eb2410ccfff8b3defdd1658f2\",\"dweb:/ipfs/QmQQ7fud9mmv7PEWPAQiNzeZhNkWf28Z6nCHc2e6WJFfa7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"DeltaNotNegative(address)": [
								{
									"notice": "Emitted trying to take a negative delta."
								}
							],
							"DeltaNotPositive(address)": [
								{
									"notice": "Emitted trying to settle a positive delta."
								}
							],
							"InsufficientBalance()": [
								{
									"notice": "Emitted when the contract does not have enough balance to wrap or unwrap."
								}
							],
							"NotPoolManager()": [
								{
									"notice": "Thrown when the caller is not PoolManager"
								}
							]
						},
						"kind": "user",
						"methods": {
							"poolManager()": {
								"notice": "The Uniswap v4 PoolManager contract"
							}
						},
						"notice": "Abstract contract used to sync, send, and settle funds to the pool manager",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol": {
				"ImmutableState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IPoolManager",
									"name": "_poolManager",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "NotPoolManager",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "poolManager",
							"outputs": [
								{
									"internalType": "contract IPoolManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Immutable State",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":326:817  contract ImmutableState is IImmutableState {... */\n  mstore(0x40, 0xa0)\n    /* \"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":733:815  constructor(IPoolManager _poolManager) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":796:808  _poolManager */\n  dup1\n    /* \"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":782:808  poolManager = _poolManager */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":733:815  constructor(IPoolManager _poolManager) {... */\n  pop\n    /* \"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":326:817  contract ImmutableState is IImmutableState {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:684   */\ntag_12:\n    /* \"#utility.yul\":625:632   */\n  0x00\n    /* \"#utility.yul\":654:678   */\n  tag_23\n    /* \"#utility.yul\":672:677   */\n  dup3\n    /* \"#utility.yul\":654:678   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":643:678   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:684   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":690:852   */\ntag_13:\n    /* \"#utility.yul\":783:827   */\n  tag_25\n    /* \"#utility.yul\":821:826   */\n  dup2\n    /* \"#utility.yul\":783:827   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":776:781   */\n  dup2\n    /* \"#utility.yul\":773:828   */\n  eq\n    /* \"#utility.yul\":763:846   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":839:840   */\n  dup1\n    /* \"#utility.yul\":832:844   */\n  revert\n    /* \"#utility.yul\":763:846   */\ntag_26:\n    /* \"#utility.yul\":690:852   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":858:1041   */\ntag_14:\n    /* \"#utility.yul\":935:940   */\n  0x00\n    /* \"#utility.yul\":966:972   */\n  dup2\n    /* \"#utility.yul\":960:973   */\n  mload\n    /* \"#utility.yul\":951:973   */\n  swap1\n  pop\n    /* \"#utility.yul\":982:1035   */\n  tag_28\n    /* \"#utility.yul\":1029:1034   */\n  dup2\n    /* \"#utility.yul\":982:1035   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":858:1041   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1047:1438   */\ntag_3:\n    /* \"#utility.yul\":1137:1143   */\n  0x00\n    /* \"#utility.yul\":1186:1188   */\n  0x20\n    /* \"#utility.yul\":1174:1183   */\n  dup3\n    /* \"#utility.yul\":1165:1172   */\n  dup5\n    /* \"#utility.yul\":1161:1184   */\n  sub\n    /* \"#utility.yul\":1157:1189   */\n  slt\n    /* \"#utility.yul\":1154:1273   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1192:1271   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1154:1273   */\ntag_30:\n    /* \"#utility.yul\":1312:1313   */\n  0x00\n    /* \"#utility.yul\":1337:1421   */\n  tag_32\n    /* \"#utility.yul\":1413:1420   */\n  dup5\n    /* \"#utility.yul\":1404:1410   */\n  dup3\n    /* \"#utility.yul\":1393:1402   */\n  dup6\n    /* \"#utility.yul\":1389:1411   */\n  add\n    /* \"#utility.yul\":1337:1421   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1327:1421   */\n  swap2\n  pop\n    /* \"#utility.yul\":1283:1431   */\n  pop\n    /* \"#utility.yul\":1047:1438   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":326:817  contract ImmutableState is IImmutableState {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xf14514b087cc23e74ed2527995ff5c22194362108a8e70bdb7d010f7ad265d6e\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":326:817  contract ImmutableState is IImmutableState {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xdc4c90d3\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":411:452  IPoolManager public immutable poolManager */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n      immutable(\"0xf14514b087cc23e74ed2527995ff5c22194362108a8e70bdb7d010f7ad265d6e\")\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_8:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_9:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_10:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_18\n        /* \"#utility.yul\":306:340   */\n      tag_19\n        /* \"#utility.yul\":315:339   */\n      tag_20\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_8\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":306:340   */\n      tag_9\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":288:341   */\n      tag_8\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_11:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_22\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_10\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:631   */\n    tag_12:\n        /* \"#utility.yul\":555:564   */\n      0x00\n        /* \"#utility.yul\":588:625   */\n      tag_24\n        /* \"#utility.yul\":619:624   */\n      dup3\n        /* \"#utility.yul\":588:625   */\n      tag_11\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":575:625   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":637:808   */\n    tag_13:\n        /* \"#utility.yul\":744:801   */\n      tag_26\n        /* \"#utility.yul\":795:800   */\n      dup2\n        /* \"#utility.yul\":744:801   */\n      tag_12\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":739:742   */\n      dup3\n        /* \"#utility.yul\":732:802   */\n      mstore\n        /* \"#utility.yul\":637:808   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":814:1076   */\n    tag_7:\n        /* \"#utility.yul\":927:931   */\n      0x00\n        /* \"#utility.yul\":965:967   */\n      0x20\n        /* \"#utility.yul\":954:963   */\n      dup3\n        /* \"#utility.yul\":950:968   */\n      add\n        /* \"#utility.yul\":942:968   */\n      swap1\n      pop\n        /* \"#utility.yul\":978:1069   */\n      tag_28\n        /* \"#utility.yul\":1066:1067   */\n      0x00\n        /* \"#utility.yul\":1055:1064   */\n      dup4\n        /* \"#utility.yul\":1051:1068   */\n      add\n        /* \"#utility.yul\":1042:1048   */\n      dup5\n        /* \"#utility.yul\":978:1069   */\n      tag_13\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":814:1076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a39c82f1a0b0b3b0eaf81ee90cdaa546e1805730e32f7d25e7dc97d06bb483b264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3971": {
									"entryPoint": null,
									"id": 3971,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IPoolManager_$614_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IPoolManager_$614_fromMemory": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IPoolManager_$614": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IPoolManager_$614": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1441:37",
										"nodeType": "YulBlock",
										"src": "0:1441:37",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:37",
													"nodeType": "YulBlock",
													"src": "47:35:37",
													"statements": [
														{
															"nativeSrc": "57:19:37",
															"nodeType": "YulAssignment",
															"src": "57:19:37",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:37",
																		"nodeType": "YulLiteral",
																		"src": "73:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:37",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:37"
																},
																"nativeSrc": "67:9:37",
																"nodeType": "YulFunctionCall",
																"src": "67:9:37"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:37"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:37",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:37",
														"nodeType": "YulTypedName",
														"src": "40:6:37",
														"type": ""
													}
												],
												"src": "7:75:37"
											},
											{
												"body": {
													"nativeSrc": "177:28:37",
													"nodeType": "YulBlock",
													"src": "177:28:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:37",
																		"nodeType": "YulLiteral",
																		"src": "194:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:37",
																		"nodeType": "YulLiteral",
																		"src": "197:1:37",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:37"
																},
																"nativeSrc": "187:12:37",
																"nodeType": "YulFunctionCall",
																"src": "187:12:37"
															},
															"nativeSrc": "187:12:37",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:37"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:37",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:37"
											},
											{
												"body": {
													"nativeSrc": "300:28:37",
													"nodeType": "YulBlock",
													"src": "300:28:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:37",
																		"nodeType": "YulLiteral",
																		"src": "317:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:37",
																		"nodeType": "YulLiteral",
																		"src": "320:1:37",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:37"
																},
																"nativeSrc": "310:12:37",
																"nodeType": "YulFunctionCall",
																"src": "310:12:37"
															},
															"nativeSrc": "310:12:37",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:37"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:37",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:37"
											},
											{
												"body": {
													"nativeSrc": "379:81:37",
													"nodeType": "YulBlock",
													"src": "379:81:37",
													"statements": [
														{
															"nativeSrc": "389:65:37",
															"nodeType": "YulAssignment",
															"src": "389:65:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:37",
																		"nodeType": "YulLiteral",
																		"src": "411:42:37",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:37"
																},
																"nativeSrc": "400:54:37",
																"nodeType": "YulFunctionCall",
																"src": "400:54:37"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:37"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:37",
														"nodeType": "YulTypedName",
														"src": "361:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:37",
														"nodeType": "YulTypedName",
														"src": "371:7:37",
														"type": ""
													}
												],
												"src": "334:126:37"
											},
											{
												"body": {
													"nativeSrc": "511:51:37",
													"nodeType": "YulBlock",
													"src": "511:51:37",
													"statements": [
														{
															"nativeSrc": "521:35:37",
															"nodeType": "YulAssignment",
															"src": "521:35:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:37"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:37",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:37"
																},
																"nativeSrc": "532:24:37",
																"nodeType": "YulFunctionCall",
																"src": "532:24:37"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:37"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:37",
														"nodeType": "YulTypedName",
														"src": "493:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:37",
														"nodeType": "YulTypedName",
														"src": "503:7:37",
														"type": ""
													}
												],
												"src": "466:96:37"
											},
											{
												"body": {
													"nativeSrc": "633:51:37",
													"nodeType": "YulBlock",
													"src": "633:51:37",
													"statements": [
														{
															"nativeSrc": "643:35:37",
															"nodeType": "YulAssignment",
															"src": "643:35:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:37"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "654:17:37",
																	"nodeType": "YulIdentifier",
																	"src": "654:17:37"
																},
																"nativeSrc": "654:24:37",
																"nodeType": "YulFunctionCall",
																"src": "654:24:37"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "643:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "643:7:37"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IPoolManager_$614",
												"nativeSrc": "568:116:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "615:5:37",
														"nodeType": "YulTypedName",
														"src": "615:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "625:7:37",
														"nodeType": "YulTypedName",
														"src": "625:7:37",
														"type": ""
													}
												],
												"src": "568:116:37"
											},
											{
												"body": {
													"nativeSrc": "753:99:37",
													"nodeType": "YulBlock",
													"src": "753:99:37",
													"statements": [
														{
															"body": {
																"nativeSrc": "830:16:37",
																"nodeType": "YulBlock",
																"src": "830:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:37",
																					"nodeType": "YulLiteral",
																					"src": "839:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "842:1:37",
																					"nodeType": "YulLiteral",
																					"src": "842:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "832:6:37",
																				"nodeType": "YulIdentifier",
																				"src": "832:6:37"
																			},
																			"nativeSrc": "832:12:37",
																			"nodeType": "YulFunctionCall",
																			"src": "832:12:37"
																		},
																		"nativeSrc": "832:12:37",
																		"nodeType": "YulExpressionStatement",
																		"src": "832:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "776:5:37",
																				"nodeType": "YulIdentifier",
																				"src": "776:5:37"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "821:5:37",
																						"nodeType": "YulIdentifier",
																						"src": "821:5:37"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IPoolManager_$614",
																					"nativeSrc": "783:37:37",
																					"nodeType": "YulIdentifier",
																					"src": "783:37:37"
																				},
																				"nativeSrc": "783:44:37",
																				"nodeType": "YulFunctionCall",
																				"src": "783:44:37"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "773:2:37",
																			"nodeType": "YulIdentifier",
																			"src": "773:2:37"
																		},
																		"nativeSrc": "773:55:37",
																		"nodeType": "YulFunctionCall",
																		"src": "773:55:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "766:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:37"
																},
																"nativeSrc": "766:63:37",
																"nodeType": "YulFunctionCall",
																"src": "766:63:37"
															},
															"nativeSrc": "763:83:37",
															"nodeType": "YulIf",
															"src": "763:83:37"
														}
													]
												},
												"name": "validator_revert_t_contract$_IPoolManager_$614",
												"nativeSrc": "690:162:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "746:5:37",
														"nodeType": "YulTypedName",
														"src": "746:5:37",
														"type": ""
													}
												],
												"src": "690:162:37"
											},
											{
												"body": {
													"nativeSrc": "941:100:37",
													"nodeType": "YulBlock",
													"src": "941:100:37",
													"statements": [
														{
															"nativeSrc": "951:22:37",
															"nodeType": "YulAssignment",
															"src": "951:22:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "966:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "966:6:37"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "960:5:37",
																	"nodeType": "YulIdentifier",
																	"src": "960:5:37"
																},
																"nativeSrc": "960:13:37",
																"nodeType": "YulFunctionCall",
																"src": "960:13:37"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "951:5:37",
																	"nodeType": "YulIdentifier",
																	"src": "951:5:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1029:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "1029:5:37"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IPoolManager_$614",
																	"nativeSrc": "982:46:37",
																	"nodeType": "YulIdentifier",
																	"src": "982:46:37"
																},
																"nativeSrc": "982:53:37",
																"nodeType": "YulFunctionCall",
																"src": "982:53:37"
															},
															"nativeSrc": "982:53:37",
															"nodeType": "YulExpressionStatement",
															"src": "982:53:37"
														}
													]
												},
												"name": "abi_decode_t_contract$_IPoolManager_$614_fromMemory",
												"nativeSrc": "858:183:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "919:6:37",
														"nodeType": "YulTypedName",
														"src": "919:6:37",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "927:3:37",
														"nodeType": "YulTypedName",
														"src": "927:3:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "935:5:37",
														"nodeType": "YulTypedName",
														"src": "935:5:37",
														"type": ""
													}
												],
												"src": "858:183:37"
											},
											{
												"body": {
													"nativeSrc": "1144:294:37",
													"nodeType": "YulBlock",
													"src": "1144:294:37",
													"statements": [
														{
															"body": {
																"nativeSrc": "1190:83:37",
																"nodeType": "YulBlock",
																"src": "1190:83:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1192:77:37",
																				"nodeType": "YulIdentifier",
																				"src": "1192:77:37"
																			},
																			"nativeSrc": "1192:79:37",
																			"nodeType": "YulFunctionCall",
																			"src": "1192:79:37"
																		},
																		"nativeSrc": "1192:79:37",
																		"nodeType": "YulExpressionStatement",
																		"src": "1192:79:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1165:7:37",
																				"nodeType": "YulIdentifier",
																				"src": "1165:7:37"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1174:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "1174:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1161:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "1161:3:37"
																		},
																		"nativeSrc": "1161:23:37",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:23:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1186:2:37",
																		"nodeType": "YulLiteral",
																		"src": "1186:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1157:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "1157:3:37"
																},
																"nativeSrc": "1157:32:37",
																"nodeType": "YulFunctionCall",
																"src": "1157:32:37"
															},
															"nativeSrc": "1154:119:37",
															"nodeType": "YulIf",
															"src": "1154:119:37"
														},
														{
															"nativeSrc": "1283:148:37",
															"nodeType": "YulBlock",
															"src": "1283:148:37",
															"statements": [
																{
																	"nativeSrc": "1298:15:37",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1298:15:37",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1312:1:37",
																		"nodeType": "YulLiteral",
																		"src": "1312:1:37",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1302:6:37",
																			"nodeType": "YulTypedName",
																			"src": "1302:6:37",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1327:94:37",
																	"nodeType": "YulAssignment",
																	"src": "1327:94:37",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1393:9:37",
																						"nodeType": "YulIdentifier",
																						"src": "1393:9:37"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1404:6:37",
																						"nodeType": "YulIdentifier",
																						"src": "1404:6:37"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1389:3:37",
																					"nodeType": "YulIdentifier",
																					"src": "1389:3:37"
																				},
																				"nativeSrc": "1389:22:37",
																				"nodeType": "YulFunctionCall",
																				"src": "1389:22:37"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1413:7:37",
																				"nodeType": "YulIdentifier",
																				"src": "1413:7:37"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IPoolManager_$614_fromMemory",
																			"nativeSrc": "1337:51:37",
																			"nodeType": "YulIdentifier",
																			"src": "1337:51:37"
																		},
																		"nativeSrc": "1337:84:37",
																		"nodeType": "YulFunctionCall",
																		"src": "1337:84:37"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1327:6:37",
																			"nodeType": "YulIdentifier",
																			"src": "1327:6:37"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IPoolManager_$614_fromMemory",
												"nativeSrc": "1047:391:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1114:9:37",
														"nodeType": "YulTypedName",
														"src": "1114:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1125:7:37",
														"nodeType": "YulTypedName",
														"src": "1125:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1137:6:37",
														"nodeType": "YulTypedName",
														"src": "1137:6:37",
														"type": ""
													}
												],
												"src": "1047:391:37"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IPoolManager_$614(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IPoolManager_$614(value) {\n        if iszero(eq(value, cleanup_t_contract$_IPoolManager_$614(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IPoolManager_$614_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IPoolManager_$614(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IPoolManager_$614_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IPoolManager_$614_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b5060405161023f38038061023f833981810160405281019061003191906100da565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610105565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100988261006f565b9050919050565b5f6100a98261008e565b9050919050565b6100b98161009f565b81146100c3575f80fd5b50565b5f815190506100d4816100b0565b92915050565b5f602082840312156100ef576100ee61006b565b5b5f6100fc848285016100c6565b91505092915050565b60805161012361011c5f395f604601526101235ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c8063dc4c90d314602a575b5f80fd5b60306044565b604051603b919060d6565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f60a460a0609c846068565b6087565b6068565b9050919050565b5f60b3826090565b9050919050565b5f60c28260ab565b9050919050565b60d08160ba565b82525050565b5f60208201905060e75f83018460c9565b9291505056fea2646970667358221220a39c82f1a0b0b3b0eaf81ee90cdaa546e1805730e32f7d25e7dc97d06bb483b264736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x23F CODESIZE SUB DUP1 PUSH2 0x23F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xDA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x105 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98 DUP3 PUSH2 0x6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9 DUP3 PUSH2 0x8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0x9F JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD4 DUP2 PUSH2 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH2 0xEE PUSH2 0x6B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x123 PUSH2 0x11C PUSH0 CODECOPY PUSH0 PUSH1 0x46 ADD MSTORE PUSH2 0x123 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDC4C90D3 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA4 PUSH1 0xA0 PUSH1 0x9C DUP5 PUSH1 0x68 JUMP JUMPDEST PUSH1 0x87 JUMP JUMPDEST PUSH1 0x68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xB3 DUP3 PUSH1 0x90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC2 DUP3 PUSH1 0xAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD0 DUP2 PUSH1 0xBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xE7 PUSH0 DUP4 ADD DUP5 PUSH1 0xC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SWAP13 DUP3 CALL LOG0 0xB0 0xB3 0xB0 0xEA 0xF8 0x1E 0xE9 0xC 0xDA 0xA5 CHAINID 0xE1 DUP1 JUMPI ADDRESS 0xE3 0x2F PUSH30 0x25E7DC97D06BB483B264736F6C634300081A003300000000000000000000 ",
							"sourceMap": "326:491:27:-:0;;;733:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;796:12;782:26;;;;;;;;;;733:82;326:491;;88:117:37;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:116::-;625:7;654:24;672:5;654:24;:::i;:::-;643:35;;568:116;;;:::o;690:162::-;783:44;821:5;783:44;:::i;:::-;776:5;773:55;763:83;;842:1;839;832:12;763:83;690:162;:::o;858:183::-;935:5;966:6;960:13;951:22;;982:53;1029:5;982:53;:::i;:::-;858:183;;;;:::o;1047:391::-;1137:6;1186:2;1174:9;1165:7;1161:23;1157:32;1154:119;;;1192:79;;:::i;:::-;1154:119;1312:1;1337:84;1413:7;1404:6;1393:9;1389:22;1337:84;:::i;:::-;1327:94;;1283:148;1047:391;;;;:::o;326:491:27:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@poolManager_3941": {
									"entryPoint": 68,
									"id": 3941,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IPoolManager_$614_to_t_address_fromStack": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_contract$_IPoolManager_$614__to_t_address__fromStack_reversed": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IPoolManager_$614_to_t_address": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1079:37",
										"nodeType": "YulBlock",
										"src": "0:1079:37",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:37",
													"nodeType": "YulBlock",
													"src": "52:81:37",
													"statements": [
														{
															"nativeSrc": "62:65:37",
															"nodeType": "YulAssignment",
															"src": "62:65:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:37",
																		"nodeType": "YulLiteral",
																		"src": "84:42:37",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:37"
																},
																"nativeSrc": "73:54:37",
																"nodeType": "YulFunctionCall",
																"src": "73:54:37"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:37",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:37"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:37",
														"nodeType": "YulTypedName",
														"src": "34:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:37",
														"nodeType": "YulTypedName",
														"src": "44:7:37",
														"type": ""
													}
												],
												"src": "7:126:37"
											},
											{
												"body": {
													"nativeSrc": "171:28:37",
													"nodeType": "YulBlock",
													"src": "171:28:37",
													"statements": [
														{
															"nativeSrc": "181:12:37",
															"nodeType": "YulAssignment",
															"src": "181:12:37",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:37",
																"nodeType": "YulIdentifier",
																"src": "188:5:37"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:37"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:37",
														"nodeType": "YulTypedName",
														"src": "157:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:37",
														"nodeType": "YulTypedName",
														"src": "167:3:37",
														"type": ""
													}
												],
												"src": "139:60:37"
											},
											{
												"body": {
													"nativeSrc": "265:82:37",
													"nodeType": "YulBlock",
													"src": "265:82:37",
													"statements": [
														{
															"nativeSrc": "275:66:37",
															"nodeType": "YulAssignment",
															"src": "275:66:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:37",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:37"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:37",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:37"
																				},
																				"nativeSrc": "315:24:37",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:37"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:37",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:37"
																		},
																		"nativeSrc": "306:34:37",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:37"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:37",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:37"
																},
																"nativeSrc": "288:53:37",
																"nodeType": "YulFunctionCall",
																"src": "288:53:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:37",
														"nodeType": "YulTypedName",
														"src": "245:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:37",
														"nodeType": "YulTypedName",
														"src": "255:9:37",
														"type": ""
													}
												],
												"src": "205:142:37"
											},
											{
												"body": {
													"nativeSrc": "413:66:37",
													"nodeType": "YulBlock",
													"src": "413:66:37",
													"statements": [
														{
															"nativeSrc": "423:50:37",
															"nodeType": "YulAssignment",
															"src": "423:50:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:37"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:37",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:37"
																},
																"nativeSrc": "436:37:37",
																"nodeType": "YulFunctionCall",
																"src": "436:37:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:37",
														"nodeType": "YulTypedName",
														"src": "393:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:37",
														"nodeType": "YulTypedName",
														"src": "403:9:37",
														"type": ""
													}
												],
												"src": "353:126:37"
											},
											{
												"body": {
													"nativeSrc": "565:66:37",
													"nodeType": "YulBlock",
													"src": "565:66:37",
													"statements": [
														{
															"nativeSrc": "575:50:37",
															"nodeType": "YulAssignment",
															"src": "575:50:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "619:5:37",
																		"nodeType": "YulIdentifier",
																		"src": "619:5:37"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "588:30:37",
																	"nodeType": "YulIdentifier",
																	"src": "588:30:37"
																},
																"nativeSrc": "588:37:37",
																"nodeType": "YulFunctionCall",
																"src": "588:37:37"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "575:9:37",
																	"nodeType": "YulIdentifier",
																	"src": "575:9:37"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IPoolManager_$614_to_t_address",
												"nativeSrc": "485:146:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "545:5:37",
														"nodeType": "YulTypedName",
														"src": "545:5:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "555:9:37",
														"nodeType": "YulTypedName",
														"src": "555:9:37",
														"type": ""
													}
												],
												"src": "485:146:37"
											},
											{
												"body": {
													"nativeSrc": "722:86:37",
													"nodeType": "YulBlock",
													"src": "722:86:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "739:3:37",
																		"nodeType": "YulIdentifier",
																		"src": "739:3:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "795:5:37",
																				"nodeType": "YulIdentifier",
																				"src": "795:5:37"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IPoolManager_$614_to_t_address",
																			"nativeSrc": "744:50:37",
																			"nodeType": "YulIdentifier",
																			"src": "744:50:37"
																		},
																		"nativeSrc": "744:57:37",
																		"nodeType": "YulFunctionCall",
																		"src": "744:57:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "732:6:37",
																	"nodeType": "YulIdentifier",
																	"src": "732:6:37"
																},
																"nativeSrc": "732:70:37",
																"nodeType": "YulFunctionCall",
																"src": "732:70:37"
															},
															"nativeSrc": "732:70:37",
															"nodeType": "YulExpressionStatement",
															"src": "732:70:37"
														}
													]
												},
												"name": "abi_encode_t_contract$_IPoolManager_$614_to_t_address_fromStack",
												"nativeSrc": "637:171:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "710:5:37",
														"nodeType": "YulTypedName",
														"src": "710:5:37",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "717:3:37",
														"nodeType": "YulTypedName",
														"src": "717:3:37",
														"type": ""
													}
												],
												"src": "637:171:37"
											},
											{
												"body": {
													"nativeSrc": "932:144:37",
													"nodeType": "YulBlock",
													"src": "932:144:37",
													"statements": [
														{
															"nativeSrc": "942:26:37",
															"nodeType": "YulAssignment",
															"src": "942:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "954:9:37",
																		"nodeType": "YulIdentifier",
																		"src": "954:9:37"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "965:2:37",
																		"nodeType": "YulLiteral",
																		"src": "965:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "950:3:37",
																	"nodeType": "YulIdentifier",
																	"src": "950:3:37"
																},
																"nativeSrc": "950:18:37",
																"nodeType": "YulFunctionCall",
																"src": "950:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "942:4:37",
																	"nodeType": "YulIdentifier",
																	"src": "942:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1042:6:37",
																		"nodeType": "YulIdentifier",
																		"src": "1042:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1055:9:37",
																				"nodeType": "YulIdentifier",
																				"src": "1055:9:37"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1066:1:37",
																				"nodeType": "YulLiteral",
																				"src": "1066:1:37",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1051:3:37",
																			"nodeType": "YulIdentifier",
																			"src": "1051:3:37"
																		},
																		"nativeSrc": "1051:17:37",
																		"nodeType": "YulFunctionCall",
																		"src": "1051:17:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IPoolManager_$614_to_t_address_fromStack",
																	"nativeSrc": "978:63:37",
																	"nodeType": "YulIdentifier",
																	"src": "978:63:37"
																},
																"nativeSrc": "978:91:37",
																"nodeType": "YulFunctionCall",
																"src": "978:91:37"
															},
															"nativeSrc": "978:91:37",
															"nodeType": "YulExpressionStatement",
															"src": "978:91:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IPoolManager_$614__to_t_address__fromStack_reversed",
												"nativeSrc": "814:262:37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "904:9:37",
														"nodeType": "YulTypedName",
														"src": "904:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "916:6:37",
														"nodeType": "YulTypedName",
														"src": "916:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "927:4:37",
														"nodeType": "YulTypedName",
														"src": "927:4:37",
														"type": ""
													}
												],
												"src": "814:262:37"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IPoolManager_$614_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IPoolManager_$614_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IPoolManager_$614_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IPoolManager_$614__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IPoolManager_$614_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"3941": [
									{
										"length": 32,
										"start": 70
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c8063dc4c90d314602a575b5f80fd5b60306044565b604051603b919060d6565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f60a460a0609c846068565b6087565b6068565b9050919050565b5f60b3826090565b9050919050565b5f60c28260ab565b9050919050565b60d08160ba565b82525050565b5f60208201905060e75f83018460c9565b9291505056fea2646970667358221220a39c82f1a0b0b3b0eaf81ee90cdaa546e1805730e32f7d25e7dc97d06bb483b264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDC4C90D3 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA4 PUSH1 0xA0 PUSH1 0x9C DUP5 PUSH1 0x68 JUMP JUMPDEST PUSH1 0x87 JUMP JUMPDEST PUSH1 0x68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xB3 DUP3 PUSH1 0x90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC2 DUP3 PUSH1 0xAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD0 DUP2 PUSH1 0xBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xE7 PUSH0 DUP4 ADD DUP5 PUSH1 0xC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SWAP13 DUP3 CALL LOG0 0xB0 0xB3 0xB0 0xEA 0xF8 0x1E 0xE9 0xC 0xDA 0xA5 CHAINID 0xE1 DUP1 JUMPI ADDRESS 0xE3 0x2F PUSH30 0x25E7DC97D06BB483B264736F6C634300081A003300000000000000000000 ",
							"sourceMap": "326:491:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;411:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;7:126:37:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:146::-;555:9;588:37;619:5;588:37;:::i;:::-;575:50;;485:146;;;:::o;637:171::-;744:57;795:5;744:57;:::i;:::-;739:3;732:70;637:171;;:::o;814:262::-;927:4;965:2;954:9;950:18;942:26;;978:91;1066:1;1055:9;1051:17;1042:6;978:91;:::i;:::-;814:262;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "58200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"poolManager()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 326,
									"end": 817,
									"name": "PUSH",
									"source": 27,
									"value": "A0"
								},
								{
									"begin": 326,
									"end": 817,
									"name": "PUSH",
									"source": 27,
									"value": "40"
								},
								{
									"begin": 326,
									"end": 817,
									"name": "MSTORE",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "CALLVALUE",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "DUP1",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "ISZERO",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 27,
									"value": "1"
								},
								{
									"begin": 733,
									"end": 815,
									"name": "JUMPI",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 733,
									"end": 815,
									"name": "DUP1",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "REVERT",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "tag",
									"source": 27,
									"value": "1"
								},
								{
									"begin": 733,
									"end": 815,
									"name": "JUMPDEST",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "POP",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "PUSH",
									"source": 27,
									"value": "40"
								},
								{
									"begin": 733,
									"end": 815,
									"name": "MLOAD",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "PUSHSIZE",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "CODESIZE",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "SUB",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "DUP1",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "PUSHSIZE",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "DUP4",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "CODECOPY",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "DUP2",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "DUP2",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "ADD",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "PUSH",
									"source": 27,
									"value": "40"
								},
								{
									"begin": 733,
									"end": 815,
									"name": "MSTORE",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "DUP2",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "ADD",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "SWAP1",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 27,
									"value": "2"
								},
								{
									"begin": 733,
									"end": 815,
									"name": "SWAP2",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "SWAP1",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 27,
									"value": "3"
								},
								{
									"begin": 733,
									"end": 815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "tag",
									"source": 27,
									"value": "2"
								},
								{
									"begin": 733,
									"end": 815,
									"name": "JUMPDEST",
									"source": 27
								},
								{
									"begin": 796,
									"end": 808,
									"name": "DUP1",
									"source": 27
								},
								{
									"begin": 782,
									"end": 808,
									"name": "PUSH",
									"source": 27,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 782,
									"end": 808,
									"name": "AND",
									"source": 27
								},
								{
									"begin": 782,
									"end": 808,
									"name": "PUSH",
									"source": 27,
									"value": "80"
								},
								{
									"begin": 782,
									"end": 808,
									"name": "DUP2",
									"source": 27
								},
								{
									"begin": 782,
									"end": 808,
									"name": "PUSH",
									"source": 27,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 782,
									"end": 808,
									"name": "AND",
									"source": 27
								},
								{
									"begin": 782,
									"end": 808,
									"name": "DUP2",
									"source": 27
								},
								{
									"begin": 782,
									"end": 808,
									"name": "MSTORE",
									"source": 27
								},
								{
									"begin": 782,
									"end": 808,
									"name": "POP",
									"source": 27
								},
								{
									"begin": 782,
									"end": 808,
									"name": "POP",
									"source": 27
								},
								{
									"begin": 733,
									"end": 815,
									"name": "POP",
									"source": 27
								},
								{
									"begin": 326,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 27,
									"value": "6"
								},
								{
									"begin": 326,
									"end": 817,
									"name": "JUMP",
									"source": 27
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 37,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 37
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 37
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 37,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 37,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 37
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 37
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 37,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 37,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 37
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 568,
									"end": 684,
									"name": "tag",
									"source": 37,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 684,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 625,
									"end": 632,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 654,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "23"
								},
								{
									"begin": 672,
									"end": 677,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 654,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "11"
								},
								{
									"begin": 654,
									"end": 678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 654,
									"end": 678,
									"name": "tag",
									"source": 37,
									"value": "23"
								},
								{
									"begin": 654,
									"end": 678,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 643,
									"end": 678,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 643,
									"end": 678,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 568,
									"end": 684,
									"name": "SWAP2",
									"source": 37
								},
								{
									"begin": 568,
									"end": 684,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 568,
									"end": 684,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 568,
									"end": 684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 690,
									"end": 852,
									"name": "tag",
									"source": 37,
									"value": "13"
								},
								{
									"begin": 690,
									"end": 852,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 783,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "25"
								},
								{
									"begin": 821,
									"end": 826,
									"name": "DUP2",
									"source": 37
								},
								{
									"begin": 783,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "12"
								},
								{
									"begin": 783,
									"end": 827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 783,
									"end": 827,
									"name": "tag",
									"source": 37,
									"value": "25"
								},
								{
									"begin": 783,
									"end": 827,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 776,
									"end": 781,
									"name": "DUP2",
									"source": 37
								},
								{
									"begin": 773,
									"end": 828,
									"name": "EQ",
									"source": 37
								},
								{
									"begin": 763,
									"end": 846,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "26"
								},
								{
									"begin": 763,
									"end": 846,
									"name": "JUMPI",
									"source": 37
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 839,
									"end": 840,
									"name": "DUP1",
									"source": 37
								},
								{
									"begin": 832,
									"end": 844,
									"name": "REVERT",
									"source": 37
								},
								{
									"begin": 763,
									"end": 846,
									"name": "tag",
									"source": 37,
									"value": "26"
								},
								{
									"begin": 763,
									"end": 846,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 690,
									"end": 852,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 690,
									"end": 852,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "tag",
									"source": 37,
									"value": "14"
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 935,
									"end": 940,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 972,
									"name": "DUP2",
									"source": 37
								},
								{
									"begin": 960,
									"end": 973,
									"name": "MLOAD",
									"source": 37
								},
								{
									"begin": 951,
									"end": 973,
									"name": "SWAP1",
									"source": 37
								},
								{
									"begin": 951,
									"end": 973,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 982,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "28"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP2",
									"source": 37
								},
								{
									"begin": 982,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "13"
								},
								{
									"begin": 982,
									"end": 1035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 982,
									"end": 1035,
									"name": "tag",
									"source": 37,
									"value": "28"
								},
								{
									"begin": 982,
									"end": 1035,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "SWAP3",
									"source": 37
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "SWAP2",
									"source": 37
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 858,
									"end": 1041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 1047,
									"end": 1438,
									"name": "tag",
									"source": 37,
									"value": "3"
								},
								{
									"begin": 1047,
									"end": 1438,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 1137,
									"end": 1143,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 1186,
									"end": 1188,
									"name": "PUSH",
									"source": 37,
									"value": "20"
								},
								{
									"begin": 1174,
									"end": 1183,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 1165,
									"end": 1172,
									"name": "DUP5",
									"source": 37
								},
								{
									"begin": 1161,
									"end": 1184,
									"name": "SUB",
									"source": 37
								},
								{
									"begin": 1157,
									"end": 1189,
									"name": "SLT",
									"source": 37
								},
								{
									"begin": 1154,
									"end": 1273,
									"name": "ISZERO",
									"source": 37
								},
								{
									"begin": 1154,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "30"
								},
								{
									"begin": 1154,
									"end": 1273,
									"name": "JUMPI",
									"source": 37
								},
								{
									"begin": 1192,
									"end": 1271,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "31"
								},
								{
									"begin": 1192,
									"end": 1271,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "8"
								},
								{
									"begin": 1192,
									"end": 1271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 1192,
									"end": 1271,
									"name": "tag",
									"source": 37,
									"value": "31"
								},
								{
									"begin": 1192,
									"end": 1271,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 1154,
									"end": 1273,
									"name": "tag",
									"source": 37,
									"value": "30"
								},
								{
									"begin": 1154,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 1312,
									"end": 1313,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 1337,
									"end": 1421,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "32"
								},
								{
									"begin": 1413,
									"end": 1420,
									"name": "DUP5",
									"source": 37
								},
								{
									"begin": 1404,
									"end": 1410,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 1393,
									"end": 1402,
									"name": "DUP6",
									"source": 37
								},
								{
									"begin": 1389,
									"end": 1411,
									"name": "ADD",
									"source": 37
								},
								{
									"begin": 1337,
									"end": 1421,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "14"
								},
								{
									"begin": 1337,
									"end": 1421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 1337,
									"end": 1421,
									"name": "tag",
									"source": 37,
									"value": "32"
								},
								{
									"begin": 1337,
									"end": 1421,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "SWAP2",
									"source": 37
								},
								{
									"begin": 1327,
									"end": 1421,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 1283,
									"end": 1431,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 1047,
									"end": 1438,
									"name": "SWAP3",
									"source": 37
								},
								{
									"begin": 1047,
									"end": 1438,
									"name": "SWAP2",
									"source": 37
								},
								{
									"begin": 1047,
									"end": 1438,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 1047,
									"end": 1438,
									"name": "POP",
									"source": 37
								},
								{
									"begin": 1047,
									"end": 1438,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 37
								},
								{
									"begin": 326,
									"end": 817,
									"name": "tag",
									"source": 27,
									"value": "6"
								},
								{
									"begin": 326,
									"end": 817,
									"name": "JUMPDEST",
									"source": 27
								},
								{
									"begin": 326,
									"end": 817,
									"name": "PUSH",
									"source": 27,
									"value": "80"
								},
								{
									"begin": 326,
									"end": 817,
									"name": "MLOAD",
									"source": 27
								},
								{
									"begin": 326,
									"end": 817,
									"name": "PUSH #[$]",
									"source": 27,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 326,
									"end": 817,
									"name": "PUSH [$]",
									"source": 27,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 326,
									"end": 817,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 817,
									"name": "CODECOPY",
									"source": 27
								},
								{
									"begin": 326,
									"end": 817,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 817,
									"name": "ASSIGNIMMUTABLE",
									"source": 27,
									"value": "3941"
								},
								{
									"begin": 326,
									"end": 817,
									"name": "PUSH #[$]",
									"source": 27,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 326,
									"end": 817,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 817,
									"name": "RETURN",
									"source": 27
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a39c82f1a0b0b3b0eaf81ee90cdaa546e1805730e32f7d25e7dc97d06bb483b264736f6c634300081a0033",
									".code": [
										{
											"begin": 326,
											"end": 817,
											"name": "PUSH",
											"source": 27,
											"value": "80"
										},
										{
											"begin": 326,
											"end": 817,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 817,
											"name": "MSTORE",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "CALLVALUE",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "ISZERO",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "1"
										},
										{
											"begin": 326,
											"end": 817,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 817,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "REVERT",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "tag",
											"source": 27,
											"value": "1"
										},
										{
											"begin": 326,
											"end": 817,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "POP",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "PUSH",
											"source": 27,
											"value": "4"
										},
										{
											"begin": 326,
											"end": 817,
											"name": "CALLDATASIZE",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "LT",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 817,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "PUSH",
											"source": 27,
											"value": "E0"
										},
										{
											"begin": 326,
											"end": 817,
											"name": "SHR",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "PUSH",
											"source": 27,
											"value": "DC4C90D3"
										},
										{
											"begin": 326,
											"end": 817,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "3"
										},
										{
											"begin": 326,
											"end": 817,
											"name": "JUMPI",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "tag",
											"source": 27,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 817,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 817,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 326,
											"end": 817,
											"name": "REVERT",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "tag",
											"source": 27,
											"value": "3"
										},
										{
											"begin": 411,
											"end": 452,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "4"
										},
										{
											"begin": 411,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "5"
										},
										{
											"begin": 411,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "tag",
											"source": 27,
											"value": "4"
										},
										{
											"begin": 411,
											"end": 452,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 452,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "6"
										},
										{
											"begin": 411,
											"end": 452,
											"name": "SWAP2",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 27,
											"value": "7"
										},
										{
											"begin": 411,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "tag",
											"source": 27,
											"value": "6"
										},
										{
											"begin": 411,
											"end": 452,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 452,
											"name": "MLOAD",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "SWAP2",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "SUB",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "SWAP1",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "RETURN",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "tag",
											"source": 27,
											"value": "5"
										},
										{
											"begin": 411,
											"end": 452,
											"name": "JUMPDEST",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"name": "PUSHIMMUTABLE",
											"source": 27,
											"value": "3941"
										},
										{
											"begin": 411,
											"end": 452,
											"name": "DUP2",
											"source": 27
										},
										{
											"begin": 411,
											"end": 452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 27
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 37,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 37,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 37
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 37,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 37,
											"value": "10"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "18"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "19"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "8"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 37,
											"value": "19"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "8"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 37,
											"value": "18"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 37,
											"value": "11"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "22"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "10"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 37,
											"value": "22"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 485,
											"end": 631,
											"name": "tag",
											"source": 37,
											"value": "12"
										},
										{
											"begin": 485,
											"end": 631,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 555,
											"end": 564,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "24"
										},
										{
											"begin": 619,
											"end": 624,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 588,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "11"
										},
										{
											"begin": 588,
											"end": 625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 588,
											"end": 625,
											"name": "tag",
											"source": 37,
											"value": "24"
										},
										{
											"begin": 588,
											"end": 625,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 575,
											"end": 625,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 575,
											"end": 625,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 485,
											"end": 631,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 485,
											"end": 631,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 485,
											"end": 631,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 485,
											"end": 631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 637,
											"end": 808,
											"name": "tag",
											"source": 37,
											"value": "13"
										},
										{
											"begin": 637,
											"end": 808,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 744,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "26"
										},
										{
											"begin": 795,
											"end": 800,
											"name": "DUP2",
											"source": 37
										},
										{
											"begin": 744,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "12"
										},
										{
											"begin": 744,
											"end": 801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 744,
											"end": 801,
											"name": "tag",
											"source": 37,
											"value": "26"
										},
										{
											"begin": 744,
											"end": 801,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 739,
											"end": 742,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 732,
											"end": 802,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 637,
											"end": 808,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 637,
											"end": 808,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 637,
											"end": 808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 814,
											"end": 1076,
											"name": "tag",
											"source": 37,
											"value": "7"
										},
										{
											"begin": 814,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 927,
											"end": 931,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 967,
											"name": "PUSH",
											"source": 37,
											"value": "20"
										},
										{
											"begin": 954,
											"end": 963,
											"name": "DUP3",
											"source": 37
										},
										{
											"begin": 950,
											"end": 968,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 942,
											"end": 968,
											"name": "SWAP1",
											"source": 37
										},
										{
											"begin": 942,
											"end": 968,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 978,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "28"
										},
										{
											"begin": 1066,
											"end": 1067,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1064,
											"name": "DUP4",
											"source": 37
										},
										{
											"begin": 1051,
											"end": 1068,
											"name": "ADD",
											"source": 37
										},
										{
											"begin": 1042,
											"end": 1048,
											"name": "DUP5",
											"source": 37
										},
										{
											"begin": 978,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 37,
											"value": "13"
										},
										{
											"begin": 978,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 37
										},
										{
											"begin": 978,
											"end": 1069,
											"name": "tag",
											"source": 37,
											"value": "28"
										},
										{
											"begin": 978,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 37
										},
										{
											"begin": 814,
											"end": 1076,
											"name": "SWAP3",
											"source": 37
										},
										{
											"begin": 814,
											"end": 1076,
											"name": "SWAP2",
											"source": 37
										},
										{
											"begin": 814,
											"end": 1076,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 814,
											"end": 1076,
											"name": "POP",
											"source": 37
										},
										{
											"begin": 814,
											"end": 1076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 37
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"poolManager()": "dc4c90d3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_poolManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Immutable State\",\"version\":1},\"userdoc\":{\"errors\":{\"NotPoolManager()\":[{\"notice\":\"Thrown when the caller is not PoolManager\"}]},\"kind\":\"user\",\"methods\":{\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"}},\"notice\":\"A collection of immutable state variables, commonly used across multiple contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":\"ImmutableState\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"@uniswap/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"@uniswap/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x1867c9fa2f9b4fa73bab0fcdc9d19ccef4eeac552273d8b84a170cd1cc90350a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af2d699b439e13b599632fddfe82718aebd41055fba7c075f186675c588d1337\",\"dweb:/ipfs/Qmc111gckSKb9aESn3wRFLeLiS4KGujaUcaYJgRnCRfwQU\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol\":{\"keccak256\":\"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341\",\"dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"NotPoolManager()": [
								{
									"notice": "Thrown when the caller is not PoolManager"
								}
							]
						},
						"kind": "user",
						"methods": {
							"poolManager()": {
								"notice": "The Uniswap v4 PoolManager contract"
							}
						},
						"notice": "A collection of immutable state variables, commonly used across multiple contracts",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol": {
				"SafeCallback": {
					"abi": [
						{
							"inputs": [],
							"name": "NotPoolManager",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "poolManager",
							"outputs": [
								{
									"internalType": "contract IPoolManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "unlockCallback",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"unlockCallback(bytes)": {
								"details": "We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.",
								"params": {
									"data": "The data that was passed to the call to unlock"
								},
								"returns": {
									"_0": "Any data that you want to be returned from the unlock call"
								}
							}
						},
						"title": "Safe Callback",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"poolManager()": "dc4c90d3",
							"unlockCallback(bytes)": "91dd7346"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlockCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"unlockCallback(bytes)\":{\"details\":\"We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.\",\"params\":{\"data\":\"The data that was passed to the call to unlock\"},\"returns\":{\"_0\":\"Any data that you want to be returned from the unlock call\"}}},\"title\":\"Safe Callback\",\"version\":1},\"userdoc\":{\"errors\":{\"NotPoolManager()\":[{\"notice\":\"Thrown when the caller is not PoolManager\"}]},\"kind\":\"user\",\"methods\":{\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"},\"unlockCallback(bytes)\":{\"notice\":\"Called by the pool manager on `msg.sender` when the manager is unlocked\"}},\"notice\":\"A contract that only allows the Uniswap v4 PoolManager to call the unlockCallback\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol\":\"SafeCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"@uniswap/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"@uniswap/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x1867c9fa2f9b4fa73bab0fcdc9d19ccef4eeac552273d8b84a170cd1cc90350a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af2d699b439e13b599632fddfe82718aebd41055fba7c075f186675c588d1337\",\"dweb:/ipfs/Qmc111gckSKb9aESn3wRFLeLiS4KGujaUcaYJgRnCRfwQU\"]},\"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol\":{\"keccak256\":\"0xd78b583df1b9ee06d58e83b84fc9f08971389b34dd34bc13db072e0c13c710da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0a47f4bcd6060c4462153b9a7c52a60a460ace91acb6ddd5492eab28ec26173\",\"dweb:/ipfs/QmdRCTRS1dhFjWEy6z577j4xz9J5HPfHBwcNzAic8G59oT\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol\":{\"keccak256\":\"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341\",\"dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"NotPoolManager()": [
								{
									"notice": "Thrown when the caller is not PoolManager"
								}
							]
						},
						"kind": "user",
						"methods": {
							"poolManager()": {
								"notice": "The Uniswap v4 PoolManager contract"
							},
							"unlockCallback(bytes)": {
								"notice": "Called by the pool manager on `msg.sender` when the manager is unlocked"
							}
						},
						"notice": "A contract that only allows the Uniswap v4 PoolManager to call the unlockCallback",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol": {
				"IImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "poolManager",
							"outputs": [
								{
									"internalType": "contract IPoolManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "IImmutableState",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"poolManager()": "dc4c90d3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"IImmutableState\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"}},\"notice\":\"Interface for the ImmutableState contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol\":\"IImmutableState\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"@uniswap/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"@uniswap/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol\":{\"keccak256\":\"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341\",\"dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"poolManager()": {
								"notice": "The Uniswap v4 PoolManager contract"
							}
						},
						"notice": "Interface for the ImmutableState contract",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol": {
				"IMsgSender": {
					"abi": [
						{
							"inputs": [],
							"name": "msgSender",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"msgSender()": {
								"details": "Uniswap v4 periphery contracts implement a callback pattern which lose the original msg.sender caller context. This view function provides a way for integrating contracts (e.g. hooks) to access the original caller address.",
								"returns": {
									"_0": "The address of the original caller"
								}
							}
						},
						"title": "IMsgSender",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"msgSender()": "d737d0c7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"msgSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"msgSender()\":{\"details\":\"Uniswap v4 periphery contracts implement a callback pattern which lose the original msg.sender caller context. This view function provides a way for integrating contracts (e.g. hooks) to access the original caller address.\",\"returns\":{\"_0\":\"The address of the original caller\"}}},\"title\":\"IMsgSender\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"msgSender()\":{\"notice\":\"Returns the address of the original caller (msg.sender)\"}},\"notice\":\"Interface for contracts that expose the original caller\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol\":\"IMsgSender\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol\":{\"keccak256\":\"0xcc7d4e3f2fde34cf1ad9f05a8e43977e04d19624f71eb8a8c295feaf64b362a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e02044b5e19cc9ca24d23f55667142fde6daefba66408b56c4f620b625fc189\",\"dweb:/ipfs/QmUqWdRBqWi2tZkNAPhzLZbknP26TZbD8iRQMd3fdZGFgi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"msgSender()": {
								"notice": "Returns the address of the original caller (msg.sender)"
							}
						},
						"notice": "Interface for contracts that expose the original caller",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol": {
				"IV4Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "minAmountOutReceived",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountReceived",
									"type": "uint256"
								}
							],
							"name": "V4TooLittleReceived",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxAmountInRequested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountRequested",
									"type": "uint256"
								}
							],
							"name": "V4TooMuchRequested",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "poolManager",
							"outputs": [
								{
									"internalType": "contract IPoolManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "IV4Router",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"poolManager()": "dc4c90d3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minAmountOutReceived\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"V4TooLittleReceived\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmountInRequested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountRequested\",\"type\":\"uint256\"}],\"name\":\"V4TooMuchRequested\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"IV4Router\",\"version\":1},\"userdoc\":{\"errors\":{\"V4TooLittleReceived(uint256,uint256)\":[{\"notice\":\"Emitted when an exactInput swap does not receive its minAmountOut\"}],\"V4TooMuchRequested(uint256,uint256)\":[{\"notice\":\"Emitted when an exactOutput is asked for more than its maxAmountIn\"}]},\"kind\":\"user\",\"methods\":{\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"}},\"notice\":\"Interface for the V4Router contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol\":\"IV4Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"@uniswap/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"@uniswap/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol\":{\"keccak256\":\"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341\",\"dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol\":{\"keccak256\":\"0xc4133fae25e61cc2447d7331729f6035322d7c1fe26b39b225422bf98cc63459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c24ff8428504e973e947a059f96289a66c520cd7f8ef47a3224f9cb6abdaf25\",\"dweb:/ipfs/QmVqxYnngWXXcCiuTC143vTEJrjZK5NXWB92pjvVbuJBQ5\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol\":{\"keccak256\":\"0xbbd79ffefe045f025263e389539021266fb4d371463aefba405e1ff1d3fcf9bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d1c47b81a01218be46ee79f0a8837095479b94dc5cfd18abbf2006709f0ea89\",\"dweb:/ipfs/QmRb6CQ13Zp7f3WF5jbZtsF2szhxpPgcuWs9mjwQXxzqtg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"V4TooLittleReceived(uint256,uint256)": [
								{
									"notice": "Emitted when an exactInput swap does not receive its minAmountOut"
								}
							],
							"V4TooMuchRequested(uint256,uint256)": [
								{
									"notice": "Emitted when an exactOutput is asked for more than its maxAmountIn"
								}
							]
						},
						"kind": "user",
						"methods": {
							"poolManager()": {
								"notice": "The Uniswap v4 PoolManager contract"
							}
						},
						"notice": "Interface for the V4Router contract",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol": {
				"ActionConstants": {
					"abi": [],
					"devdoc": {
						"details": "Constants are gas efficient alternatives to their literal values",
						"kind": "dev",
						"methods": {},
						"title": "Action Constants",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol\":204:1039  library ActionConstants {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol\":204:1039  library ActionConstants {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207d9919d269834bbce9bc9dac2564168fbb2d8c70d60bd1f25307ca8bd9c49ceb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207d9919d269834bbce9bc9dac2564168fbb2d8c70d60bd1f25307ca8bd9c49ceb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x9919D269834BBCE9BC9DAC2564168FBB2D8C70D60BD1F25307CA8BD9C49C 0xEB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "204:835:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207d9919d269834bbce9bc9dac2564168fbb2d8c70d60bd1f25307ca8bd9c49ceb64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x9919D269834BBCE9BC9DAC2564168FBB2D8C70D60BD1F25307CA8BD9C49C 0xEB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "204:835:32:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH #[$]",
									"source": 32,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH [$]",
									"source": 32,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH",
									"source": 32,
									"value": "B"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "DUP3",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "DUP3",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "DUP3",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "CODECOPY",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "DUP1",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "MLOAD",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH",
									"source": 32,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "BYTE",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH",
									"source": 32,
									"value": "73"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "EQ",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 32,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "JUMPI",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH",
									"source": 32,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH",
									"source": 32,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "MSTORE",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH",
									"source": 32,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH",
									"source": 32,
									"value": "4"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "MSTORE",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH",
									"source": 32,
									"value": "24"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH",
									"source": 32,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "REVERT",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "tag",
									"source": 32,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "ADDRESS",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH",
									"source": 32,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "MSTORE",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "PUSH",
									"source": 32,
									"value": "73"
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "DUP2",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "MSTORE8",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "DUP3",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "DUP2",
									"source": 32
								},
								{
									"begin": 204,
									"end": 1039,
									"name": "RETURN",
									"source": 32
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207d9919d269834bbce9bc9dac2564168fbb2d8c70d60bd1f25307ca8bd9c49ceb64736f6c634300081a0033",
									".code": [
										{
											"begin": 204,
											"end": 1039,
											"name": "PUSHDEPLOYADDRESS",
											"source": 32
										},
										{
											"begin": 204,
											"end": 1039,
											"name": "ADDRESS",
											"source": 32
										},
										{
											"begin": 204,
											"end": 1039,
											"name": "EQ",
											"source": 32
										},
										{
											"begin": 204,
											"end": 1039,
											"name": "PUSH",
											"source": 32,
											"value": "80"
										},
										{
											"begin": 204,
											"end": 1039,
											"name": "PUSH",
											"source": 32,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 1039,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": 204,
											"end": 1039,
											"name": "PUSH",
											"source": 32,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 1039,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 204,
											"end": 1039,
											"name": "REVERT",
											"source": 32
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Constants are gas efficient alternatives to their literal values\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Action Constants\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Common constants used in actions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol\":\"ActionConstants\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol\":{\"keccak256\":\"0x3d6f0e5b4a7b1e60bad93e73dce5db67fb66bebef11c31ed8355014a79aa03b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dfa42e24b1b5c7f66e75304ab034fbb6768518eb2410ccfff8b3defdd1658f2\",\"dweb:/ipfs/QmQQ7fud9mmv7PEWPAQiNzeZhNkWf28Z6nCHc2e6WJFfa7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Common constants used in actions",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol": {
				"Actions": {
					"abi": [],
					"devdoc": {
						"details": "These are suggested common commands, however additional commands should be defined as required Some of these actions are not supported in the Router contracts or Position Manager contracts, but are left as they may be helpful commands for other peripheral contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol\":391:2030  library Actions {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol\":391:2030  library Actions {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220605a6592e671eda471bde748172b14b8b8f730033885e5ac70f29a3559bcea2864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220605a6592e671eda471bde748172b14b8b8f730033885e5ac70f29a3559bcea2864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x5A PUSH6 0x92E671EDA471 0xBD 0xE7 BASEFEE OR 0x2B EQ 0xB8 0xB8 0xF7 ADDRESS SUB CODESIZE DUP6 0xE5 0xAC PUSH17 0xF29A3559BCEA2864736F6C634300081A00 CALLER ",
							"sourceMap": "391:1639:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220605a6592e671eda471bde748172b14b8b8f730033885e5ac70f29a3559bcea2864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x5A PUSH6 0x92E671EDA471 0xBD 0xE7 BASEFEE OR 0x2B EQ 0xB8 0xB8 0xF7 ADDRESS SUB CODESIZE DUP6 0xE5 0xAC PUSH17 0xF29A3559BCEA2864736F6C634300081A00 CALLER ",
							"sourceMap": "391:1639:33:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH #[$]",
									"source": 33,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH [$]",
									"source": 33,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH",
									"source": 33,
									"value": "B"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "CODECOPY",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "BYTE",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH",
									"source": 33,
									"value": "73"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "EQ",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "1"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH",
									"source": 33,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH",
									"source": 33,
									"value": "24"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "tag",
									"source": 33,
									"value": "1"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "ADDRESS",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "PUSH",
									"source": 33,
									"value": "73"
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "MSTORE8",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 391,
									"end": 2030,
									"name": "RETURN",
									"source": 33
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220605a6592e671eda471bde748172b14b8b8f730033885e5ac70f29a3559bcea2864736f6c634300081a0033",
									".code": [
										{
											"begin": 391,
											"end": 2030,
											"name": "PUSHDEPLOYADDRESS",
											"source": 33
										},
										{
											"begin": 391,
											"end": 2030,
											"name": "ADDRESS",
											"source": 33
										},
										{
											"begin": 391,
											"end": 2030,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 391,
											"end": 2030,
											"name": "PUSH",
											"source": 33,
											"value": "80"
										},
										{
											"begin": 391,
											"end": 2030,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 2030,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 391,
											"end": 2030,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 2030,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 391,
											"end": 2030,
											"name": "REVERT",
											"source": 33
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These are suggested common commands, however additional commands should be defined as required Some of these actions are not supported in the Router contracts or Position Manager contracts, but are left as they may be helpful commands for other peripheral contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library to define different pool actions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol\":\"Actions\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol\":{\"keccak256\":\"0x8efd4b8b289177ee27e557d9d0a5a9f973d66fe1eb1ef8959d316b11987ca830\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07fe35f194eb99465028f0546359befea574d844da53767d32f22b233c3bcc98\",\"dweb:/ipfs/Qmc19631uFxABTHAbGrDrroexi9GdyxWntaum1v8npPYz5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Library to define different pool actions.",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol": {
				"BipsLibrary": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidBips",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "For calculating a percentage of an amount, using bips",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol\":122:624  library BipsLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol\":122:624  library BipsLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122052543489ba25edcf5608a3535bee4d22558636a24cfc051d3071cf537326f34264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122052543489ba25edcf5608a3535bee4d22558636a24cfc051d3071cf537326f34264736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE SLOAD CALLVALUE DUP10 0xBA 0x25 0xED 0xCF JUMP ADDMOD LOG3 MSTORE8 JUMPDEST 0xEE 0x4D 0x22 SSTORE DUP7 CALLDATASIZE LOG2 0x4C 0xFC SDIV SAR ADDRESS PUSH18 0xCF537326F34264736F6C634300081A003300 ",
							"sourceMap": "122:502:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122052543489ba25edcf5608a3535bee4d22558636a24cfc051d3071cf537326f34264736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE SLOAD CALLVALUE DUP10 0xBA 0x25 0xED 0xCF JUMP ADDMOD LOG3 MSTORE8 JUMPDEST 0xEE 0x4D 0x22 SSTORE DUP7 CALLDATASIZE LOG2 0x4C 0xFC SDIV SAR ADDRESS PUSH18 0xCF537326F34264736F6C634300081A003300 ",
							"sourceMap": "122:502:34:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"calculatePortion(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH #[$]",
									"source": 34,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH [$]",
									"source": 34,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH",
									"source": 34,
									"value": "B"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "DUP3",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "DUP3",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "DUP3",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "CODECOPY",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "DUP1",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "MLOAD",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH",
									"source": 34,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "BYTE",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH",
									"source": 34,
									"value": "73"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "EQ",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "JUMPI",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH",
									"source": 34,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH",
									"source": 34,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "MSTORE",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH",
									"source": 34,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH",
									"source": 34,
									"value": "4"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "MSTORE",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH",
									"source": 34,
									"value": "24"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH",
									"source": 34,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "REVERT",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "tag",
									"source": 34,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "ADDRESS",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH",
									"source": 34,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "MSTORE",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "PUSH",
									"source": 34,
									"value": "73"
								},
								{
									"begin": 122,
									"end": 624,
									"name": "DUP2",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "MSTORE8",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "DUP3",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "DUP2",
									"source": 34
								},
								{
									"begin": 122,
									"end": 624,
									"name": "RETURN",
									"source": 34
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052543489ba25edcf5608a3535bee4d22558636a24cfc051d3071cf537326f34264736f6c634300081a0033",
									".code": [
										{
											"begin": 122,
											"end": 624,
											"name": "PUSHDEPLOYADDRESS",
											"source": 34
										},
										{
											"begin": 122,
											"end": 624,
											"name": "ADDRESS",
											"source": 34
										},
										{
											"begin": 122,
											"end": 624,
											"name": "EQ",
											"source": 34
										},
										{
											"begin": 122,
											"end": 624,
											"name": "PUSH",
											"source": 34,
											"value": "80"
										},
										{
											"begin": 122,
											"end": 624,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 122,
											"end": 624,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 122,
											"end": 624,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 624,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 122,
											"end": 624,
											"name": "REVERT",
											"source": 34
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidBips\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"For calculating a percentage of an amount, using bips\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidBips()\":[{\"notice\":\"emitted when an invalid percentage is provided\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol\":\"BipsLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol\":{\"keccak256\":\"0x37ebf99f5d086d9d9f6e7cecbf4d62167f47c63c30248cfcb921e828f0d7a359\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4f8e68a66bb6c166d72cdba6ed6fb83a93f713b79c2c572e8058084eb90ab6c\",\"dweb:/ipfs/QmY32FxtSBRf9PJzNUVzXqFY4i2ApTPHTUMpCBGovd2zo3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"InvalidBips()": [
								{
									"notice": "emitted when an invalid percentage is provided"
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol": {
				"CalldataDecoder": {
					"abi": [
						{
							"inputs": [],
							"name": "SliceOutOfBounds",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"OFFSET_OR_LENGTH_MASK": {
								"details": "no sane abi encoding will pass in an offset or length greater than type(uint32).max      (note that this does deviate from standard solidity behavior and offsets/lengths will      be interpreted as mod type(uint32).max which will only impact malicious/buggy callers)"
							}
						},
						"title": "Library for abi decoding in calldata",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol\":291:16476  library CalldataDecoder {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol\":291:16476  library CalldataDecoder {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a85038830c20af161946508d2615d6faa0d6e91a000fd1806f33d23f3325178164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a85038830c20af161946508d2615d6faa0d6e91a000fd1806f33d23f3325178164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 POP CODESIZE DUP4 0xC KECCAK256 0xAF AND NOT CHAINID POP DUP14 0x26 ISZERO 0xD6 STATICCALL LOG0 0xD6 0xE9 BYTE STOP 0xF 0xD1 DUP1 PUSH16 0x33D23F3325178164736F6C634300081A STOP CALLER ",
							"sourceMap": "291:16185:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a85038830c20af161946508d2615d6faa0d6e91a000fd1806f33d23f3325178164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 POP CODESIZE DUP4 0xC KECCAK256 0xAF AND NOT CHAINID POP DUP14 0x26 ISZERO 0xD6 STATICCALL LOG0 0xD6 0xE9 BYTE STOP 0xF 0xD1 DUP1 PUSH16 0x33D23F3325178164736F6C634300081A STOP CALLER ",
							"sourceMap": "291:16185:35:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"decodeActionsRouterParams(bytes calldata)": "infinite",
								"decodeBurnParams(bytes calldata)": "infinite",
								"decodeCurrency(bytes calldata)": "infinite",
								"decodeCurrencyAddressAndUint256(bytes calldata)": "infinite",
								"decodeCurrencyAndAddress(bytes calldata)": "infinite",
								"decodeCurrencyAndUint256(bytes calldata)": "infinite",
								"decodeCurrencyPair(bytes calldata)": "infinite",
								"decodeCurrencyPairAndAddress(bytes calldata)": "infinite",
								"decodeCurrencyUint256AndBool(bytes calldata)": "infinite",
								"decodeIncreaseLiquidityFromDeltasParams(bytes calldata)": "infinite",
								"decodeMintFromDeltasParams(bytes calldata)": "infinite",
								"decodeMintParams(bytes calldata)": "infinite",
								"decodeModifyLiquidityParams(bytes calldata)": "infinite",
								"decodeSwapExactInParams(bytes calldata)": "infinite",
								"decodeSwapExactInSingleParams(bytes calldata)": "infinite",
								"decodeSwapExactOutParams(bytes calldata)": "infinite",
								"decodeSwapExactOutSingleParams(bytes calldata)": "infinite",
								"decodeUint256(bytes calldata)": "infinite",
								"toBytes(bytes calldata,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH #[$]",
									"source": 35,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH [$]",
									"source": 35,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH",
									"source": 35,
									"value": "B"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "DUP3",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "DUP3",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "DUP3",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "CODECOPY",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "DUP1",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "MLOAD",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH",
									"source": 35,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "BYTE",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH",
									"source": 35,
									"value": "73"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "EQ",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH [tag]",
									"source": 35,
									"value": "1"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "JUMPI",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH",
									"source": 35,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH",
									"source": 35,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "MSTORE",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH",
									"source": 35,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH",
									"source": 35,
									"value": "4"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "MSTORE",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH",
									"source": 35,
									"value": "24"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH",
									"source": 35,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "REVERT",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "tag",
									"source": 35,
									"value": "1"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "JUMPDEST",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "ADDRESS",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH",
									"source": 35,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "MSTORE",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "PUSH",
									"source": 35,
									"value": "73"
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "DUP2",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "MSTORE8",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "DUP3",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "DUP2",
									"source": 35
								},
								{
									"begin": 291,
									"end": 16476,
									"name": "RETURN",
									"source": 35
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a85038830c20af161946508d2615d6faa0d6e91a000fd1806f33d23f3325178164736f6c634300081a0033",
									".code": [
										{
											"begin": 291,
											"end": 16476,
											"name": "PUSHDEPLOYADDRESS",
											"source": 35
										},
										{
											"begin": 291,
											"end": 16476,
											"name": "ADDRESS",
											"source": 35
										},
										{
											"begin": 291,
											"end": 16476,
											"name": "EQ",
											"source": 35
										},
										{
											"begin": 291,
											"end": 16476,
											"name": "PUSH",
											"source": 35,
											"value": "80"
										},
										{
											"begin": 291,
											"end": 16476,
											"name": "PUSH",
											"source": 35,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 16476,
											"name": "MSTORE",
											"source": 35
										},
										{
											"begin": 291,
											"end": 16476,
											"name": "PUSH",
											"source": 35,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 16476,
											"name": "DUP1",
											"source": 35
										},
										{
											"begin": 291,
											"end": 16476,
											"name": "REVERT",
											"source": 35
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SliceOutOfBounds\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"OFFSET_OR_LENGTH_MASK\":{\"details\":\"no sane abi encoding will pass in an offset or length greater than type(uint32).max      (note that this does deviate from standard solidity behavior and offsets/lengths will      be interpreted as mod type(uint32).max which will only impact malicious/buggy callers)\"}},\"title\":\"Library for abi decoding in calldata\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol\":\"CalldataDecoder\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"@uniswap/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"@uniswap/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol\":{\"keccak256\":\"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341\",\"dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq\"]},\"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol\":{\"keccak256\":\"0xc4133fae25e61cc2447d7331729f6035322d7c1fe26b39b225422bf98cc63459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c24ff8428504e973e947a059f96289a66c520cd7f8ef47a3224f9cb6abdaf25\",\"dweb:/ipfs/QmVqxYnngWXXcCiuTC143vTEJrjZK5NXWB92pjvVbuJBQ5\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol\":{\"keccak256\":\"0x26df49e13fb5410fd4db253cca877dfdfb3a1ba03e394d054c0e0514a88a56e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72a0c98c52171708f332f83d517deeb97fdd50ecf28f2510e1866e54593a6ff8\",\"dweb:/ipfs/QmY4LiDUfSKGj86nML7B6a8euiPciUqwYehasAyAVnMCHq\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol\":{\"keccak256\":\"0xbbd79ffefe045f025263e389539021266fb4d371463aefba405e1ff1d3fcf9bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d1c47b81a01218be46ee79f0a8837095479b94dc5cfd18abbf2006709f0ea89\",\"dweb:/ipfs/QmRb6CQ13Zp7f3WF5jbZtsF2szhxpPgcuWs9mjwQXxzqtg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol": {
				"PathKeyLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "PathKey Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol\":503:1364  library PathKeyLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol\":503:1364  library PathKeyLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203c32dcacf5552d5c570f3cd5d83a69c8862dbcaab0531af99b369eadbb96afac64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203c32dcacf5552d5c570f3cd5d83a69c8862dbcaab0531af99b369eadbb96afac64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY ORIGIN 0xDC 0xAC CREATE2 SSTORE 0x2D TLOAD JUMPI 0xF EXTCODECOPY 0xD5 0xD8 GASPRICE PUSH10 0xC8862DBCAAB0531AF99B CALLDATASIZE SWAP15 0xAD 0xBB SWAP7 0xAF 0xAC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "503:861:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203c32dcacf5552d5c570f3cd5d83a69c8862dbcaab0531af99b369eadbb96afac64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY ORIGIN 0xDC 0xAC CREATE2 SSTORE 0x2D TLOAD JUMPI 0xF EXTCODECOPY 0xD5 0xD8 GASPRICE PUSH10 0xC8862DBCAAB0531AF99B CALLDATASIZE SWAP15 0xAD 0xBB SWAP7 0xAF 0xAC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "503:861:36:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getPoolAndSwapDirection(struct PathKey calldata,Currency)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH #[$]",
									"source": 36,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH [$]",
									"source": 36,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH",
									"source": 36,
									"value": "B"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "DUP3",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "DUP3",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "DUP3",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "CODECOPY",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "DUP1",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "MLOAD",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH",
									"source": 36,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "BYTE",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH",
									"source": 36,
									"value": "73"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "EQ",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 36,
									"value": "1"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "JUMPI",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH",
									"source": 36,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH",
									"source": 36,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "MSTORE",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH",
									"source": 36,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH",
									"source": 36,
									"value": "4"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "MSTORE",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH",
									"source": 36,
									"value": "24"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH",
									"source": 36,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "REVERT",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "tag",
									"source": 36,
									"value": "1"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "ADDRESS",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH",
									"source": 36,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "MSTORE",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "PUSH",
									"source": 36,
									"value": "73"
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "DUP2",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "MSTORE8",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "DUP3",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "DUP2",
									"source": 36
								},
								{
									"begin": 503,
									"end": 1364,
									"name": "RETURN",
									"source": 36
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203c32dcacf5552d5c570f3cd5d83a69c8862dbcaab0531af99b369eadbb96afac64736f6c634300081a0033",
									".code": [
										{
											"begin": 503,
											"end": 1364,
											"name": "PUSHDEPLOYADDRESS",
											"source": 36
										},
										{
											"begin": 503,
											"end": 1364,
											"name": "ADDRESS",
											"source": 36
										},
										{
											"begin": 503,
											"end": 1364,
											"name": "EQ",
											"source": 36
										},
										{
											"begin": 503,
											"end": 1364,
											"name": "PUSH",
											"source": 36,
											"value": "80"
										},
										{
											"begin": 503,
											"end": 1364,
											"name": "PUSH",
											"source": 36,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 1364,
											"name": "MSTORE",
											"source": 36
										},
										{
											"begin": 503,
											"end": 1364,
											"name": "PUSH",
											"source": 36,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 1364,
											"name": "DUP1",
											"source": 36
										},
										{
											"begin": 503,
											"end": 1364,
											"name": "REVERT",
											"source": 36
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v4-core/src/interfaces/IExtsload.sol",
								"@uniswap/v4-core/src/interfaces/IExttload.sol",
								"@uniswap/v4-core/src/interfaces/IHooks.sol",
								"@uniswap/v4-core/src/interfaces/IPoolManager.sol",
								"@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
								"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
								"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
								"@uniswap/v4-core/src/libraries/BitMath.sol",
								"@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
								"@uniswap/v4-core/src/libraries/CustomRevert.sol",
								"@uniswap/v4-core/src/libraries/Lock.sol",
								"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
								"@uniswap/v4-core/src/libraries/SafeCast.sol",
								"@uniswap/v4-core/src/libraries/TickMath.sol",
								"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
								"@uniswap/v4-core/src/types/BalanceDelta.sol",
								"@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
								"@uniswap/v4-core/src/types/Currency.sol",
								"@uniswap/v4-core/src/types/PoolId.sol",
								"@uniswap/v4-core/src/types/PoolKey.sol",
								"@uniswap/v4-core/src/types/PoolOperation.sol",
								"contracts/Transaction.sol",
								"https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
								"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
								"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"PathKey Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions for working with PathKeys\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol\":\"PathKeyLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"@uniswap/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"@uniswap/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"@uniswap/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"@uniswap/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"@uniswap/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"@uniswap/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"@uniswap/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"@uniswap/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol\":{\"keccak256\":\"0xbbd79ffefe045f025263e389539021266fb4d371463aefba405e1ff1d3fcf9bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d1c47b81a01218be46ee79f0a8837095479b94dc5cfd18abbf2006709f0ea89\",\"dweb:/ipfs/QmRb6CQ13Zp7f3WF5jbZtsF2szhxpPgcuWs9mjwQXxzqtg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions for working with PathKeys",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2394",
				"formattedMessage": "Warning: Transient storage as defined by EIP-1153 can break the composability of smart contracts: Since transient storage is cleared only at the end of the transaction and not at the end of the outermost call frame to the contract within a transaction, your contract may unintentionally misbehave when invoked multiple times in a complex transaction. To avoid this, be sure to clear all transient storage at the end of any call to your contract. The use of transient storage for reentrancy guards that are cleared at the end of the call is safe.\n  --> @uniswap/v4-core/src/libraries/CurrencyReserves.sol:23:13:\n   |\n23 |             tstore(CURRENCY_SLOT, 0)\n   |             ^^^^^^\n\n",
				"message": "Transient storage as defined by EIP-1153 can break the composability of smart contracts: Since transient storage is cleared only at the end of the transaction and not at the end of the outermost call frame to the contract within a transaction, your contract may unintentionally misbehave when invoked multiple times in a complex transaction. To avoid this, be sure to clear all transient storage at the end of any call to your contract. The use of transient storage for reentrancy guards that are cleared at the end of the call is safe.",
				"severity": "warning",
				"sourceLocation": {
					"end": 811,
					"file": "@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
					"start": 805
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"@uniswap/v4-core/src/interfaces/IExtsload.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/interfaces/IExtsload.sol",
					"exportedSymbols": {
						"IExtsload": [
							110
						]
					},
					"id": 111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IExtsload",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "57:77:1",
								"text": "@notice Interface for functions to access any storage slot in a contract"
							},
							"fullyImplemented": false,
							"id": 110,
							"linearizedBaseContracts": [
								110
							],
							"name": "IExtsload",
							"nameLocation": "144:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "160:166:1",
										"text": "@notice Called by external contracts to access granular pool state\n @param slot Key of slot to sload\n @return value The value of the slot as bytes32"
									},
									"functionSelector": "1e2eaeaf",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "extsload",
									"nameLocation": "340:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "357:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "349:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:14:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "394:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "386:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 85,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "385:15:1"
									},
									"scope": 110,
									"src": "331:70:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "407:240:1",
										"text": "@notice Called by external contracts to access granular pool state\n @param startSlot Key of slot to start sloading from\n @param nSlots Number of slots to load into return value\n @return values List of loaded values."
									},
									"functionSelector": "35fd631a",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "extsload",
									"nameLocation": "661:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "startSlot",
												"nameLocation": "678:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "670:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 90,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "nSlots",
												"nameLocation": "697:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "689:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:35:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "745:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "728:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 95,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "728:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 96,
													"nodeType": "ArrayTypeName",
													"src": "728:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:25:1"
									},
									"scope": 110,
									"src": "652:101:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "759:164:1",
										"text": "@notice Called by external contracts to access sparse pool state\n @param slots List of slots to SLOAD from.\n @return values List of loaded values."
									},
									"functionSelector": "dbd035ff",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "extsload",
									"nameLocation": "937:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "slots",
												"nameLocation": "965:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "946:24:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 101,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "946:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 102,
													"nodeType": "ArrayTypeName",
													"src": "946:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:26:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1012:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "995:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 105,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 106,
													"nodeType": "ArrayTypeName",
													"src": "995:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:25:1"
									},
									"scope": 110,
									"src": "928:92:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 111,
							"src": "134:888:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:991:1"
				},
				"id": 1
			},
			"@uniswap/v4-core/src/interfaces/IExttload.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/interfaces/IExttload.sol",
					"exportedSymbols": {
						"IExttload": [
							132
						]
					},
					"id": 133,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 112,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IExttload",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 113,
								"nodeType": "StructuredDocumentation",
								"src": "58:87:2",
								"text": "@notice Interface for functions to access any transient storage slot in a contract"
							},
							"fullyImplemented": false,
							"id": 132,
							"linearizedBaseContracts": [
								132
							],
							"name": "IExttload",
							"nameLocation": "155:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "171:180:2",
										"text": "@notice Called by external contracts to access transient storage of the contract\n @param slot Key of slot to tload\n @return value The value of the slot as bytes32"
									},
									"functionSelector": "f135baaa",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exttload",
									"nameLocation": "365:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "382:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "374:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 115,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "373:14:2"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "419:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "411:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:15:2"
									},
									"scope": 132,
									"src": "356:70:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "432:167:2",
										"text": "@notice Called by external contracts to access sparse transient pool state\n @param slots List of slots to tload\n @return values List of loaded values"
									},
									"functionSelector": "9bf6645f",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exttload",
									"nameLocation": "613:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "slots",
												"nameLocation": "641:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "622:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 123,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "622:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 124,
													"nodeType": "ArrayTypeName",
													"src": "622:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:26:2"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "688:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "671:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 127,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 128,
													"nodeType": "ArrayTypeName",
													"src": "671:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:25:2"
									},
									"scope": 132,
									"src": "604:92:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 133,
							"src": "145:553:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:667:2"
				},
				"id": 2
			},
			"@uniswap/v4-core/src/interfaces/IHooks.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/interfaces/IHooks.sol",
					"exportedSymbols": {
						"BalanceDelta": [
							2000
						],
						"BeforeSwapDelta": [
							2162
						],
						"IHooks": [
							331
						],
						"ModifyLiquidityParams": [
							2576
						],
						"PoolKey": [
							2560
						],
						"SwapParams": [
							2587
						]
					},
					"id": 332,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 134,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolKey.sol",
							"file": "../types/PoolKey.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 332,
							"sourceUnit": 2561,
							"src": "57:45:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 135,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2560,
										"src": "65:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/BalanceDelta.sol",
							"file": "../types/BalanceDelta.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 332,
							"sourceUnit": 2159,
							"src": "103:55:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 137,
										"name": "BalanceDelta",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2000,
										"src": "111:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolOperation.sol",
							"file": "../types/PoolOperation.sol",
							"id": 141,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 332,
							"sourceUnit": 2588,
							"src": "159:77:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "ModifyLiquidityParams",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2576,
										"src": "167:21:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 140,
										"name": "SwapParams",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2587,
										"src": "190:10:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
							"file": "../types/BeforeSwapDelta.sol",
							"id": 143,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 332,
							"sourceUnit": 2207,
							"src": "237:61:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 142,
										"name": "BeforeSwapDelta",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2162,
										"src": "245:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IHooks",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 144,
								"nodeType": "StructuredDocumentation",
								"src": "300:485:3",
								"text": "@notice V4 decides whether to invoke specific hooks by inspecting the least significant bits\n of the address that the hooks contract is deployed to.\n For example, a hooks contract deployed to address: 0x0000000000000000000000000000000000002400\n has the lowest bits '10 0100 0000 0000' which would cause the 'before initialize' and 'after add liquidity' hooks to be used.\n See the Hooks library for the full spec.\n @dev Should only be callable by the v4 PoolManager."
							},
							"fullyImplemented": false,
							"id": 331,
							"linearizedBaseContracts": [
								331
							],
							"name": "IHooks",
							"nameLocation": "795:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "808:322:3",
										"text": "@notice The hook called before the state of a pool is initialized\n @param sender The initial msg.sender for the initialize call\n @param key The key for the pool being initialized\n @param sqrtPriceX96 The sqrt(price) of the pool as a Q64.96\n @return bytes4 The function selector for the hook"
									},
									"functionSelector": "dc98354e",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeInitialize",
									"nameLocation": "1144:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1169:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1161:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1194:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1177:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 149,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 148,
														"name": "PoolKey",
														"nameLocations": [
															"1177:7:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "1177:7:3"
													},
													"referencedDeclaration": 2560,
													"src": "1177:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1207:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1199:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 151,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1160:60:3"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1239:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 154,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1239:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1238:8:3"
									},
									"scope": 331,
									"src": "1135:112:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1253:399:3",
										"text": "@notice The hook called after the state of a pool is initialized\n @param sender The initial msg.sender for the initialize call\n @param key The key for the pool being initialized\n @param sqrtPriceX96 The sqrt(price) of the pool as a Q64.96\n @param tick The current tick after the state of a pool is initialized\n @return bytes4 The function selector for the hook"
									},
									"functionSelector": "6fe7e6eb",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterInitialize",
									"nameLocation": "1666:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1690:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1682:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1715:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1698:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 162,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 161,
														"name": "PoolKey",
														"nameLocations": [
															"1698:7:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "1698:7:3"
													},
													"referencedDeclaration": 2560,
													"src": "1698:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1728:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1720:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 164,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1748:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1742:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 166,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1742:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1681:72:3"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1788:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 169,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1788:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1787:8:3"
									},
									"scope": 331,
									"src": "1657:139:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "1802:402:3",
										"text": "@notice The hook called before liquidity is added\n @param sender The initial msg.sender for the add liquidity call\n @param key The key for the pool\n @param params The parameters for adding liquidity\n @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\n @return bytes4 The function selector for the hook"
									},
									"functionSelector": "259982e5",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeAddLiquidity",
									"nameLocation": "2218:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2254:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2246:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2287:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2270:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 177,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 176,
														"name": "PoolKey",
														"nameLocations": [
															"2270:7:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "2270:7:3"
													},
													"referencedDeclaration": 2560,
													"src": "2270:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2331:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2300:37:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ModifyLiquidityParams_$2576_calldata_ptr",
													"typeString": "struct ModifyLiquidityParams"
												},
												"typeName": {
													"id": 180,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 179,
														"name": "ModifyLiquidityParams",
														"nameLocations": [
															"2300:21:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "2300:21:3"
													},
													"referencedDeclaration": 2576,
													"src": "2300:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ModifyLiquidityParams_$2576_storage_ptr",
														"typeString": "struct ModifyLiquidityParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "2362:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2347:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2347:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2236:140:3"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2395:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 185,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2395:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:8:3"
									},
									"scope": 331,
									"src": "2209:194:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2409:781:3",
										"text": "@notice The hook called after liquidity is added\n @param sender The initial msg.sender for the add liquidity call\n @param key The key for the pool\n @param params The parameters for adding liquidity\n @param delta The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\n @param feesAccrued The fees accrued since the last time fees were collected from this position\n @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\n @return bytes4 The function selector for the hook\n @return BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
									},
									"functionSelector": "9f063efc",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterAddLiquidity",
									"nameLocation": "3204:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3239:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3231:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3231:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3272:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3255:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "PoolKey",
														"nameLocations": [
															"3255:7:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "3255:7:3"
													},
													"referencedDeclaration": 2560,
													"src": "3255:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "3316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3285:37:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ModifyLiquidityParams_$2576_calldata_ptr",
													"typeString": "struct ModifyLiquidityParams"
												},
												"typeName": {
													"id": 196,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 195,
														"name": "ModifyLiquidityParams",
														"nameLocations": [
															"3285:21:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "3285:21:3"
													},
													"referencedDeclaration": 2576,
													"src": "3285:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ModifyLiquidityParams_$2576_storage_ptr",
														"typeString": "struct ModifyLiquidityParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "3345:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3332:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 199,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 198,
														"name": "BalanceDelta",
														"nameLocations": [
															"3332:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "3332:12:3"
													},
													"referencedDeclaration": 2000,
													"src": "3332:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "feesAccrued",
												"nameLocation": "3373:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3360:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 202,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 201,
														"name": "BalanceDelta",
														"nameLocations": [
															"3360:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "3360:12:3"
													},
													"referencedDeclaration": 2000,
													"src": "3360:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "3409:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3394:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3394:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:202:3"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3442:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 207,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3442:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3450:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 209,
														"name": "BalanceDelta",
														"nameLocations": [
															"3450:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "3450:12:3"
													},
													"referencedDeclaration": 2000,
													"src": "3450:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3441:22:3"
									},
									"scope": 331,
									"src": "3195:269:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "3470:412:3",
										"text": "@notice The hook called before liquidity is removed\n @param sender The initial msg.sender for the remove liquidity call\n @param key The key for the pool\n @param params The parameters for removing liquidity\n @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\n @return bytes4 The function selector for the hook"
									},
									"functionSelector": "21d0ee70",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeRemoveLiquidity",
									"nameLocation": "3896:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3935:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3927:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3927:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3968:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3951:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 218,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 217,
														"name": "PoolKey",
														"nameLocations": [
															"3951:7:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "3951:7:3"
													},
													"referencedDeclaration": 2560,
													"src": "3951:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "4012:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3981:37:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ModifyLiquidityParams_$2576_calldata_ptr",
													"typeString": "struct ModifyLiquidityParams"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "ModifyLiquidityParams",
														"nameLocations": [
															"3981:21:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "3981:21:3"
													},
													"referencedDeclaration": 2576,
													"src": "3981:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ModifyLiquidityParams_$2576_storage_ptr",
														"typeString": "struct ModifyLiquidityParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "4043:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "4028:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4028:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3917:140:3"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "4076:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 226,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4076:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:8:3"
									},
									"scope": 331,
									"src": "3887:197:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "4090:793:3",
										"text": "@notice The hook called after liquidity is removed\n @param sender The initial msg.sender for the remove liquidity call\n @param key The key for the pool\n @param params The parameters for removing liquidity\n @param delta The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\n @param feesAccrued The fees accrued since the last time fees were collected from this position\n @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\n @return bytes4 The function selector for the hook\n @return BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
									},
									"functionSelector": "6c2bbe7e",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterRemoveLiquidity",
									"nameLocation": "4897:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4935:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4927:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4927:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4968:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4951:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 234,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 233,
														"name": "PoolKey",
														"nameLocations": [
															"4951:7:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "4951:7:3"
													},
													"referencedDeclaration": 2560,
													"src": "4951:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "5012:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4981:37:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ModifyLiquidityParams_$2576_calldata_ptr",
													"typeString": "struct ModifyLiquidityParams"
												},
												"typeName": {
													"id": 237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 236,
														"name": "ModifyLiquidityParams",
														"nameLocations": [
															"4981:21:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "4981:21:3"
													},
													"referencedDeclaration": 2576,
													"src": "4981:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ModifyLiquidityParams_$2576_storage_ptr",
														"typeString": "struct ModifyLiquidityParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "5041:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5028:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 239,
														"name": "BalanceDelta",
														"nameLocations": [
															"5028:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "5028:12:3"
													},
													"referencedDeclaration": 2000,
													"src": "5028:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "feesAccrued",
												"nameLocation": "5069:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5056:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 243,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 242,
														"name": "BalanceDelta",
														"nameLocations": [
															"5056:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "5056:12:3"
													},
													"referencedDeclaration": 2000,
													"src": "5056:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "5105:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5090:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5090:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4917:202:3"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5138:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 248,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5138:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5146:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 251,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 250,
														"name": "BalanceDelta",
														"nameLocations": [
															"5146:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "5146:12:3"
													},
													"referencedDeclaration": 2000,
													"src": "5146:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5137:22:3"
									},
									"scope": 331,
									"src": "4888:272:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5166:790:3",
										"text": "@notice The hook called before a swap\n @param sender The initial msg.sender for the swap call\n @param key The key for the pool\n @param params The parameters for the swap\n @param hookData Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\n @return bytes4 The function selector for the hook\n @return BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\n @return uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"
									},
									"functionSelector": "575e24b4",
									"id": 275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeSwap",
									"nameLocation": "5970:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5989:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "5981:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5981:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6014:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "5997:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 259,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 258,
														"name": "PoolKey",
														"nameLocations": [
															"5997:7:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "5997:7:3"
													},
													"referencedDeclaration": 2560,
													"src": "5997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6039:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "6019:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SwapParams_$2587_calldata_ptr",
													"typeString": "struct SwapParams"
												},
												"typeName": {
													"id": 262,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 261,
														"name": "SwapParams",
														"nameLocations": [
															"6019:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2587,
														"src": "6019:10:3"
													},
													"referencedDeclaration": 2587,
													"src": "6019:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SwapParams_$2587_storage_ptr",
														"typeString": "struct SwapParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "6062:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "6047:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6047:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5980:91:3"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "6106:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 267,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6106:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "6114:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$2162",
													"typeString": "BeforeSwapDelta"
												},
												"typeName": {
													"id": 270,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 269,
														"name": "BeforeSwapDelta",
														"nameLocations": [
															"6114:15:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2162,
														"src": "6114:15:3"
													},
													"referencedDeclaration": 2162,
													"src": "6114:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$2162",
														"typeString": "BeforeSwapDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "6131:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 272,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "6131:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6105:33:3"
									},
									"scope": 331,
									"src": "5961:178:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "6145:602:3",
										"text": "@notice The hook called after a swap\n @param sender The initial msg.sender for the swap call\n @param key The key for the pool\n @param params The parameters for the swap\n @param delta The amount owed to the caller (positive) or owed to the pool (negative)\n @param hookData Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\n @return bytes4 The function selector for the hook\n @return int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
									},
									"functionSelector": "b47b2fb1",
									"id": 296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterSwap",
									"nameLocation": "6761:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6788:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6780:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6780:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6821:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6804:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "PoolKey",
														"nameLocations": [
															"6804:7:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "6804:7:3"
													},
													"referencedDeclaration": 2560,
													"src": "6804:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6854:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6834:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SwapParams_$2587_calldata_ptr",
													"typeString": "struct SwapParams"
												},
												"typeName": {
													"id": 283,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 282,
														"name": "SwapParams",
														"nameLocations": [
															"6834:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2587,
														"src": "6834:10:3"
													},
													"referencedDeclaration": 2587,
													"src": "6834:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SwapParams_$2587_storage_ptr",
														"typeString": "struct SwapParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "6883:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6870:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 286,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 285,
														"name": "BalanceDelta",
														"nameLocations": [
															"6870:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "6870:12:3"
													},
													"referencedDeclaration": 2000,
													"src": "6870:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "6913:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6898:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6898:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:157:3"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6946:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 291,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6946:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6954:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 293,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "6954:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6945:16:3"
									},
									"scope": 331,
									"src": "6752:210:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "6968:431:3",
										"text": "@notice The hook called before donate\n @param sender The initial msg.sender for the donate call\n @param key The key for the pool\n @param amount0 The amount of token0 being donated\n @param amount1 The amount of token1 being donated\n @param hookData Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\n @return bytes4 The function selector for the hook"
									},
									"functionSelector": "b6a8b0fa",
									"id": 313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeDonate",
									"nameLocation": "7413:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7443:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "7435:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7435:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7476:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "7459:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 300,
														"name": "PoolKey",
														"nameLocations": [
															"7459:7:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "7459:7:3"
													},
													"referencedDeclaration": 2560,
													"src": "7459:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "7497:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "7489:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "7522:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "7514:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7514:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "7554:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "7539:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7539:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7425:143:3"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "7587:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 310,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "7587:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:8:3"
									},
									"scope": 331,
									"src": "7404:191:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "7601:430:3",
										"text": "@notice The hook called after donate\n @param sender The initial msg.sender for the donate call\n @param key The key for the pool\n @param amount0 The amount of token0 being donated\n @param amount1 The amount of token1 being donated\n @param hookData Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\n @return bytes4 The function selector for the hook"
									},
									"functionSelector": "e1b4af69",
									"id": 330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterDonate",
									"nameLocation": "8045:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8074:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8066:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8066:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "8107:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8090:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 318,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 317,
														"name": "PoolKey",
														"nameLocations": [
															"8090:7:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "8090:7:3"
													},
													"referencedDeclaration": 2560,
													"src": "8090:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "8128:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8120:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8120:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "8153:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8145:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8145:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "8185:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8170:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8170:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8056:143:3"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8218:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 327,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "8218:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8217:8:3"
									},
									"scope": 331,
									"src": "8036:190:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 332,
							"src": "785:7443:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:8197:3"
				},
				"id": 3
			},
			"@uniswap/v4-core/src/interfaces/IPoolManager.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
					"exportedSymbols": {
						"BalanceDelta": [
							2000
						],
						"Currency": [
							2214
						],
						"IERC6909Claims": [
							889
						],
						"IExtsload": [
							110
						],
						"IExttload": [
							132
						],
						"IHooks": [
							331
						],
						"IPoolManager": [
							614
						],
						"IProtocolFees": [
							691
						],
						"ModifyLiquidityParams": [
							2576
						],
						"PoolId": [
							2514
						],
						"PoolKey": [
							2560
						],
						"SwapParams": [
							2587
						]
					},
					"id": 615,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 333,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/Currency.sol",
							"file": "../types/Currency.sol",
							"id": 335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 2509,
							"src": "58:47:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 334,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2214,
										"src": "66:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolKey.sol",
							"file": "../types/PoolKey.sol",
							"id": 337,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 2561,
							"src": "106:45:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 336,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2560,
										"src": "114:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/IHooks.sol",
							"file": "./IHooks.sol",
							"id": 339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 332,
							"src": "152:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 338,
										"name": "IHooks",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 331,
										"src": "160:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
							"file": "./external/IERC6909Claims.sol",
							"id": 341,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 890,
							"src": "189:61:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 340,
										"name": "IERC6909Claims",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 889,
										"src": "197:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
							"file": "./IProtocolFees.sol",
							"id": 343,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 692,
							"src": "251:50:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 342,
										"name": "IProtocolFees",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 691,
										"src": "259:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/BalanceDelta.sol",
							"file": "../types/BalanceDelta.sol",
							"id": 345,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 2159,
							"src": "302:55:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 344,
										"name": "BalanceDelta",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2000,
										"src": "310:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolId.sol",
							"file": "../types/PoolId.sol",
							"id": 347,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 2529,
							"src": "358:43:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 346,
										"name": "PoolId",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2514,
										"src": "366:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/IExtsload.sol",
							"file": "./IExtsload.sol",
							"id": 349,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 111,
							"src": "402:42:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 348,
										"name": "IExtsload",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 110,
										"src": "410:9:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/IExttload.sol",
							"file": "./IExttload.sol",
							"id": 351,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 133,
							"src": "445:42:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 350,
										"name": "IExttload",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 132,
										"src": "453:9:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolOperation.sol",
							"file": "../types/PoolOperation.sol",
							"id": 354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 2588,
							"src": "488:77:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "ModifyLiquidityParams",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2576,
										"src": "496:21:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 353,
										"name": "SwapParams",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2587,
										"src": "519:10:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 356,
										"name": "IProtocolFees",
										"nameLocations": [
											"635:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 691,
										"src": "635:13:4"
									},
									"id": 357,
									"nodeType": "InheritanceSpecifier",
									"src": "635:13:4"
								},
								{
									"baseName": {
										"id": 358,
										"name": "IERC6909Claims",
										"nameLocations": [
											"650:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 889,
										"src": "650:14:4"
									},
									"id": 359,
									"nodeType": "InheritanceSpecifier",
									"src": "650:14:4"
								},
								{
									"baseName": {
										"id": 360,
										"name": "IExtsload",
										"nameLocations": [
											"666:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 110,
										"src": "666:9:4"
									},
									"id": 361,
									"nodeType": "InheritanceSpecifier",
									"src": "666:9:4"
								},
								{
									"baseName": {
										"id": 362,
										"name": "IExttload",
										"nameLocations": [
											"677:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 132,
										"src": "677:9:4"
									},
									"id": 363,
									"nodeType": "InheritanceSpecifier",
									"src": "677:9:4"
								}
							],
							"canonicalName": "IPoolManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 355,
								"nodeType": "StructuredDocumentation",
								"src": "567:42:4",
								"text": "@notice Interface for the PoolManager"
							},
							"fullyImplemented": false,
							"id": 614,
							"linearizedBaseContracts": [
								614,
								132,
								110,
								889,
								691
							],
							"name": "IPoolManager",
							"nameLocation": "619:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "693:83:4",
										"text": "@notice Thrown when a currency is not netted out after the contract is unlocked"
									},
									"errorSelector": "5212cba1",
									"id": 366,
									"name": "CurrencyNotSettled",
									"nameLocation": "787:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:4"
									},
									"src": "781:27:4"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "814:70:4",
										"text": "@notice Thrown when trying to interact with a non-initialized pool"
									},
									"errorSelector": "486aa307",
									"id": 369,
									"name": "PoolNotInitialized",
									"nameLocation": "895:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:4"
									},
									"src": "889:27:4"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "922:78:4",
										"text": "@notice Thrown when unlock is called, but the contract is already unlocked"
									},
									"errorSelector": "5090d6c6",
									"id": 372,
									"name": "AlreadyUnlocked",
									"nameLocation": "1011:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:4"
									},
									"src": "1005:24:4"
								},
								{
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "1035:101:4",
										"text": "@notice Thrown when a function is called that requires the contract to be unlocked, but it is not"
									},
									"errorSelector": "54e3ca0d",
									"id": 375,
									"name": "ManagerLocked",
									"nameLocation": "1147:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1160:2:4"
									},
									"src": "1141:22:4"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "1169:96:4",
										"text": "@notice Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow"
									},
									"errorSelector": "b70024f8",
									"id": 380,
									"name": "TickSpacingTooLarge",
									"nameLocation": "1276:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1302:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "1296:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 377,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1296:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1295:19:4"
									},
									"src": "1270:45:4"
								},
								{
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1321:81:4",
										"text": "@notice Pools must have a positive non-zero tickSpacing passed to #initialize"
									},
									"errorSelector": "e9e90588",
									"id": 385,
									"name": "TickSpacingTooSmall",
									"nameLocation": "1413:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1439:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1433:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 382,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1433:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1432:19:4"
									},
									"src": "1407:45:4"
								},
								{
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1458:86:4",
										"text": "@notice PoolKey must have currencies where address(currency0) < address(currency1)"
									},
									"errorSelector": "6e6c9830",
									"id": 392,
									"name": "CurrenciesOutOfOrderOrEqual",
									"nameLocation": "1555:27:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "currency0",
												"nameLocation": "1591:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1583:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "currency1",
												"nameLocation": "1610:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1602:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:38:4"
									},
									"src": "1549:72:4"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1627:156:4",
										"text": "@notice Thrown when a call to updateDynamicLPFee is made by an address that is not the hook,\n or on a pool that does not have a dynamic swap fee."
									},
									"errorSelector": "30d21641",
									"id": 395,
									"name": "UnauthorizedDynamicLPFeeUpdate",
									"nameLocation": "1794:30:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1824:2:4"
									},
									"src": "1788:39:4"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "1833:50:4",
										"text": "@notice Thrown when trying to swap amount of 0"
									},
									"errorSelector": "be8b8507",
									"id": 398,
									"name": "SwapAmountCannotBeZero",
									"nameLocation": "1894:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:2:4"
									},
									"src": "1888:31:4"
								},
								{
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "1925:75:4",
										"text": "@notice Thrown when native currency is passed to a non native settlement"
									},
									"errorSelector": "b0ec849e",
									"id": 401,
									"name": "NonzeroNativeValue",
									"nameLocation": "2011:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2029:2:4"
									},
									"src": "2005:27:4"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "2038:110:4",
										"text": "@notice Thrown when `clear` is called with an amount that is not exactly equal to the open currency delta."
									},
									"errorSelector": "bda73abf",
									"id": 404,
									"name": "MustClearExactPositiveDelta",
									"nameLocation": "2159:27:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2186:2:4"
									},
									"src": "2153:36:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2195:708:4",
										"text": "@notice Emitted when a new pool is initialized\n @param id The abi encoded hash of the pool key struct for the new pool\n @param currency0 The first currency of the pool by address sort order\n @param currency1 The second currency of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param hooks The hooks contract address for the pool, or address(0) if none\n @param sqrtPriceX96 The price of the pool on initialization\n @param tick The initial tick of the pool corresponding to the initialized price"
									},
									"eventSelector": "dd466e674ea557f56295e2d0218a125ea4b4f0f6f3307b95f85e6110838d6438",
									"id": 427,
									"name": "Initialize",
									"nameLocation": "2914:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2949:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2934:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_PoolId_$2514",
													"typeString": "PoolId"
												},
												"typeName": {
													"id": 407,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 406,
														"name": "PoolId",
														"nameLocations": [
															"2934:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2514,
														"src": "2934:6:4"
													},
													"referencedDeclaration": 2514,
													"src": "2934:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_PoolId_$2514",
														"typeString": "PoolId"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"indexed": true,
												"mutability": "mutable",
												"name": "currency0",
												"nameLocation": "2978:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2961:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 410,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 409,
														"name": "Currency",
														"nameLocations": [
															"2961:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "2961:8:4"
													},
													"referencedDeclaration": 2214,
													"src": "2961:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"indexed": true,
												"mutability": "mutable",
												"name": "currency1",
												"nameLocation": "3014:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2997:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 413,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 412,
														"name": "Currency",
														"nameLocations": [
															"2997:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "2997:8:4"
													},
													"referencedDeclaration": 2214,
													"src": "2997:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3040:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3033:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 415,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3033:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "3059:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3053:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 417,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3053:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"indexed": false,
												"mutability": "mutable",
												"name": "hooks",
												"nameLocation": "3087:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3080:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IHooks_$331",
													"typeString": "contract IHooks"
												},
												"typeName": {
													"id": 420,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 419,
														"name": "IHooks",
														"nameLocations": [
															"3080:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 331,
														"src": "3080:6:4"
													},
													"referencedDeclaration": 331,
													"src": "3080:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHooks_$331",
														"typeString": "contract IHooks"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3110:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3102:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 422,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3102:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3138:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3132:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 424,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3132:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2924:224:4"
									},
									"src": "2908:241:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "3155:459:4",
										"text": "@notice Emitted when a liquidity position is modified\n @param id The abi encoded hash of the pool key struct for the pool that was modified\n @param sender The address that modified the pool\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param liquidityDelta The amount of liquidity that was added or removed\n @param salt The extra data to make positions unique"
									},
									"eventSelector": "f208f4912782fd25c7f114ca3723a2d5dd6f3bcc3ac8db5af63baa85f711d5ec",
									"id": 443,
									"name": "ModifyLiquidity",
									"nameLocation": "3625:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3665:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3650:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_PoolId_$2514",
													"typeString": "PoolId"
												},
												"typeName": {
													"id": 430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 429,
														"name": "PoolId",
														"nameLocations": [
															"3650:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2514,
														"src": "3650:6:4"
													},
													"referencedDeclaration": 2514,
													"src": "3650:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_PoolId_$2514",
														"typeString": "PoolId"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3685:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3669:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3699:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3693:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 434,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3693:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3716:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3710:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 436,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3710:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nameLocation": "3734:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3727:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 438,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3727:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"indexed": false,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3758:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3750:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 440,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3750:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3640:128:4"
									},
									"src": "3619:150:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "3775:674:4",
										"text": "@notice Emitted for swaps between currency0 and currency1\n @param id The abi encoded hash of the pool key struct for the pool that was modified\n @param sender The address that initiated the swap call, and that received the callback\n @param amount0 The delta of the currency0 balance of the pool\n @param amount1 The delta of the currency1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of the price of the pool after the swap\n @param fee The swap fee in hundredths of a bip"
									},
									"eventSelector": "40e9cecb9f5f1f1c5b9c97dec2917b7ee92e57ba5563708daca94dd84ad7112f",
									"id": 463,
									"name": "Swap",
									"nameLocation": "4460:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4489:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "4474:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_PoolId_$2514",
													"typeString": "PoolId"
												},
												"typeName": {
													"id": 446,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 445,
														"name": "PoolId",
														"nameLocations": [
															"4474:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2514,
														"src": "4474:6:4"
													},
													"referencedDeclaration": 2514,
													"src": "4474:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_PoolId_$2514",
														"typeString": "PoolId"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4517:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "4501:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4540:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "4533:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 450,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4533:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4564:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "4557:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 452,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4557:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "4589:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "4581:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 454,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4581:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4619:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "4611:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 456,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4611:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "4644:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "4638:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 458,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4638:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4665:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "4658:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 460,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "4658:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:210:4"
									},
									"src": "4454:221:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "4681:303:4",
										"text": "@notice Emitted for donations\n @param id The abi encoded hash of the pool key struct for the pool that was donated to\n @param sender The address that initiated the donate call\n @param amount0 The amount donated in currency0\n @param amount1 The amount donated in currency1"
									},
									"eventSelector": "29ef05caaff9404b7cb6d1c0e9bbae9eaa7ab2541feba1a9c4248594c08156cb",
									"id": 475,
									"name": "Donate",
									"nameLocation": "4995:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5017:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5002:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_PoolId_$2514",
													"typeString": "PoolId"
												},
												"typeName": {
													"id": 466,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 465,
														"name": "PoolId",
														"nameLocations": [
															"5002:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2514,
														"src": "5002:6:4"
													},
													"referencedDeclaration": 2514,
													"src": "5002:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_PoolId_$2514",
														"typeString": "PoolId"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5037:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5021:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5021:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5053:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5045:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5070:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5062:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5062:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5001:77:4"
									},
									"src": "4989:90:4"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "5085:567:4",
										"text": "@notice All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement\n `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract.\n @dev The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`\n @param data Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\n @return The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`"
									},
									"functionSelector": "48c89491",
									"id": 483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unlock",
									"nameLocation": "5666:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5688:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "5673:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 477,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:21:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "5712:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5712:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5711:14:4"
									},
									"scope": 614,
									"src": "5657:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "5732:356:4",
										"text": "@notice Initialize the state for a given pool ID\n @dev A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\n @param key The pool key for the pool to initialize\n @param sqrtPriceX96 The initial square root price\n @return tick The initial tick of the pool"
									},
									"functionSelector": "6276cbbe",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "6102:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6128:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "6113:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 485,
														"name": "PoolKey",
														"nameLocations": [
															"6113:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "6113:7:4"
													},
													"referencedDeclaration": 2560,
													"src": "6113:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "6141:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "6133:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 488,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6133:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:42:4"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "6179:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "6173:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 491,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "6173:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6172:12:4"
									},
									"scope": 614,
									"src": "6093:92:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "6191:985:4",
										"text": "@notice Modify the liquidity for the given pool\n @dev Poke by calling with a zero liquidityDelta\n @param key The pool to modify liquidity in\n @param params The parameters for modifying the liquidity\n @param hookData The data to pass through to the add/removeLiquidity hooks\n @return callerDelta The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable\n @return feesAccrued The balance delta of the fees generated in the liquidity range. Returned for informational purposes\n @dev Note that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value\n For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued)\n atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme"
									},
									"functionSelector": "5a6bcfda",
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyLiquidity",
									"nameLocation": "7190:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7221:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "7206:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 497,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 496,
														"name": "PoolKey",
														"nameLocations": [
															"7206:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "7206:7:4"
													},
													"referencedDeclaration": 2560,
													"src": "7206:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7255:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "7226:35:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ModifyLiquidityParams_$2576_memory_ptr",
													"typeString": "struct ModifyLiquidityParams"
												},
												"typeName": {
													"id": 500,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 499,
														"name": "ModifyLiquidityParams",
														"nameLocations": [
															"7226:21:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "7226:21:4"
													},
													"referencedDeclaration": 2576,
													"src": "7226:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ModifyLiquidityParams_$2576_storage_ptr",
														"typeString": "struct ModifyLiquidityParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "7278:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "7263:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 502,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7263:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:82:4"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "callerDelta",
												"nameLocation": "7335:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "7322:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 506,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 505,
														"name": "BalanceDelta",
														"nameLocations": [
															"7322:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "7322:12:4"
													},
													"referencedDeclaration": 2000,
													"src": "7322:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "feesAccrued",
												"nameLocation": "7361:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "7348:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 509,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 508,
														"name": "BalanceDelta",
														"nameLocations": [
															"7348:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "7348:12:4"
													},
													"referencedDeclaration": 2000,
													"src": "7348:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7321:52:4"
									},
									"scope": 614,
									"src": "7181:193:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "7380:643:4",
										"text": "@notice Swap against the given pool\n @param key The pool to swap in\n @param params The parameters for swapping\n @param hookData The data to pass through to the swap hooks\n @return swapDelta The balance delta of the address swapping\n @dev Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified.\n Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG\n the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta."
									},
									"functionSelector": "f3cd914c",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "8037:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "8057:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "8042:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 515,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 514,
														"name": "PoolKey",
														"nameLocations": [
															"8042:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "8042:7:4"
													},
													"referencedDeclaration": 2560,
													"src": "8042:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "8080:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "8062:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SwapParams_$2587_memory_ptr",
													"typeString": "struct SwapParams"
												},
												"typeName": {
													"id": 518,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 517,
														"name": "SwapParams",
														"nameLocations": [
															"8062:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2587,
														"src": "8062:10:4"
													},
													"referencedDeclaration": 2587,
													"src": "8062:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SwapParams_$2587_storage_ptr",
														"typeString": "struct SwapParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "8103:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "8088:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8088:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8041:71:4"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "swapDelta",
												"nameLocation": "8160:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "8147:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 524,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 523,
														"name": "BalanceDelta",
														"nameLocations": [
															"8147:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "8147:12:4"
													},
													"referencedDeclaration": 2000,
													"src": "8147:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8146:24:4"
									},
									"scope": 614,
									"src": "8028:143:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "8177:1052:4",
										"text": "@notice Donate the given currency amounts to the in-range liquidity providers of a pool\n @dev Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds.\n Donors should keep this in mind when designing donation mechanisms.\n @dev This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of\n a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to\n `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)).\n Read the comments in `Pool.swap()` for more information about this.\n @param key The key of the pool to donate to\n @param amount0 The amount of currency0 to donate\n @param amount1 The amount of currency1 to donate\n @param hookData The data to pass through to the donate hooks\n @return BalanceDelta The delta of the caller after the donate"
									},
									"functionSelector": "234266d7",
									"id": 543,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "9243:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9265:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "9250:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 529,
														"name": "PoolKey",
														"nameLocations": [
															"9250:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "9250:7:4"
													},
													"referencedDeclaration": 2560,
													"src": "9250:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "9278:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "9270:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9270:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "9295:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "9287:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9287:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "9319:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "9304:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9304:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9249:79:4"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "9363:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 540,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 539,
														"name": "BalanceDelta",
														"nameLocations": [
															"9363:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "9363:12:4"
													},
													"referencedDeclaration": 2000,
													"src": "9363:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9362:14:4"
									},
									"scope": 614,
									"src": "9234:143:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "9383:605:4",
										"text": "@notice Writes the current ERC20 balance of the specified currency to transient storage\n This is used to checkpoint balances for the manager and derive deltas for the caller.\n @dev This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped\n for native tokens because the amount to settle is determined by the sent value.\n However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle\n native funds, this function can be called with the native currency to then be able to settle the native currency"
									},
									"functionSelector": "a5841194",
									"id": 550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "10002:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "10016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "10007:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 546,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 545,
														"name": "Currency",
														"nameLocations": [
															"10007:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "10007:8:4"
													},
													"referencedDeclaration": 2214,
													"src": "10007:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10006:19:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10034:0:4"
									},
									"scope": 614,
									"src": "9993:42:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "10041:405:4",
										"text": "@notice Called by the user to net out some value owed to the user\n @dev Will revert if the requested amount is not available, consider using `mint` instead\n @dev Can also be used as a mechanism for free flash loans\n @param currency The currency to withdraw from the pool manager\n @param to The address to withdraw to\n @param amount The amount of currency to withdraw"
									},
									"functionSelector": "0b0d9c09",
									"id": 561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "take",
									"nameLocation": "10460:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "10474:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "10465:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 553,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 552,
														"name": "Currency",
														"nameLocations": [
															"10465:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "10465:8:4"
													},
													"referencedDeclaration": 2214,
													"src": "10465:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10492:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "10484:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10484:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10504:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "10496:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10496:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10464:47:4"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10520:0:4"
									},
									"scope": 614,
									"src": "10451:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "10527:102:4",
										"text": "@notice Called by the user to pay what is owed\n @return paid The amount of currency settled"
									},
									"functionSelector": "11da60b4",
									"id": 567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "settle",
									"nameLocation": "10643:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10649:2:4"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "paid",
												"nameLocation": "10686:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "10678:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10678:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10677:14:4"
									},
									"scope": 614,
									"src": "10634:58:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "10698:181:4",
										"text": "@notice Called by the user to pay on behalf of another address\n @param recipient The address to credit for the payment\n @return paid The amount of currency settled"
									},
									"functionSelector": "3dd45adb",
									"id": 575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "settleFor",
									"nameLocation": "10893:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10911:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "10903:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10902:19:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "paid",
												"nameLocation": "10956:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "10948:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:14:4"
									},
									"scope": 614,
									"src": "10884:78:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "10968:425:4",
										"text": "@notice WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently.\n A call to clear will zero out a positive balance WITHOUT a corresponding transfer.\n @dev This could be used to clear a balance that is considered dust.\n Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared."
									},
									"functionSelector": "80f0b44c",
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "clear",
									"nameLocation": "11407:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "11422:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "11413:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 578,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 577,
														"name": "Currency",
														"nameLocations": [
															"11413:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "11413:8:4"
													},
													"referencedDeclaration": 2214,
													"src": "11413:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11440:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "11432:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11432:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11412:35:4"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11456:0:4"
									},
									"scope": 614,
									"src": "11398:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "11463:388:4",
										"text": "@notice Called by the user to move value into ERC6909 balance\n @param to The address to mint the tokens to\n @param id The currency address to mint to ERC6909s, as a uint256\n @param amount The amount of currency to mint\n @dev The id is converted to a uint160 to correspond to a currency address\n If the upper 12 bytes are not 0, they will be 0-ed out"
									},
									"functionSelector": "156e29f6",
									"id": 594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "11865:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11878:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "11870:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11870:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "11890:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "11882:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11882:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11902:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "11894:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11869:40:4"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11918:0:4"
									},
									"scope": 614,
									"src": "11856:63:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "11925:394:4",
										"text": "@notice Called by the user to move value from ERC6909 balance\n @param from The address to burn the tokens from\n @param id The currency address to burn from ERC6909s, as a uint256\n @param amount The amount of currency to burn\n @dev The id is converted to a uint160 to correspond to a currency address\n If the upper 12 bytes are not 0, they will be 0-ed out"
									},
									"functionSelector": "f5298aca",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "12333:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12346:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "12338:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12338:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12360:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "12352:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12372:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "12364:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12364:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12337:42:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12388:0:4"
									},
									"scope": 614,
									"src": "12324:65:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "12395:351:4",
										"text": "@notice Updates the pools lp fees for the a pool that has enabled dynamic lp fees.\n @dev A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\n @param key The key of the pool to update dynamic LP fees for\n @param newDynamicLPFee The new dynamic pool LP fee"
									},
									"functionSelector": "52759651",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateDynamicLPFee",
									"nameLocation": "12760:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "12794:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "12779:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 607,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 606,
														"name": "PoolKey",
														"nameLocations": [
															"12779:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "12779:7:4"
													},
													"referencedDeclaration": 2560,
													"src": "12779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "newDynamicLPFee",
												"nameLocation": "12806:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "12799:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 609,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "12799:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12778:44:4"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12831:0:4"
									},
									"scope": 614,
									"src": "12751:81:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 615,
							"src": "609:12225:4",
							"usedErrors": [
								366,
								369,
								372,
								375,
								380,
								385,
								392,
								395,
								398,
								401,
								404,
								628,
								631,
								634
							],
							"usedEvents": [
								427,
								443,
								463,
								475,
								639,
								647,
								786,
								796,
								808
							]
						}
					],
					"src": "32:12803:4"
				},
				"id": 4
			},
			"@uniswap/v4-core/src/interfaces/IProtocolFees.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/interfaces/IProtocolFees.sol",
					"exportedSymbols": {
						"Currency": [
							2214
						],
						"IProtocolFees": [
							691
						],
						"PoolId": [
							2514
						],
						"PoolKey": [
							2560
						]
					},
					"id": 692,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 616,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/Currency.sol",
							"file": "../types/Currency.sol",
							"id": 618,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 692,
							"sourceUnit": 2509,
							"src": "57:47:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 617,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2214,
										"src": "65:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolId.sol",
							"file": "../types/PoolId.sol",
							"id": 620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 692,
							"sourceUnit": 2529,
							"src": "105:43:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 619,
										"name": "PoolId",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2514,
										"src": "113:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolKey.sol",
							"file": "../types/PoolKey.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 692,
							"sourceUnit": 2561,
							"src": "149:45:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 621,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2560,
										"src": "157:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProtocolFees",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 623,
								"nodeType": "StructuredDocumentation",
								"src": "196:81:5",
								"text": "@notice Interface for all protocol-fee related functions in the pool manager"
							},
							"fullyImplemented": false,
							"id": 691,
							"linearizedBaseContracts": [
								691
							],
							"name": "IProtocolFees",
							"nameLocation": "287:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "307:52:5",
										"text": "@notice Thrown when protocol fee is set too high"
									},
									"errorSelector": "a7abe2f7",
									"id": 628,
									"name": "ProtocolFeeTooLarge",
									"nameLocation": "370:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "397:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "390:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 625,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "390:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:12:5"
									},
									"src": "364:38:5"
								},
								{
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "408:94:5",
										"text": "@notice Thrown when collectProtocolFees or setProtocolFee is not called by the controller."
									},
									"errorSelector": "48f5c3ed",
									"id": 631,
									"name": "InvalidCaller",
									"nameLocation": "513:13:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "526:2:5"
									},
									"src": "507:22:5"
								},
								{
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "535:83:5",
										"text": "@notice Thrown when collectProtocolFees is attempted on a token that is synced."
									},
									"errorSelector": "c79e5948",
									"id": 634,
									"name": "ProtocolFeeCurrencySynced",
									"nameLocation": "629:25:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "654:2:5"
									},
									"src": "623:34:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "663:100:5",
										"text": "@notice Emitted when the protocol fee controller address is updated in setProtocolFeeController."
									},
									"eventSelector": "b4bd8ef53df690b9943d3318996006dbb82a25f54719d8c8035b516a2a5b8acc",
									"id": 639,
									"name": "ProtocolFeeControllerUpdated",
									"nameLocation": "774:28:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"indexed": true,
												"mutability": "mutable",
												"name": "protocolFeeController",
												"nameLocation": "819:21:5",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "803:37:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:39:5"
									},
									"src": "768:74:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "848:64:5",
										"text": "@notice Emitted when the protocol fee is updated for a pool."
									},
									"eventSelector": "e9c42593e71f84403b84352cd168d693e2c9fcd1fdbcc3feb21d92b43e6696f9",
									"id": 647,
									"name": "ProtocolFeeUpdated",
									"nameLocation": "923:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "957:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "942:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_PoolId_$2514",
													"typeString": "PoolId"
												},
												"typeName": {
													"id": 642,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 641,
														"name": "PoolId",
														"nameLocations": [
															"942:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2514,
														"src": "942:6:5"
													},
													"referencedDeclaration": 2514,
													"src": "942:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_PoolId_$2514",
														"typeString": "PoolId"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"indexed": false,
												"mutability": "mutable",
												"name": "protocolFee",
												"nameLocation": "968:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "961:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 644,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "961:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:39:5"
									},
									"src": "917:64:5"
								},
								{
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "987:209:5",
										"text": "@notice Given a currency address, returns the protocol fees accrued in that currency\n @param currency The currency to check\n @return amount The amount of protocol fees accrued in the currency"
									},
									"functionSelector": "97e8cd4e",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFeesAccrued",
									"nameLocation": "1210:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "1239:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1230:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 650,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 649,
														"name": "Currency",
														"nameLocations": [
															"1230:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "1230:8:5"
													},
													"referencedDeclaration": 2214,
													"src": "1230:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:19:5"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1280:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1272:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:16:5"
									},
									"scope": 691,
									"src": "1201:87:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "1294:162:5",
										"text": "@notice Sets the protocol fee for the given pool\n @param key The key of the pool to set a protocol fee for\n @param newProtocolFee The fee to set"
									},
									"functionSelector": "7e87ce7d",
									"id": 665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setProtocolFee",
									"nameLocation": "1470:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1500:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1485:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 659,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 658,
														"name": "PoolKey",
														"nameLocations": [
															"1485:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "1485:7:5"
													},
													"referencedDeclaration": 2560,
													"src": "1485:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "newProtocolFee",
												"nameLocation": "1512:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1505:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 661,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1505:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:43:5"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1536:0:5"
									},
									"scope": 691,
									"src": "1461:76:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "1543:102:5",
										"text": "@notice Sets the protocol fee controller\n @param controller The new protocol fee controller"
									},
									"functionSelector": "2d771389",
									"id": 671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setProtocolFeeController",
									"nameLocation": "1659:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "controller",
												"nameLocation": "1692:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1684:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:20:5"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1712:0:5"
									},
									"scope": 691,
									"src": "1650:63:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "1719:413:5",
										"text": "@notice Collects the protocol fees for a given recipient and currency, returning the amount collected\n @dev This will revert if the contract is unlocked\n @param recipient The address to receive the protocol fees\n @param currency The currency to withdraw\n @param amount The amount of currency to withdraw\n @return amountCollected The amount of currency successfully withdrawn"
									},
									"functionSelector": "8161b874",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocolFees",
									"nameLocation": "2146:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2174:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2166:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "2194:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2185:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 676,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 675,
														"name": "Currency",
														"nameLocations": [
															"2185:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "2185:8:5"
													},
													"referencedDeclaration": 2214,
													"src": "2185:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2212:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2204:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2165:54:5"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "amountCollected",
												"nameLocation": "2262:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2254:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2254:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2253:25:5"
									},
									"scope": 691,
									"src": "2137:142:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "2285:131:5",
										"text": "@notice Returns the current protocol fee controller address\n @return address The current protocol fee controller address"
									},
									"functionSelector": "f02de3b2",
									"id": 690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFeeController",
									"nameLocation": "2430:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2451:2:5"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2477:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2476:9:5"
									},
									"scope": 691,
									"src": "2421:65:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 692,
							"src": "277:2211:5",
							"usedErrors": [
								628,
								631,
								634
							],
							"usedEvents": [
								639,
								647
							]
						}
					],
					"src": "32:2457:5"
				},
				"id": 5
			},
			"@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
					"exportedSymbols": {
						"IUnlockCallback": [
							703
						]
					},
					"id": 704,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 693,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUnlockCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 694,
								"nodeType": "StructuredDocumentation",
								"src": "57:89:6",
								"text": "@notice Interface for the callback executed when an address unlocks the pool manager"
							},
							"fullyImplemented": false,
							"id": 703,
							"linearizedBaseContracts": [
								703
							],
							"name": "IUnlockCallback",
							"nameLocation": "156:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "178:225:6",
										"text": "@notice Called by the pool manager on `msg.sender` when the manager is unlocked\n @param data The data that was passed to the call to unlock\n @return Any data that you want to be returned from the unlock call"
									},
									"functionSelector": "91dd7346",
									"id": 702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unlockCallback",
									"nameLocation": "417:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "447:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "432:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 696,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "432:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:21:6"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "471:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 699,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "471:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:14:6"
									},
									"scope": 703,
									"src": "408:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 704,
							"src": "146:341:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:456:6"
				},
				"id": 6
			},
			"@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
					"exportedSymbols": {
						"IERC20Minimal": [
							775
						]
					},
					"id": 776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 705,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Minimal",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 706,
								"nodeType": "StructuredDocumentation",
								"src": "57:132:7",
								"text": "@title Minimal ERC20 interface for Uniswap\n @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 775,
							"linearizedBaseContracts": [
								775
							],
							"name": "IERC20Minimal",
							"nameLocation": "199:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "219:212:7",
										"text": "@notice Returns an account's balance in the token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"
									},
									"functionSelector": "70a08231",
									"id": 714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "445:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "463:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "455:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:17:7"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "495:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:7"
									},
									"scope": 775,
									"src": "436:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "510:333:7",
										"text": "@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"
									},
									"functionSelector": "a9059cbb",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "857:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "874:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "866:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "893:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "885:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "865:35:7"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "919:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 721,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "919:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "918:6:7"
									},
									"scope": 775,
									"src": "848:77:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "931:250:7",
										"text": "@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"
									},
									"functionSelector": "dd62ed3e",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1195:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1213:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "1205:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1228:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "1220:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:32:7"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "1260:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1259:9:7"
									},
									"scope": 775,
									"src": "1186:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "1275:343:7",
										"text": "@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"
									},
									"functionSelector": "095ea7b3",
									"id": 744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1632:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1648:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1640:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1665:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1657:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1639:33:7"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1691:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 741,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1691:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:6:7"
									},
									"scope": 775,
									"src": "1623:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "1703:371:7",
										"text": "@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"
									},
									"functionSelector": "23b872dd",
									"id": 756,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2088:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2109:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "2101:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2125:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "2117:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2144:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "2136:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2136:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:51:7"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "2170:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2170:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2169:6:7"
									},
									"scope": 775,
									"src": "2079:97:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "2182:369:7",
										"text": "@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 765,
									"name": "Transfer",
									"nameLocation": "2562:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2587:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2571:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2609:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2593:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2621:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2613:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2570:57:7"
									},
									"src": "2556:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "2634:321:7",
										"text": "@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 774,
									"name": "Approval",
									"nameLocation": "2966:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2991:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2975:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2975:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3014:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2998:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3031:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "3023:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2974:63:7"
									},
									"src": "2960:78:7"
								}
							],
							"scope": 776,
							"src": "189:2851:7",
							"usedErrors": [],
							"usedEvents": [
								765,
								774
							]
						}
					],
					"src": "32:3009:7"
				},
				"id": 7
			},
			"@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol",
					"exportedSymbols": {
						"IERC6909Claims": [
							889
						]
					},
					"id": 890,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC6909Claims",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 778,
								"nodeType": "StructuredDocumentation",
								"src": "57:79:8",
								"text": "@notice Interface for claims over a contract balance, wrapped as a ERC6909"
							},
							"fullyImplemented": false,
							"id": 889,
							"linearizedBaseContracts": [
								889
							],
							"name": "IERC6909Claims",
							"nameLocation": "146:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa267",
									"id": 786,
									"name": "OperatorSet",
									"nameLocation": "352:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "380:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "364:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "403:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "387:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "418:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "413:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 783,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "413:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:64:8"
									},
									"src": "346:82:8"
								},
								{
									"anonymous": false,
									"eventSelector": "b3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a7",
									"id": 796,
									"name": "Approval",
									"nameLocation": "440:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "465:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "449:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "488:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "472:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "513:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "497:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "525:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "517:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:84:8"
									},
									"src": "434:99:8"
								},
								{
									"anonymous": false,
									"eventSelector": "1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac728859",
									"id": 808,
									"name": "Transfer",
									"nameLocation": "545:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"indexed": false,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "562:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "554:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "586:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "570:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "608:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "592:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "628:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "612:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "640:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "632:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:94:8"
									},
									"src": "539:109:8"
								},
								{
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "836:170:8",
										"text": "@notice Owner balance of an id.\n @param owner The address of the owner.\n @param id The id of the token.\n @return amount The balance of the token."
									},
									"functionSelector": "00fdd58e",
									"id": 818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1020:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1038:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1030:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1053:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1045:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:27:8"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1088:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1080:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:16:8"
									},
									"scope": 889,
									"src": "1011:85:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "1102:227:8",
										"text": "@notice Spender allowance of an id.\n @param owner The address of the owner.\n @param spender The address of the spender.\n @param id The id of the token.\n @return amount The allowance of the token."
									},
									"functionSelector": "598af9e7",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1343:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1361:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "1353:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1376:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "1368:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1393:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "1385:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:44:8"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1428:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "1420:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:16:8"
									},
									"scope": 889,
									"src": "1334:102:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "1442:214:8",
										"text": "@notice Checks if a spender is approved by an owner as an operator\n @param owner The address of the owner.\n @param spender The address of the spender.\n @return approved The approval status."
									},
									"functionSelector": "b6363cf2",
									"id": 840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nameLocation": "1670:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1689:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "1681:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1704:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "1696:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:32:8"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1741:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "1736:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1736:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1735:15:8"
									},
									"scope": 889,
									"src": "1661:90:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "1757:273:8",
										"text": "@notice Transfers an amount of an id from the caller to a receiver.\n @param receiver The address of the receiver.\n @param id The id of the token.\n @param amount The amount of the token.\n @return bool True, always, unless the function reverts"
									},
									"functionSelector": "095bcdb6",
									"id": 852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2044:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2061:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2053:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2079:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2071:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2091:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2083:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:46:8"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2117:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2117:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2116:6:8"
									},
									"scope": 889,
									"src": "2035:88:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "2129:320:8",
										"text": "@notice Transfers an amount of an id from a sender to a receiver.\n @param sender The address of the sender.\n @param receiver The address of the receiver.\n @param id The id of the token.\n @param amount The amount of the token.\n @return bool True, always, unless the function reverts"
									},
									"functionSelector": "fe99049a",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2463:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2484:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "2476:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2500:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "2492:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2518:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "2510:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2530:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "2522:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2475:62:8"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "2556:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2556:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2555:6:8"
									},
									"scope": 889,
									"src": "2454:108:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "2568:224:8",
										"text": "@notice Approves an amount of an id to a spender.\n @param spender The address of the spender.\n @param id The id of the token.\n @param amount The amount of the token.\n @return bool True, always"
									},
									"functionSelector": "426a8493",
									"id": 878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2806:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2822:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "2814:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2839:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "2831:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2851:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "2843:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2843:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2813:45:8"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "2877:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2877:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:6:8"
									},
									"scope": 889,
									"src": "2797:86:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "2889:187:8",
										"text": "@notice Sets or removes an operator for the caller.\n @param operator The address of the operator.\n @param approved The approval status.\n @return bool True, always"
									},
									"functionSelector": "558a7297",
									"id": 888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOperator",
									"nameLocation": "3090:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3110:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "3102:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3102:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3125:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "3120:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3120:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3101:33:8"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "3153:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3153:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3152:6:8"
									},
									"scope": 889,
									"src": "3081:78:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 890,
							"src": "136:3025:8",
							"usedErrors": [],
							"usedEvents": [
								786,
								796,
								808
							]
						}
					],
					"src": "32:3130:8"
				},
				"id": 8
			},
			"@uniswap/v4-core/src/libraries/BitMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/libraries/BitMath.sol",
					"exportedSymbols": {
						"BitMath": [
							925
						]
					},
					"id": 926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 891,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BitMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 892,
								"nodeType": "StructuredDocumentation",
								"src": "57:241:9",
								"text": "@title BitMath\n @dev This library provides functionality for computing bit properties of an unsigned integer\n @author Solady (https://github.com/Vectorized/solady/blob/8200a70e8dc2a77ecb074fc2e99a2a0d36547522/src/utils/LibBit.sol)"
							},
							"fullyImplemented": true,
							"id": 925,
							"linearizedBaseContracts": [
								925
							],
							"name": "BitMath",
							"nameLocation": "306:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "724:593:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 901,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "742:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "746:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "742:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "734:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "734:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "734:14:9"
											},
											{
												"AST": {
													"nativeSrc": "784:527:9",
													"nodeType": "YulBlock",
													"src": "784:527:9",
													"statements": [
														{
															"nativeSrc": "798:54:9",
															"nodeType": "YulAssignment",
															"src": "798:54:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "807:1:9",
																		"nodeType": "YulLiteral",
																		"src": "807:1:9",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "813:34:9",
																				"nodeType": "YulLiteral",
																				"src": "813:34:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "x",
																				"nativeSrc": "849:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "849:1:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "810:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "810:2:9"
																		},
																		"nativeSrc": "810:41:9",
																		"nodeType": "YulFunctionCall",
																		"src": "810:41:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "803:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:9"
																},
																"nativeSrc": "803:49:9",
																"nodeType": "YulFunctionCall",
																"src": "803:49:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "798:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "798:1:9"
																}
															]
														},
														{
															"nativeSrc": "865:53:9",
															"nodeType": "YulAssignment",
															"src": "865:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "873:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "873:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "880:1:9",
																				"nodeType": "YulLiteral",
																				"src": "880:1:9",
																				"type": "",
																				"value": "6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "886:18:9",
																						"nodeType": "YulLiteral",
																						"src": "886:18:9",
																						"type": "",
																						"value": "0xffffffffffffffff"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "910:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "910:1:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "913:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "913:1:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "906:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "906:3:9"
																						},
																						"nativeSrc": "906:9:9",
																						"nodeType": "YulFunctionCall",
																						"src": "906:9:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "883:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "883:2:9"
																				},
																				"nativeSrc": "883:33:9",
																				"nodeType": "YulFunctionCall",
																				"src": "883:33:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "876:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "876:3:9"
																		},
																		"nativeSrc": "876:41:9",
																		"nodeType": "YulFunctionCall",
																		"src": "876:41:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "870:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "870:2:9"
																},
																"nativeSrc": "870:48:9",
																"nodeType": "YulFunctionCall",
																"src": "870:48:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "865:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "865:1:9"
																}
															]
														},
														{
															"nativeSrc": "931:45:9",
															"nodeType": "YulAssignment",
															"src": "931:45:9",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "939:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "939:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "946:1:9",
																				"nodeType": "YulLiteral",
																				"src": "946:1:9",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "952:10:9",
																						"nodeType": "YulLiteral",
																						"src": "952:10:9",
																						"type": "",
																						"value": "0xffffffff"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "968:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "968:1:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "971:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "971:1:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "964:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:9"
																						},
																						"nativeSrc": "964:9:9",
																						"nodeType": "YulFunctionCall",
																						"src": "964:9:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "949:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "949:2:9"
																				},
																				"nativeSrc": "949:25:9",
																				"nodeType": "YulFunctionCall",
																				"src": "949:25:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "942:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:9"
																		},
																		"nativeSrc": "942:33:9",
																		"nodeType": "YulFunctionCall",
																		"src": "942:33:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "936:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "936:2:9"
																},
																"nativeSrc": "936:40:9",
																"nodeType": "YulFunctionCall",
																"src": "936:40:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "931:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "931:1:9"
																}
															]
														},
														{
															"nativeSrc": "989:41:9",
															"nodeType": "YulAssignment",
															"src": "989:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "997:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "997:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1004:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:9",
																				"type": "",
																				"value": "4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1010:6:9",
																						"nodeType": "YulLiteral",
																						"src": "1010:6:9",
																						"type": "",
																						"value": "0xffff"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "1022:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "1022:1:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "1025:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "1025:1:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1018:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1018:3:9"
																						},
																						"nativeSrc": "1018:9:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1018:9:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1007:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "1007:2:9"
																				},
																				"nativeSrc": "1007:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1007:21:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1000:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:9"
																		},
																		"nativeSrc": "1000:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1000:29:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "994:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "994:2:9"
																},
																"nativeSrc": "994:36:9",
																"nodeType": "YulFunctionCall",
																"src": "994:36:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "989:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "989:1:9"
																}
															]
														},
														{
															"nativeSrc": "1043:39:9",
															"nodeType": "YulAssignment",
															"src": "1043:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "1051:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1051:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1058:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1058:1:9",
																				"type": "",
																				"value": "3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1064:4:9",
																						"nodeType": "YulLiteral",
																						"src": "1064:4:9",
																						"type": "",
																						"value": "0xff"
																					},
																					{
																						"arguments": [
																							{
																								"name": "r",
																								"nativeSrc": "1074:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "1074:1:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "1077:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "1077:1:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1070:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1070:3:9"
																						},
																						"nativeSrc": "1070:9:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1070:9:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1061:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "1061:2:9"
																				},
																				"nativeSrc": "1061:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1061:19:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1054:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1054:3:9"
																		},
																		"nativeSrc": "1054:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1054:27:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1048:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1048:2:9"
																},
																"nativeSrc": "1048:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1048:34:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "1043:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "1043:1:9"
																}
															]
														},
														{
															"nativeSrc": "1138:163:9",
															"nodeType": "YulAssignment",
															"src": "1138:163:9",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "1146:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1146:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1158:4:9",
																						"nodeType": "YulLiteral",
																						"src": "1158:4:9",
																						"type": "",
																						"value": "0x1f"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "r",
																										"nativeSrc": "1172:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "1172:1:9"
																									},
																									{
																										"name": "x",
																										"nativeSrc": "1175:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "1175:1:9"
																									}
																								],
																								"functionName": {
																									"name": "shr",
																									"nativeSrc": "1168:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1168:3:9"
																								},
																								"nativeSrc": "1168:9:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1168:9:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1179:34:9",
																								"nodeType": "YulLiteral",
																								"src": "1179:34:9",
																								"type": "",
																								"value": "0x8421084210842108cc6318c6db6d54be"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1164:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1164:3:9"
																						},
																						"nativeSrc": "1164:50:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1164:50:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1154:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1154:3:9"
																				},
																				"nativeSrc": "1154:61:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1154:61:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1233:66:9",
																				"nodeType": "YulLiteral",
																				"src": "1233:66:9",
																				"type": "",
																				"value": "0x0706060506020500060203020504000106050205030304010505030400000000"
																			}
																		],
																		"functionName": {
																			"name": "byte",
																			"nativeSrc": "1149:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "1149:4:9"
																		},
																		"nativeSrc": "1149:151:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:151:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1143:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:2:9"
																},
																"nativeSrc": "1143:158:9",
																"nodeType": "YulFunctionCall",
																"src": "1143:158:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "1138:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "1138:1:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "1022:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "1043:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "1051:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "1074:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "1138:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "1146:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "1172:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "798:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "865:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "873:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "910:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "931:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "939:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "968:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "989:1:9",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "997:1:9",
														"valueSize": 1
													},
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "1025:1:9",
														"valueSize": 1
													},
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "1077:1:9",
														"valueSize": 1
													},
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "1175:1:9",
														"valueSize": 1
													},
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "849:1:9",
														"valueSize": 1
													},
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "913:1:9",
														"valueSize": 1
													},
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "971:1:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 906,
												"nodeType": "InlineAssembly",
												"src": "759:552:9"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "320:328:9",
										"text": "@notice Returns the index of the most significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @param x the value for which to compute the most significant bit, must be greater than 0\n @return r the index of the most significant bit"
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nameLocation": "662:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "689:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "681:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:11:9"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "721:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "715:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 897,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "715:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:9:9"
									},
									"scope": 925,
									"src": "653:664:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "1731:875:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 917,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "1749:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1753:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1749:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 916,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1741:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1741:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "1741:14:9"
											},
											{
												"AST": {
													"nativeSrc": "1791:809:9",
													"nodeType": "YulBlock",
													"src": "1791:809:9",
													"statements": [
														{
															"nativeSrc": "1855:22:9",
															"nodeType": "YulAssignment",
															"src": "1855:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1864:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1864:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1871:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1871:1:9",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "x",
																				"nativeSrc": "1874:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "1874:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1867:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1867:3:9"
																		},
																		"nativeSrc": "1867:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1867:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1860:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1860:3:9"
																},
																"nativeSrc": "1860:17:9",
																"nodeType": "YulFunctionCall",
																"src": "1860:17:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1855:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "1855:1:9"
																}
															]
														},
														{
															"nativeSrc": "2100:220:9",
															"nodeType": "YulAssignment",
															"src": "2100:220:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2109:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2109:1:9",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2116:3:9",
																				"nodeType": "YulLiteral",
																				"src": "2116:3:9",
																				"type": "",
																				"value": "252"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2129:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2129:1:9",
																								"type": "",
																								"value": "2"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2136:3:9",
																										"nodeType": "YulLiteral",
																										"src": "2136:3:9",
																										"type": "",
																										"value": "250"
																									},
																									{
																										"arguments": [
																											{
																												"name": "x",
																												"nativeSrc": "2145:1:9",
																												"nodeType": "YulIdentifier",
																												"src": "2145:1:9"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "2164:66:9",
																												"nodeType": "YulLiteral",
																												"src": "2164:66:9",
																												"type": "",
																												"value": "0xb6db6db6ddddddddd34d34d349249249210842108c6318c639ce739cffffffff"
																											}
																										],
																										"functionName": {
																											"name": "mul",
																											"nativeSrc": "2141:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "2141:3:9"
																										},
																										"nativeSrc": "2141:90:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2141:90:9"
																									}
																								],
																								"functionName": {
																									"name": "shr",
																									"nativeSrc": "2132:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2132:3:9"
																								},
																								"nativeSrc": "2132:100:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2132:100:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2125:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2125:3:9"
																						},
																						"nativeSrc": "2125:108:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2125:108:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2251:66:9",
																						"nodeType": "YulLiteral",
																						"src": "2251:66:9",
																						"type": "",
																						"value": "0x8040405543005266443200005020610674053026020000107506200176117077"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2121:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2121:3:9"
																				},
																				"nativeSrc": "2121:197:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2121:197:9"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "2112:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:9"
																		},
																		"nativeSrc": "2112:207:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:207:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2105:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2105:3:9"
																},
																"nativeSrc": "2105:215:9",
																"nodeType": "YulFunctionCall",
																"src": "2105:215:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2100:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "2100:1:9"
																}
															]
														},
														{
															"nativeSrc": "2451:139:9",
															"nodeType": "YulAssignment",
															"src": "2451:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "2459:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2459:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2475:10:9",
																								"nodeType": "YulLiteral",
																								"src": "2475:10:9",
																								"type": "",
																								"value": "0xd76453e0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "r",
																										"nativeSrc": "2491:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "2491:1:9"
																									},
																									{
																										"name": "x",
																										"nativeSrc": "2494:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "2494:1:9"
																									}
																								],
																								"functionName": {
																									"name": "shr",
																									"nativeSrc": "2487:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2487:3:9"
																								},
																								"nativeSrc": "2487:9:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2487:9:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2471:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2471:3:9"
																						},
																						"nativeSrc": "2471:26:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2471:26:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2499:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2499:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2467:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2467:3:9"
																				},
																				"nativeSrc": "2467:37:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2467:37:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2522:66:9",
																				"nodeType": "YulLiteral",
																				"src": "2522:66:9",
																				"type": "",
																				"value": "0x001f0d1e100c1d070f090b19131c1706010e11080a1a141802121b1503160405"
																			}
																		],
																		"functionName": {
																			"name": "byte",
																			"nativeSrc": "2462:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "2462:4:9"
																		},
																		"nativeSrc": "2462:127:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2462:127:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2456:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2456:2:9"
																},
																"nativeSrc": "2456:134:9",
																"nodeType": "YulFunctionCall",
																"src": "2456:134:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2451:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "2451:1:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 914,
														"isOffset": false,
														"isSlot": false,
														"src": "2100:1:9",
														"valueSize": 1
													},
													{
														"declaration": 914,
														"isOffset": false,
														"isSlot": false,
														"src": "2451:1:9",
														"valueSize": 1
													},
													{
														"declaration": 914,
														"isOffset": false,
														"isSlot": false,
														"src": "2459:1:9",
														"valueSize": 1
													},
													{
														"declaration": 914,
														"isOffset": false,
														"isSlot": false,
														"src": "2491:1:9",
														"valueSize": 1
													},
													{
														"declaration": 911,
														"isOffset": false,
														"isSlot": false,
														"src": "1855:1:9",
														"valueSize": 1
													},
													{
														"declaration": 911,
														"isOffset": false,
														"isSlot": false,
														"src": "1864:1:9",
														"valueSize": 1
													},
													{
														"declaration": 911,
														"isOffset": false,
														"isSlot": false,
														"src": "1874:1:9",
														"valueSize": 1
													},
													{
														"declaration": 911,
														"isOffset": false,
														"isSlot": false,
														"src": "2145:1:9",
														"valueSize": 1
													},
													{
														"declaration": 911,
														"isOffset": false,
														"isSlot": false,
														"src": "2494:1:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 922,
												"nodeType": "InlineAssembly",
												"src": "1766:834:9"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "1323:331:9",
										"text": "@notice Returns the index of the least significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @param x the value for which to compute the least significant bit, must be greater than 0\n @return r the index of the least significant bit"
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leastSignificantBit",
									"nameLocation": "1668:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1696:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1688:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1687:11:9"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1728:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1722:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 913,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1722:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1721:9:9"
									},
									"scope": 925,
									"src": "1659:947:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 926,
							"src": "298:2310:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2577:9"
				},
				"id": 9
			},
			"@uniswap/v4-core/src/libraries/CurrencyReserves.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
					"exportedSymbols": {
						"Currency": [
							2214
						],
						"CurrencyReserves": [
							973
						],
						"CustomRevert": [
							1079
						]
					},
					"id": 974,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:10"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/Currency.sol",
							"file": "../types/Currency.sol",
							"id": 929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 974,
							"sourceUnit": 2509,
							"src": "63:47:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 928,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2214,
										"src": "71:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/libraries/CustomRevert.sol",
							"file": "./CustomRevert.sol",
							"id": 931,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 974,
							"sourceUnit": 1080,
							"src": "111:48:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 930,
										"name": "CustomRevert",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1079,
										"src": "119:12:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CurrencyReserves",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 973,
							"linearizedBaseContracts": [
								973
							],
							"name": "CurrencyReserves",
							"nameLocation": "169:16:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 934,
									"libraryName": {
										"id": 932,
										"name": "CustomRevert",
										"nameLocations": [
											"198:12:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1079,
										"src": "198:12:10"
									},
									"nodeType": "UsingForDirective",
									"src": "192:30:10",
									"typeName": {
										"id": 933,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "215:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "228:49:10",
										"text": "bytes32(uint256(keccak256(\"ReservesOf\")) - 1)"
									},
									"id": 938,
									"mutability": "constant",
									"name": "RESERVES_OF_SLOT",
									"nameLocation": "299:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 973,
									"src": "282:102:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 936,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "282:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307831653037343561376462313632333938316630623261356434323332333634633030373837323636656237356164353436663139306536636562653962643935",
										"id": 937,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "318:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_13582234132832961652756477188584847927179359657859594952372729441197434191253_by_1",
											"typeString": "int_const 1358...(69 digits omitted)...1253"
										},
										"value": "0x1e0745a7db1623981f0b2a5d4232364c00787266eb75ad546f190e6cebe9bd95"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "390:47:10",
										"text": "bytes32(uint256(keccak256(\"Currency\")) - 1)"
									},
									"id": 942,
									"mutability": "constant",
									"name": "CURRENCY_SLOT",
									"nameLocation": "459:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 973,
									"src": "442:99:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 940,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "442:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307832376530393863353035643434656333353734303034626361303532616162663736626433353030346331383230393964386335373566623233383539336239",
										"id": 941,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "475:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18037029214425852597980496522548842536420057720408124260691716999909707453369_by_1",
											"typeString": "int_const 1803...(69 digits omitted)...3369"
										},
										"value": "0x27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b9"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "619:97:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "654:56:10",
													"nodeType": "YulBlock",
													"src": "654:56:10",
													"statements": [
														{
															"nativeSrc": "668:32:10",
															"nodeType": "YulAssignment",
															"src": "668:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "CURRENCY_SLOT",
																		"nativeSrc": "686:13:10",
																		"nodeType": "YulIdentifier",
																		"src": "686:13:10"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "680:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "680:5:10"
																},
																"nativeSrc": "680:20:10",
																"nodeType": "YulFunctionCall",
																"src": "680:20:10"
															},
															"variableNames": [
																{
																	"name": "currency",
																	"nativeSrc": "668:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "668:8:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 942,
														"isOffset": false,
														"isSlot": false,
														"src": "686:13:10",
														"valueSize": 1
													},
													{
														"declaration": 946,
														"isOffset": false,
														"isSlot": false,
														"src": "668:8:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 948,
												"nodeType": "InlineAssembly",
												"src": "629:81:10"
											}
										]
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSyncedCurrency",
									"nameLocation": "557:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:10"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "609:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "600:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "Currency",
														"nameLocations": [
															"600:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "600:8:10"
													},
													"referencedDeclaration": 2214,
													"src": "600:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:19:10"
									},
									"scope": 973,
									"src": "548:168:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "756:89:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "791:48:10",
													"nodeType": "YulBlock",
													"src": "791:48:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "CURRENCY_SLOT",
																		"nativeSrc": "812:13:10",
																		"nodeType": "YulIdentifier",
																		"src": "812:13:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "827:1:10",
																		"nodeType": "YulLiteral",
																		"src": "827:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "805:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "805:6:10"
																},
																"nativeSrc": "805:24:10",
																"nodeType": "YulFunctionCall",
																"src": "805:24:10"
															},
															"nativeSrc": "805:24:10",
															"nodeType": "YulExpressionStatement",
															"src": "805:24:10"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 942,
														"isOffset": false,
														"isSlot": false,
														"src": "812:13:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 953,
												"nodeType": "InlineAssembly",
												"src": "766:73:10"
											}
										]
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "resetCurrency",
									"nameLocation": "731:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "744:2:10"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:0:10"
									},
									"scope": 973,
									"src": "722:123:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "927:189:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "962:148:10",
													"nodeType": "YulBlock",
													"src": "962:148:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "CURRENCY_SLOT",
																		"nativeSrc": "983:13:10",
																		"nodeType": "YulIdentifier",
																		"src": "983:13:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "currency",
																				"nativeSrc": "1002:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "1002:8:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:42:10",
																				"nodeType": "YulLiteral",
																				"src": "1012:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "998:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "998:3:10"
																		},
																		"nativeSrc": "998:57:10",
																		"nodeType": "YulFunctionCall",
																		"src": "998:57:10"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "976:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:10"
																},
																"nativeSrc": "976:80:10",
																"nodeType": "YulFunctionCall",
																"src": "976:80:10"
															},
															"nativeSrc": "976:80:10",
															"nodeType": "YulExpressionStatement",
															"src": "976:80:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "RESERVES_OF_SLOT",
																		"nativeSrc": "1076:16:10",
																		"nodeType": "YulIdentifier",
																		"src": "1076:16:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1094:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1094:5:10"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "1069:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1069:6:10"
																},
																"nativeSrc": "1069:31:10",
																"nodeType": "YulFunctionCall",
																"src": "1069:31:10"
															},
															"nativeSrc": "1069:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "1069:31:10"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 942,
														"isOffset": false,
														"isSlot": false,
														"src": "983:13:10",
														"valueSize": 1
													},
													{
														"declaration": 938,
														"isOffset": false,
														"isSlot": false,
														"src": "1076:16:10",
														"valueSize": 1
													},
													{
														"declaration": 958,
														"isOffset": false,
														"isSlot": false,
														"src": "1002:8:10",
														"valueSize": 1
													},
													{
														"declaration": 960,
														"isOffset": false,
														"isSlot": false,
														"src": "1094:5:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 963,
												"nodeType": "InlineAssembly",
												"src": "937:173:10"
											}
										]
									},
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "syncCurrencyAndReserves",
									"nameLocation": "860:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "893:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "884:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 957,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 956,
														"name": "Currency",
														"nameLocations": [
															"884:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "884:8:10"
													},
													"referencedDeclaration": 2214,
													"src": "884:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "911:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "903:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:34:10"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "927:0:10"
									},
									"scope": 973,
									"src": "851:265:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "1189:97:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1224:56:10",
													"nodeType": "YulBlock",
													"src": "1224:56:10",
													"statements": [
														{
															"nativeSrc": "1238:32:10",
															"nodeType": "YulAssignment",
															"src": "1238:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "RESERVES_OF_SLOT",
																		"nativeSrc": "1253:16:10",
																		"nodeType": "YulIdentifier",
																		"src": "1253:16:10"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "1247:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1247:5:10"
																},
																"nativeSrc": "1247:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1247:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1238:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1238:5:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 938,
														"isOffset": false,
														"isSlot": false,
														"src": "1253:16:10",
														"valueSize": 1
													},
													{
														"declaration": 968,
														"isOffset": false,
														"isSlot": false,
														"src": "1238:5:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 970,
												"nodeType": "InlineAssembly",
												"src": "1199:81:10"
											}
										]
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSyncedReserves",
									"nameLocation": "1131:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1148:2:10"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1182:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1174:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:15:10"
									},
									"scope": 973,
									"src": "1122:164:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 974,
							"src": "161:1127:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1252:10"
				},
				"id": 10
			},
			"@uniswap/v4-core/src/libraries/CustomRevert.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/libraries/CustomRevert.sol",
					"exportedSymbols": {
						"CustomRevert": [
							1079
						]
					},
					"id": 1080,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 975,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CustomRevert",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 976,
								"nodeType": "StructuredDocumentation",
								"src": "57:444:11",
								"text": "@title Library for reverting with custom errors efficiently\n @notice Contains functions for reverting with custom errors with different argument types efficiently\n @dev To use this library, declare `using CustomRevert for bytes4;` and replace `revert CustomError()` with\n `CustomError.selector.revertWith()`\n @dev The functions may tamper with the free memory pointer but it is fine since the call context is exited immediately"
							},
							"fullyImplemented": true,
							"id": 1079,
							"linearizedBaseContracts": [
								1079
							],
							"name": "CustomRevert",
							"nameLocation": "509:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "528:55:11",
										"text": "@dev ERC-7751 error for wrapping bubbled up reverts"
									},
									"errorSelector": "90bfb865",
									"id": 987,
									"name": "WrappedError",
									"nameLocation": "594:12:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "615:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "607:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "630:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "623:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 980,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "623:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "646:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "640:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "640:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "details",
												"nameLocation": "660:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "654:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 984,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "654:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:62:11"
									},
									"src": "588:81:11"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "804:112:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "839:71:11",
													"nodeType": "YulBlock",
													"src": "839:71:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "860:1:11",
																		"nodeType": "YulLiteral",
																		"src": "860:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "863:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "863:8:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "853:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:11"
																},
																"nativeSrc": "853:19:11",
																"nodeType": "YulFunctionCall",
																"src": "853:19:11"
															},
															"nativeSrc": "853:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "853:19:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "892:1:11",
																		"nodeType": "YulLiteral",
																		"src": "892:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "895:4:11",
																		"nodeType": "YulLiteral",
																		"src": "895:4:11",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "885:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "885:6:11"
																},
																"nativeSrc": "885:15:11",
																"nodeType": "YulFunctionCall",
																"src": "885:15:11"
															},
															"nativeSrc": "885:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "885:15:11"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 990,
														"isOffset": false,
														"isSlot": false,
														"src": "863:8:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 993,
												"nodeType": "InlineAssembly",
												"src": "814:96:11"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "675:73:11",
										"text": "@dev Reverts with the selector of a custom error in the scratch space"
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "762:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "780:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "773:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 989,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "773:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:17:11"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:0:11"
									},
									"scope": 1079,
									"src": "753:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "1074:192:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1109:151:11",
													"nodeType": "YulBlock",
													"src": "1109:151:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1130:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1130:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "1133:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "1133:8:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1123:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1123:6:11"
																},
																"nativeSrc": "1123:19:11",
																"nodeType": "YulFunctionCall",
																"src": "1123:19:11"
															},
															"nativeSrc": "1123:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "1123:19:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1162:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1162:4:11",
																		"type": "",
																		"value": "0x04"
																	},
																	{
																		"arguments": [
																			{
																				"name": "addr",
																				"nativeSrc": "1172:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1172:4:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1178:42:11",
																				"nodeType": "YulLiteral",
																				"src": "1178:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1168:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1168:3:11"
																		},
																		"nativeSrc": "1168:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1168:53:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1155:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:11"
																},
																"nativeSrc": "1155:67:11",
																"nodeType": "YulFunctionCall",
																"src": "1155:67:11"
															},
															"nativeSrc": "1155:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "1155:67:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1245:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1235:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:11"
																},
																"nativeSrc": "1235:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1235:15:11"
															},
															"nativeSrc": "1235:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1235:15:11"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1000,
														"isOffset": false,
														"isSlot": false,
														"src": "1172:4:11",
														"valueSize": 1
													},
													{
														"declaration": 998,
														"isOffset": false,
														"isSlot": false,
														"src": "1133:8:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1003,
												"nodeType": "InlineAssembly",
												"src": "1084:176:11"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "922:82:11",
										"text": "@dev Reverts with a custom error with an address argument in the scratch space"
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "1018:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "1036:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1029:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 997,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1029:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1054:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1046:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:31:11"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:0:11"
									},
									"scope": 1079,
									"src": "1009:257:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "1421:159:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1456:118:11",
													"nodeType": "YulBlock",
													"src": "1456:118:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1477:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1477:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "1480:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1470:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1470:6:11"
																},
																"nativeSrc": "1470:19:11",
																"nodeType": "YulFunctionCall",
																"src": "1470:19:11"
															},
															"nativeSrc": "1470:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "1470:19:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1509:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1509:4:11",
																		"type": "",
																		"value": "0x04"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1526:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1526:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value",
																				"nativeSrc": "1529:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1529:5:11"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "1515:10:11",
																			"nodeType": "YulIdentifier",
																			"src": "1515:10:11"
																		},
																		"nativeSrc": "1515:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1515:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1502:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1502:6:11"
																},
																"nativeSrc": "1502:34:11",
																"nodeType": "YulFunctionCall",
																"src": "1502:34:11"
															},
															"nativeSrc": "1502:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "1502:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1556:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1556:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1559:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1559:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1549:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1549:6:11"
																},
																"nativeSrc": "1549:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1549:15:11"
															},
															"nativeSrc": "1549:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1549:15:11"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1008,
														"isOffset": false,
														"isSlot": false,
														"src": "1480:8:11",
														"valueSize": 1
													},
													{
														"declaration": 1010,
														"isOffset": false,
														"isSlot": false,
														"src": "1529:5:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1013,
												"nodeType": "InlineAssembly",
												"src": "1431:143:11"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "1272:80:11",
										"text": "@dev Reverts with a custom error with an int24 argument in the scratch space"
									},
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "1366:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "1384:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "1377:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1007,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1377:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1400:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "1394:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1009,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1394:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:30:11"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1421:0:11"
									},
									"scope": 1079,
									"src": "1357:223:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "1738:193:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1773:152:11",
													"nodeType": "YulBlock",
													"src": "1773:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1794:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1794:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "1797:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "1797:8:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1787:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1787:6:11"
																},
																"nativeSrc": "1787:19:11",
																"nodeType": "YulFunctionCall",
																"src": "1787:19:11"
															},
															"nativeSrc": "1787:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "1787:19:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1826:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1826:4:11",
																		"type": "",
																		"value": "0x04"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1836:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1836:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1843:42:11",
																				"nodeType": "YulLiteral",
																				"src": "1843:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1832:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:11"
																		},
																		"nativeSrc": "1832:54:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1832:54:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1819:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1819:6:11"
																},
																"nativeSrc": "1819:68:11",
																"nodeType": "YulFunctionCall",
																"src": "1819:68:11"
															},
															"nativeSrc": "1819:68:11",
															"nodeType": "YulExpressionStatement",
															"src": "1819:68:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1907:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1907:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1910:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1910:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1900:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1900:6:11"
																},
																"nativeSrc": "1900:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1900:15:11"
															},
															"nativeSrc": "1900:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1900:15:11"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1018,
														"isOffset": false,
														"isSlot": false,
														"src": "1797:8:11",
														"valueSize": 1
													},
													{
														"declaration": 1020,
														"isOffset": false,
														"isSlot": false,
														"src": "1836:5:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1023,
												"nodeType": "InlineAssembly",
												"src": "1748:177:11"
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "1586:81:11",
										"text": "@dev Reverts with a custom error with a uint160 argument in the scratch space"
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "1681:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "1699:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1692:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1017,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1692:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1717:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1709:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1019,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1691:32:11"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1738:0:11"
									},
									"scope": 1079,
									"src": "1672:259:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "2082:267:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2117:226:11",
													"nodeType": "YulBlock",
													"src": "2117:226:11",
													"statements": [
														{
															"nativeSrc": "2131:22:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2131:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2148:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2148:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2142:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2142:5:11"
																},
																"nativeSrc": "2142:11:11",
																"nodeType": "YulFunctionCall",
																"src": "2142:11:11"
															},
															"variables": [
																{
																	"name": "fmp",
																	"nativeSrc": "2135:3:11",
																	"nodeType": "YulTypedName",
																	"src": "2135:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "2173:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2173:3:11"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "2178:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2178:8:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2166:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2166:6:11"
																},
																"nativeSrc": "2166:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2166:21:11"
															},
															"nativeSrc": "2166:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "2166:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "2211:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2211:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2216:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2216:4:11",
																				"type": "",
																				"value": "0x04"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2207:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:11"
																		},
																		"nativeSrc": "2207:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2207:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2234:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2234:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value1",
																				"nativeSrc": "2237:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2237:6:11"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "2223:10:11",
																			"nodeType": "YulIdentifier",
																			"src": "2223:10:11"
																		},
																		"nativeSrc": "2223:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2223:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2200:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2200:6:11"
																},
																"nativeSrc": "2200:45:11",
																"nodeType": "YulFunctionCall",
																"src": "2200:45:11"
															},
															"nativeSrc": "2200:45:11",
															"nodeType": "YulExpressionStatement",
															"src": "2200:45:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "2269:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2269:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2274:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2274:4:11",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2265:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2265:3:11"
																		},
																		"nativeSrc": "2265:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2265:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2292:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2292:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value2",
																				"nativeSrc": "2295:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2295:6:11"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "2281:10:11",
																			"nodeType": "YulIdentifier",
																			"src": "2281:10:11"
																		},
																		"nativeSrc": "2281:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2281:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2258:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:11"
																},
																"nativeSrc": "2258:45:11",
																"nodeType": "YulFunctionCall",
																"src": "2258:45:11"
															},
															"nativeSrc": "2258:45:11",
															"nodeType": "YulExpressionStatement",
															"src": "2258:45:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "2323:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2323:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2328:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2328:4:11",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2316:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2316:6:11"
																},
																"nativeSrc": "2316:17:11",
																"nodeType": "YulFunctionCall",
																"src": "2316:17:11"
															},
															"nativeSrc": "2316:17:11",
															"nodeType": "YulExpressionStatement",
															"src": "2316:17:11"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1028,
														"isOffset": false,
														"isSlot": false,
														"src": "2178:8:11",
														"valueSize": 1
													},
													{
														"declaration": 1030,
														"isOffset": false,
														"isSlot": false,
														"src": "2237:6:11",
														"valueSize": 1
													},
													{
														"declaration": 1032,
														"isOffset": false,
														"isSlot": false,
														"src": "2295:6:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1035,
												"nodeType": "InlineAssembly",
												"src": "2092:251:11"
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "1937:61:11",
										"text": "@dev Reverts with a custom error with two int24 arguments"
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "2012:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "2030:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2023:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1027,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2023:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "value1",
												"nameLocation": "2046:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2040:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1029,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2040:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "value2",
												"nameLocation": "2060:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2054:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1031,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2054:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:45:11"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:11"
									},
									"scope": 1079,
									"src": "2003:346:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "2506:335:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2541:294:11",
													"nodeType": "YulBlock",
													"src": "2541:294:11",
													"statements": [
														{
															"nativeSrc": "2555:22:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2555:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2572:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2572:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2566:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:11"
																},
																"nativeSrc": "2566:11:11",
																"nodeType": "YulFunctionCall",
																"src": "2566:11:11"
															},
															"variables": [
																{
																	"name": "fmp",
																	"nativeSrc": "2559:3:11",
																	"nodeType": "YulTypedName",
																	"src": "2559:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "2597:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2597:3:11"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "2602:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2602:8:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2590:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2590:6:11"
																},
																"nativeSrc": "2590:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2590:21:11"
															},
															"nativeSrc": "2590:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "2590:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "2635:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2635:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2640:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2640:4:11",
																				"type": "",
																				"value": "0x04"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2631:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2631:3:11"
																		},
																		"nativeSrc": "2631:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2631:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "2651:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2651:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2659:42:11",
																				"nodeType": "YulLiteral",
																				"src": "2659:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2647:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2647:3:11"
																		},
																		"nativeSrc": "2647:55:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2647:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2624:6:11"
																},
																"nativeSrc": "2624:79:11",
																"nodeType": "YulFunctionCall",
																"src": "2624:79:11"
															},
															"nativeSrc": "2624:79:11",
															"nodeType": "YulExpressionStatement",
															"src": "2624:79:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "2727:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2727:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2732:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2732:4:11",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2723:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2723:3:11"
																		},
																		"nativeSrc": "2723:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "2743:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2743:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2751:42:11",
																				"nodeType": "YulLiteral",
																				"src": "2751:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2739:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2739:3:11"
																		},
																		"nativeSrc": "2739:55:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2739:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2716:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:11"
																},
																"nativeSrc": "2716:79:11",
																"nodeType": "YulFunctionCall",
																"src": "2716:79:11"
															},
															"nativeSrc": "2716:79:11",
															"nodeType": "YulExpressionStatement",
															"src": "2716:79:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "2815:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2815:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2820:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2820:4:11",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2808:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:11"
																},
																"nativeSrc": "2808:17:11",
																"nodeType": "YulFunctionCall",
																"src": "2808:17:11"
															},
															"nativeSrc": "2808:17:11",
															"nodeType": "YulExpressionStatement",
															"src": "2808:17:11"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1040,
														"isOffset": false,
														"isSlot": false,
														"src": "2602:8:11",
														"valueSize": 1
													},
													{
														"declaration": 1042,
														"isOffset": false,
														"isSlot": false,
														"src": "2651:6:11",
														"valueSize": 1
													},
													{
														"declaration": 1044,
														"isOffset": false,
														"isSlot": false,
														"src": "2743:6:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1047,
												"nodeType": "InlineAssembly",
												"src": "2516:319:11"
											}
										]
									},
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "2355:63:11",
										"text": "@dev Reverts with a custom error with two uint160 arguments"
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "2432:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "2450:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2443:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1039,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2443:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "value1",
												"nameLocation": "2468:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2460:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1041,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "value2",
												"nameLocation": "2484:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2476:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1043,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:49:11"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2506:0:11"
									},
									"scope": 1079,
									"src": "2423:418:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "2998:335:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3033:294:11",
													"nodeType": "YulBlock",
													"src": "3033:294:11",
													"statements": [
														{
															"nativeSrc": "3047:22:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3047:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3064:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3064:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3058:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3058:5:11"
																},
																"nativeSrc": "3058:11:11",
																"nodeType": "YulFunctionCall",
																"src": "3058:11:11"
															},
															"variables": [
																{
																	"name": "fmp",
																	"nativeSrc": "3051:3:11",
																	"nodeType": "YulTypedName",
																	"src": "3051:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "3089:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3089:3:11"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "3094:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "3094:8:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3082:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:11"
																},
																"nativeSrc": "3082:21:11",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:11"
															},
															"nativeSrc": "3082:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "3082:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "3127:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3127:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3132:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3132:4:11",
																				"type": "",
																				"value": "0x04"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3123:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3123:3:11"
																		},
																		"nativeSrc": "3123:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3123:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3143:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3143:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3151:42:11",
																				"nodeType": "YulLiteral",
																				"src": "3151:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3139:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3139:3:11"
																		},
																		"nativeSrc": "3139:55:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3139:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3116:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:11"
																},
																"nativeSrc": "3116:79:11",
																"nodeType": "YulFunctionCall",
																"src": "3116:79:11"
															},
															"nativeSrc": "3116:79:11",
															"nodeType": "YulExpressionStatement",
															"src": "3116:79:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "3219:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3219:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3224:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3224:4:11",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3215:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3215:3:11"
																		},
																		"nativeSrc": "3215:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3215:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "3235:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3235:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3243:42:11",
																				"nodeType": "YulLiteral",
																				"src": "3243:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3231:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3231:3:11"
																		},
																		"nativeSrc": "3231:55:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3231:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3208:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3208:6:11"
																},
																"nativeSrc": "3208:79:11",
																"nodeType": "YulFunctionCall",
																"src": "3208:79:11"
															},
															"nativeSrc": "3208:79:11",
															"nodeType": "YulExpressionStatement",
															"src": "3208:79:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "3307:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3307:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3312:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3312:4:11",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3300:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3300:6:11"
																},
																"nativeSrc": "3300:17:11",
																"nodeType": "YulFunctionCall",
																"src": "3300:17:11"
															},
															"nativeSrc": "3300:17:11",
															"nodeType": "YulExpressionStatement",
															"src": "3300:17:11"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1052,
														"isOffset": false,
														"isSlot": false,
														"src": "3094:8:11",
														"valueSize": 1
													},
													{
														"declaration": 1054,
														"isOffset": false,
														"isSlot": false,
														"src": "3143:6:11",
														"valueSize": 1
													},
													{
														"declaration": 1056,
														"isOffset": false,
														"isSlot": false,
														"src": "3235:6:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1059,
												"nodeType": "InlineAssembly",
												"src": "3008:319:11"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "2847:63:11",
										"text": "@dev Reverts with a custom error with two address arguments"
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "2924:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "2942:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2935:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1051,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2935:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "value1",
												"nameLocation": "2960:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2952:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "value2",
												"nameLocation": "2976:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2968:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2968:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2934:49:11"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2998:0:11"
									},
									"scope": 1079,
									"src": "2915:418:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "3670:1501:11",
										"statements": [
											{
												"assignments": [
													1072
												],
												"declarations": [
													{
														"constant": false,
														"id": 1072,
														"mutability": "mutable",
														"name": "wrappedErrorSelector",
														"nameLocation": "3687:20:11",
														"nodeType": "VariableDeclaration",
														"scope": 1077,
														"src": "3680:27:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"typeName": {
															"id": 1071,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "3680:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1075,
												"initialValue": {
													"expression": {
														"id": 1073,
														"name": "WrappedError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "3710:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes4_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_error_$",
															"typeString": "function (address,bytes4,bytes memory,bytes memory) pure returns (error)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3723:8:11",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "3710:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3680:51:11"
											},
											{
												"AST": {
													"nativeSrc": "3766:1399:11",
													"nodeType": "YulBlock",
													"src": "3766:1399:11",
													"statements": [
														{
															"nativeSrc": "3856:66:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3856:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "3891:14:11",
																							"nodeType": "YulIdentifier",
																							"src": "3891:14:11"
																						},
																						"nativeSrc": "3891:16:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3891:16:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3909:2:11",
																						"nodeType": "YulLiteral",
																						"src": "3909:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3887:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3887:3:11"
																				},
																				"nativeSrc": "3887:25:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3887:25:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3914:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3914:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3883:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3883:3:11"
																		},
																		"nativeSrc": "3883:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3883:34:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3919:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3919:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3879:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3879:3:11"
																},
																"nativeSrc": "3879:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3879:43:11"
															},
															"variables": [
																{
																	"name": "encodedDataSize",
																	"nativeSrc": "3860:15:11",
																	"nodeType": "YulTypedName",
																	"src": "3860:15:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3936:22:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3953:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3953:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3947:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3947:5:11"
																},
																"nativeSrc": "3947:11:11",
																"nodeType": "YulFunctionCall",
																"src": "3947:11:11"
															},
															"variables": [
																{
																	"name": "fmp",
																	"nativeSrc": "3940:3:11",
																	"nodeType": "YulTypedName",
																	"src": "3940:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "4101:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4101:3:11"
																	},
																	{
																		"name": "wrappedErrorSelector",
																		"nativeSrc": "4106:20:11",
																		"nodeType": "YulIdentifier",
																		"src": "4106:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4094:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4094:6:11"
																},
																"nativeSrc": "4094:33:11",
																"nodeType": "YulFunctionCall",
																"src": "4094:33:11"
															},
															"nativeSrc": "4094:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "4094:33:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4151:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4151:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4156:4:11",
																				"nodeType": "YulLiteral",
																				"src": "4156:4:11",
																				"type": "",
																				"value": "0x04"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4147:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:11"
																		},
																		"nativeSrc": "4147:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "revertingContract",
																				"nativeSrc": "4167:17:11",
																				"nodeType": "YulIdentifier",
																				"src": "4167:17:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4186:42:11",
																				"nodeType": "YulLiteral",
																				"src": "4186:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4163:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4163:3:11"
																		},
																		"nativeSrc": "4163:66:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4163:66:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4140:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4140:6:11"
																},
																"nativeSrc": "4140:90:11",
																"nodeType": "YulFunctionCall",
																"src": "4140:90:11"
															},
															"nativeSrc": "4140:90:11",
															"nodeType": "YulExpressionStatement",
															"src": "4140:90:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4271:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4271:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4276:4:11",
																				"nodeType": "YulLiteral",
																				"src": "4276:4:11",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4267:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4267:3:11"
																		},
																		"nativeSrc": "4267:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4267:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "revertingFunctionSelector",
																				"nativeSrc": "4303:25:11",
																				"nodeType": "YulIdentifier",
																				"src": "4303:25:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4330:66:11",
																				"nodeType": "YulLiteral",
																				"src": "4330:66:11",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4299:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4299:3:11"
																		},
																		"nativeSrc": "4299:98:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4299:98:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4243:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4243:6:11"
																},
																"nativeSrc": "4243:168:11",
																"nodeType": "YulFunctionCall",
																"src": "4243:168:11"
															},
															"nativeSrc": "4243:168:11",
															"nodeType": "YulExpressionStatement",
															"src": "4243:168:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4471:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4471:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4476:4:11",
																				"nodeType": "YulLiteral",
																				"src": "4476:4:11",
																				"type": "",
																				"value": "0x44"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4467:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4467:3:11"
																		},
																		"nativeSrc": "4467:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4467:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4483:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4483:4:11",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4460:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4460:6:11"
																},
																"nativeSrc": "4460:28:11",
																"nodeType": "YulFunctionCall",
																"src": "4460:28:11"
															},
															"nativeSrc": "4460:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "4460:28:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4553:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4553:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4558:4:11",
																				"nodeType": "YulLiteral",
																				"src": "4558:4:11",
																				"type": "",
																				"value": "0x64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4549:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:11"
																		},
																		"nativeSrc": "4549:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4549:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4569:4:11",
																				"nodeType": "YulLiteral",
																				"src": "4569:4:11",
																				"type": "",
																				"value": "0xa0"
																			},
																			{
																				"name": "encodedDataSize",
																				"nativeSrc": "4575:15:11",
																				"nodeType": "YulIdentifier",
																				"src": "4575:15:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4565:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:11"
																		},
																		"nativeSrc": "4565:26:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:26:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4542:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4542:6:11"
																},
																"nativeSrc": "4542:50:11",
																"nodeType": "YulFunctionCall",
																"src": "4542:50:11"
															},
															"nativeSrc": "4542:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "4542:50:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4650:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4650:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4655:4:11",
																				"nodeType": "YulLiteral",
																				"src": "4655:4:11",
																				"type": "",
																				"value": "0x84"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4646:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4646:3:11"
																		},
																		"nativeSrc": "4646:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4646:14:11"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "4662:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "4662:14:11"
																		},
																		"nativeSrc": "4662:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4662:16:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4639:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4639:6:11"
																},
																"nativeSrc": "4639:40:11",
																"nodeType": "YulFunctionCall",
																"src": "4639:40:11"
															},
															"nativeSrc": "4639:40:11",
															"nodeType": "YulExpressionStatement",
															"src": "4639:40:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4740:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4740:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4745:4:11",
																				"nodeType": "YulLiteral",
																				"src": "4745:4:11",
																				"type": "",
																				"value": "0xa4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4736:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4736:3:11"
																		},
																		"nativeSrc": "4736:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4736:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4752:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4752:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "4755:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "4755:14:11"
																		},
																		"nativeSrc": "4755:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4755:16:11"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "4721:14:11",
																	"nodeType": "YulIdentifier",
																	"src": "4721:14:11"
																},
																"nativeSrc": "4721:51:11",
																"nodeType": "YulFunctionCall",
																"src": "4721:51:11"
															},
															"nativeSrc": "4721:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "4721:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4835:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4835:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4844:4:11",
																						"nodeType": "YulLiteral",
																						"src": "4844:4:11",
																						"type": "",
																						"value": "0xa4"
																					},
																					{
																						"name": "encodedDataSize",
																						"nativeSrc": "4850:15:11",
																						"nodeType": "YulIdentifier",
																						"src": "4850:15:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4840:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4840:3:11"
																				},
																				"nativeSrc": "4840:26:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4840:26:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4831:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4831:3:11"
																		},
																		"nativeSrc": "4831:36:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4831:36:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4869:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4869:4:11",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4824:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4824:6:11"
																},
																"nativeSrc": "4824:50:11",
																"nodeType": "YulFunctionCall",
																"src": "4824:50:11"
															},
															"nativeSrc": "4824:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "4824:50:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4949:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4949:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4958:4:11",
																						"nodeType": "YulLiteral",
																						"src": "4958:4:11",
																						"type": "",
																						"value": "0xc4"
																					},
																					{
																						"name": "encodedDataSize",
																						"nativeSrc": "4964:15:11",
																						"nodeType": "YulIdentifier",
																						"src": "4964:15:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4954:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4954:3:11"
																				},
																				"nativeSrc": "4954:26:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4954:26:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4945:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4945:3:11"
																		},
																		"nativeSrc": "4945:36:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4945:36:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "additionalContext",
																				"nativeSrc": "5003:17:11",
																				"nodeType": "YulIdentifier",
																				"src": "5003:17:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5022:66:11",
																				"nodeType": "YulLiteral",
																				"src": "5022:66:11",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4999:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:11"
																		},
																		"nativeSrc": "4999:90:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4999:90:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4921:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:11"
																},
																"nativeSrc": "4921:182:11",
																"nodeType": "YulFunctionCall",
																"src": "4921:182:11"
															},
															"nativeSrc": "4921:182:11",
															"nodeType": "YulExpressionStatement",
															"src": "4921:182:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "5123:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5123:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5132:4:11",
																				"nodeType": "YulLiteral",
																				"src": "5132:4:11",
																				"type": "",
																				"value": "0xe4"
																			},
																			{
																				"name": "encodedDataSize",
																				"nativeSrc": "5138:15:11",
																				"nodeType": "YulIdentifier",
																				"src": "5138:15:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5128:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5128:3:11"
																		},
																		"nativeSrc": "5128:26:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5128:26:11"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5116:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5116:6:11"
																},
																"nativeSrc": "5116:39:11",
																"nodeType": "YulFunctionCall",
																"src": "5116:39:11"
															},
															"nativeSrc": "5116:39:11",
															"nodeType": "YulExpressionStatement",
															"src": "5116:39:11"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1068,
														"isOffset": false,
														"isSlot": false,
														"src": "5003:17:11",
														"valueSize": 1
													},
													{
														"declaration": 1064,
														"isOffset": false,
														"isSlot": false,
														"src": "4167:17:11",
														"valueSize": 1
													},
													{
														"declaration": 1066,
														"isOffset": false,
														"isSlot": false,
														"src": "4303:25:11",
														"valueSize": 1
													},
													{
														"declaration": 1072,
														"isOffset": false,
														"isSlot": false,
														"src": "4106:20:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1076,
												"nodeType": "InlineAssembly",
												"src": "3741:1424:11"
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "3339:164:11",
										"text": "@notice bubble up the revert message returned by a call and revert with a wrapped ERC-7751 error\n @dev this method can be vulnerable to revert data bombs"
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bubbleUpAndRevertWith",
									"nameLocation": "3517:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "revertingContract",
												"nameLocation": "3556:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "3548:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "revertingFunctionSelector",
												"nameLocation": "3590:25:11",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "3583:32:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1065,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3583:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "additionalContext",
												"nameLocation": "3632:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "3625:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3625:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:117:11"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3670:0:11"
									},
									"scope": 1079,
									"src": "3508:1663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1080,
							"src": "501:4672:11",
							"usedErrors": [
								987
							],
							"usedEvents": []
						}
					],
					"src": "32:5142:11"
				},
				"id": 11
			},
			"@uniswap/v4-core/src/libraries/Lock.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/libraries/Lock.sol",
					"exportedSymbols": {
						"Lock": [
							1103
						]
					},
					"id": 1104,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1081,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Lock",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1082,
								"nodeType": "StructuredDocumentation",
								"src": "63:189:12",
								"text": "@notice This is a temporary library that allows us to use transient storage (tstore/tload)\n TODO: This library can be deleted when we have the transient keyword support in solidity."
							},
							"fullyImplemented": true,
							"id": 1103,
							"linearizedBaseContracts": [
								1103
							],
							"name": "Lock",
							"nameLocation": "260:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1085,
									"mutability": "constant",
									"name": "IS_UNLOCKED_SLOT",
									"nameLocation": "398:16:12",
									"nodeType": "VariableDeclaration",
									"scope": 1103,
									"src": "372:111:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1083,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863303930666334363833363234636663333838346539643864653565636131333266326430656330363261666637356434336330343635643563656561623233",
										"id": 1084,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "417:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_87100234046427240614499661373387320107015461065347489303548037305558901893923_by_1",
											"typeString": "int_const 8710...(69 digits omitted)...3923"
										},
										"value": "0xc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab23"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "517:117:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "552:76:12",
													"nodeType": "YulBlock",
													"src": "552:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "IS_UNLOCKED_SLOT",
																		"nativeSrc": "595:16:12",
																		"nodeType": "YulIdentifier",
																		"src": "595:16:12"
																	},
																	{
																		"kind": "bool",
																		"nativeSrc": "613:4:12",
																		"nodeType": "YulLiteral",
																		"src": "613:4:12",
																		"type": "",
																		"value": "true"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "588:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "588:6:12"
																},
																"nativeSrc": "588:30:12",
																"nodeType": "YulFunctionCall",
																"src": "588:30:12"
															},
															"nativeSrc": "588:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "588:30:12"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1085,
														"isOffset": false,
														"isSlot": false,
														"src": "595:16:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1088,
												"nodeType": "InlineAssembly",
												"src": "527:101:12"
											}
										]
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unlock",
									"nameLocation": "499:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "505:2:12"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:0:12"
									},
									"scope": 1103,
									"src": "490:144:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "665:96:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "700:55:12",
													"nodeType": "YulBlock",
													"src": "700:55:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "IS_UNLOCKED_SLOT",
																		"nativeSrc": "721:16:12",
																		"nodeType": "YulIdentifier",
																		"src": "721:16:12"
																	},
																	{
																		"kind": "bool",
																		"nativeSrc": "739:5:12",
																		"nodeType": "YulLiteral",
																		"src": "739:5:12",
																		"type": "",
																		"value": "false"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "714:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:6:12"
																},
																"nativeSrc": "714:31:12",
																"nodeType": "YulFunctionCall",
																"src": "714:31:12"
															},
															"nativeSrc": "714:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:31:12"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1085,
														"isOffset": false,
														"isSlot": false,
														"src": "721:16:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1093,
												"nodeType": "InlineAssembly",
												"src": "675:80:12"
											}
										]
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lock",
									"nameLocation": "649:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "653:2:12"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:0:12"
									},
									"scope": 1103,
									"src": "640:121:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "827:100:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "862:59:12",
													"nodeType": "YulBlock",
													"src": "862:59:12",
													"statements": [
														{
															"nativeSrc": "876:35:12",
															"nodeType": "YulAssignment",
															"src": "876:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "IS_UNLOCKED_SLOT",
																		"nativeSrc": "894:16:12",
																		"nodeType": "YulIdentifier",
																		"src": "894:16:12"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "888:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "888:5:12"
																},
																"nativeSrc": "888:23:12",
																"nodeType": "YulFunctionCall",
																"src": "888:23:12"
															},
															"variableNames": [
																{
																	"name": "unlocked",
																	"nativeSrc": "876:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "876:8:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1085,
														"isOffset": false,
														"isSlot": false,
														"src": "894:16:12",
														"valueSize": 1
													},
													{
														"declaration": 1098,
														"isOffset": false,
														"isSlot": false,
														"src": "876:8:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1100,
												"nodeType": "InlineAssembly",
												"src": "837:84:12"
											}
										]
									},
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUnlocked",
									"nameLocation": "776:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:2:12"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "817:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "812:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1097,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "812:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:15:12"
									},
									"scope": 1103,
									"src": "767:160:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1104,
							"src": "252:677:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:893:12"
				},
				"id": 12
			},
			"@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
					"exportedSymbols": {
						"NonzeroDeltaCount": [
							1128
						]
					},
					"id": 1129,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "NonzeroDeltaCount",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1106,
								"nodeType": "StructuredDocumentation",
								"src": "63:222:13",
								"text": "@notice This is a temporary library that allows us to use transient storage (tstore/tload)\n for the nonzero delta count.\n TODO: This library can be deleted when we have the transient keyword support in solidity."
							},
							"fullyImplemented": true,
							"id": 1128,
							"linearizedBaseContracts": [
								1128
							],
							"name": "NonzeroDeltaCount",
							"nameLocation": "293:17:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1109,
									"mutability": "constant",
									"name": "NONZERO_DELTA_COUNT_SLOT",
									"nameLocation": "450:24:13",
									"nodeType": "VariableDeclaration",
									"scope": 1128,
									"src": "424:127:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1107,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "424:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307837643462333136346336653435623937653764383762373132356134346335383238643030356166383866396437353163666437383732396335643939613062",
										"id": 1108,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "485:66:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_56671960505278111519104690822132496699113179860588238901689140059013086026251_by_1",
											"typeString": "int_const 5667...(69 digits omitted)...6251"
										},
										"value": "0x7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "612:105:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "647:64:13",
													"nodeType": "YulBlock",
													"src": "647:64:13",
													"statements": [
														{
															"nativeSrc": "661:40:13",
															"nodeType": "YulAssignment",
															"src": "661:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "NONZERO_DELTA_COUNT_SLOT",
																		"nativeSrc": "676:24:13",
																		"nodeType": "YulIdentifier",
																		"src": "676:24:13"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "670:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "670:5:13"
																},
																"nativeSrc": "670:31:13",
																"nodeType": "YulFunctionCall",
																"src": "670:31:13"
															},
															"variableNames": [
																{
																	"name": "count",
																	"nativeSrc": "661:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "661:5:13"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1109,
														"isOffset": false,
														"isSlot": false,
														"src": "676:24:13",
														"valueSize": 1
													},
													{
														"declaration": 1112,
														"isOffset": false,
														"isSlot": false,
														"src": "661:5:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1114,
												"nodeType": "InlineAssembly",
												"src": "622:89:13"
											}
										]
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "read",
									"nameLocation": "567:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "571:2:13"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "count",
												"nameLocation": "605:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "597:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:15:13"
									},
									"scope": 1128,
									"src": "558:159:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "753:196:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "788:155:13",
													"nodeType": "YulBlock",
													"src": "788:155:13",
													"statements": [
														{
															"nativeSrc": "802:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "802:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "NONZERO_DELTA_COUNT_SLOT",
																		"nativeSrc": "821:24:13",
																		"nodeType": "YulIdentifier",
																		"src": "821:24:13"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "815:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "815:5:13"
																},
																"nativeSrc": "815:31:13",
																"nodeType": "YulFunctionCall",
																"src": "815:31:13"
															},
															"variables": [
																{
																	"name": "count",
																	"nativeSrc": "806:5:13",
																	"nodeType": "YulTypedName",
																	"src": "806:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "859:22:13",
															"nodeType": "YulAssignment",
															"src": "859:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "count",
																		"nativeSrc": "872:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "872:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "879:1:13",
																		"nodeType": "YulLiteral",
																		"src": "879:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "868:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "868:3:13"
																},
																"nativeSrc": "868:13:13",
																"nodeType": "YulFunctionCall",
																"src": "868:13:13"
															},
															"variableNames": [
																{
																	"name": "count",
																	"nativeSrc": "859:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "859:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "NONZERO_DELTA_COUNT_SLOT",
																		"nativeSrc": "901:24:13",
																		"nodeType": "YulIdentifier",
																		"src": "901:24:13"
																	},
																	{
																		"name": "count",
																		"nativeSrc": "927:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:13"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "894:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:13"
																},
																"nativeSrc": "894:39:13",
																"nodeType": "YulFunctionCall",
																"src": "894:39:13"
															},
															"nativeSrc": "894:39:13",
															"nodeType": "YulExpressionStatement",
															"src": "894:39:13"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1109,
														"isOffset": false,
														"isSlot": false,
														"src": "821:24:13",
														"valueSize": 1
													},
													{
														"declaration": 1109,
														"isOffset": false,
														"isSlot": false,
														"src": "901:24:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1119,
												"nodeType": "InlineAssembly",
												"src": "763:180:13"
											}
										]
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "732:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "741:2:13"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "753:0:13"
									},
									"scope": 1128,
									"src": "723:226:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "1261:196:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1296:155:13",
													"nodeType": "YulBlock",
													"src": "1296:155:13",
													"statements": [
														{
															"nativeSrc": "1310:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1310:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "NONZERO_DELTA_COUNT_SLOT",
																		"nativeSrc": "1329:24:13",
																		"nodeType": "YulIdentifier",
																		"src": "1329:24:13"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "1323:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1323:5:13"
																},
																"nativeSrc": "1323:31:13",
																"nodeType": "YulFunctionCall",
																"src": "1323:31:13"
															},
															"variables": [
																{
																	"name": "count",
																	"nativeSrc": "1314:5:13",
																	"nodeType": "YulTypedName",
																	"src": "1314:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1367:22:13",
															"nodeType": "YulAssignment",
															"src": "1367:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "count",
																		"nativeSrc": "1380:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1380:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1387:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1376:3:13"
																},
																"nativeSrc": "1376:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1376:13:13"
															},
															"variableNames": [
																{
																	"name": "count",
																	"nativeSrc": "1367:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1367:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "NONZERO_DELTA_COUNT_SLOT",
																		"nativeSrc": "1409:24:13",
																		"nodeType": "YulIdentifier",
																		"src": "1409:24:13"
																	},
																	{
																		"name": "count",
																		"nativeSrc": "1435:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1435:5:13"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "1402:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1402:6:13"
																},
																"nativeSrc": "1402:39:13",
																"nodeType": "YulFunctionCall",
																"src": "1402:39:13"
															},
															"nativeSrc": "1402:39:13",
															"nodeType": "YulExpressionStatement",
															"src": "1402:39:13"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1109,
														"isOffset": false,
														"isSlot": false,
														"src": "1329:24:13",
														"valueSize": 1
													},
													{
														"declaration": 1109,
														"isOffset": false,
														"isSlot": false,
														"src": "1409:24:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1125,
												"nodeType": "InlineAssembly",
												"src": "1271:180:13"
											}
										]
									},
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "955:271:13",
										"text": "@notice Potential to underflow. Ensure checks are performed by integrating contracts to ensure this does not happen.\n Current usage ensures this will not happen because we call decrement with known boundaries (only up to the number of times we call increment)."
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1240:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1249:2:13"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:0:13"
									},
									"scope": 1128,
									"src": "1231:226:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1129,
							"src": "285:1174:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1423:13"
				},
				"id": 13
			},
			"@uniswap/v4-core/src/libraries/SafeCast.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/libraries/SafeCast.sol",
					"exportedSymbols": {
						"CustomRevert": [
							1079
						],
						"SafeCast": [
							1304
						]
					},
					"id": 1305,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:14"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/libraries/CustomRevert.sol",
							"file": "./CustomRevert.sol",
							"id": 1132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1305,
							"sourceUnit": 1080,
							"src": "57:48:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1131,
										"name": "CustomRevert",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1079,
										"src": "65:12:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1133,
								"nodeType": "StructuredDocumentation",
								"src": "107:94:14",
								"text": "@title Safe casting methods\n @notice Contains methods for safely casting between types"
							},
							"fullyImplemented": true,
							"id": 1304,
							"linearizedBaseContracts": [
								1304
							],
							"name": "SafeCast",
							"nameLocation": "209:8:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1136,
									"libraryName": {
										"id": 1134,
										"name": "CustomRevert",
										"nameLocations": [
											"230:12:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1079,
										"src": "230:12:14"
									},
									"nodeType": "UsingForDirective",
									"src": "224:30:14",
									"typeName": {
										"id": 1135,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "247:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									}
								},
								{
									"errorSelector": "93dafdf1",
									"id": 1138,
									"name": "SafeCastOverflow",
									"nameLocation": "266:16:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:2:14"
									},
									"src": "260:25:14"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "524:91:14",
										"statements": [
											{
												"expression": {
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1146,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "534:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1149,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "546:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "538:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 1147,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "538:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "538:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "534:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "534:14:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1153,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "562:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1154,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "567:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "562:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1163,
												"nodeType": "IfStatement",
												"src": "558:50:14",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 1156,
																	"name": "SafeCastOverflow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "570:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "587:8:14",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "570:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "596:10:14",
															"memberName": "revertWith",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 995,
															"src": "570:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$attached_to$_t_bytes4_$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "570:38:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1162,
													"nodeType": "ExpressionStatement",
													"src": "570:38:14"
												}
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "291:164:14",
										"text": "@notice Cast a uint256 to a uint160, revert on overflow\n @param x The uint256 to be downcasted\n @return y The downcasted integer, now type uint160"
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "469:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "487:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "479:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:11:14"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "521:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "513:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1143,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:11:14"
									},
									"scope": 1304,
									"src": "460:155:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "854:91:14",
										"statements": [
											{
												"expression": {
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1173,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "864:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1176,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "876:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "868:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint128_$",
																"typeString": "type(uint128)"
															},
															"typeName": {
																"id": 1174,
																"name": "uint128",
																"nodeType": "ElementaryTypeName",
																"src": "868:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "868:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "864:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "864:14:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1180,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "892:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1181,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "897:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "892:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1190,
												"nodeType": "IfStatement",
												"src": "888:50:14",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 1183,
																	"name": "SafeCastOverflow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "900:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "917:8:14",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "900:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "926:10:14",
															"memberName": "revertWith",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 995,
															"src": "900:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$attached_to$_t_bytes4_$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "900:38:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1189,
													"nodeType": "ExpressionStatement",
													"src": "900:38:14"
												}
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "621:164:14",
										"text": "@notice Cast a uint256 to a uint128, revert on overflow\n @param x The uint256 to be downcasted\n @return y The downcasted integer, now type uint128"
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "799:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "817:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "809:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:11:14"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "851:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "843:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1170,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "842:11:14"
									},
									"scope": 1304,
									"src": "790:155:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "1186:90:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1200,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "1200:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1204:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1200:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1210,
												"nodeType": "IfStatement",
												"src": "1196:49:14",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 1203,
																	"name": "SafeCastOverflow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "1207:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1224:8:14",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "1207:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1233:10:14",
															"memberName": "revertWith",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 995,
															"src": "1207:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$attached_to$_t_bytes4_$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1207:38:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1209,
													"nodeType": "ExpressionStatement",
													"src": "1207:38:14"
												}
											},
											{
												"expression": {
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1211,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "1255:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1214,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "1267:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															],
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1259:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint128_$",
																"typeString": "type(uint128)"
															},
															"typeName": {
																"id": 1212,
																"name": "uint128",
																"nodeType": "ElementaryTypeName",
																"src": "1259:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1259:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "1255:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "1255:14:14"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "951:167:14",
										"text": "@notice Cast a int128 to a uint128, revert on overflow or underflow\n @param x The int128 to be casted\n @return y The casted integer, now type uint128"
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "1132:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1149:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1142:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1194,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1142:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:10:14"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1183:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1175:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1197,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:11:14"
									},
									"scope": 1304,
									"src": "1123:153:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "1521:90:14",
										"statements": [
											{
												"expression": {
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1227,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "1531:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1230,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "1542:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1535:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 1228,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "1535:6:14",
																"typeDescriptions": {}
															}
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1535:9:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "1531:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1234,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "1558:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1235,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "1563:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1558:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1244,
												"nodeType": "IfStatement",
												"src": "1554:50:14",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 1237,
																	"name": "SafeCastOverflow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "1566:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1583:8:14",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "1566:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1592:10:14",
															"memberName": "revertWith",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 995,
															"src": "1566:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$attached_to$_t_bytes4_$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1566:38:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1243,
													"nodeType": "ExpressionStatement",
													"src": "1566:38:14"
												}
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "1282:173:14",
										"text": "@notice Cast a int256 to a int128, revert on overflow or underflow\n @param x The int256 to be downcasted\n @return y The downcasted integer, now type int128"
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "1469:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1485:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1478:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1221,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1478:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1477:10:14"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1518:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1511:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1224,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1511:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:10:14"
									},
									"scope": 1304,
									"src": "1460:151:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "1838:89:14",
										"statements": [
											{
												"expression": {
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1254,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "1848:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1257,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "1859:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1852:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1255,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1852:6:14",
																"typeDescriptions": {}
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1852:9:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1848:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "1848:13:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1261,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "1875:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1879:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1875:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1271,
												"nodeType": "IfStatement",
												"src": "1871:49:14",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 1264,
																	"name": "SafeCastOverflow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "1882:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1899:8:14",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "1882:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1908:10:14",
															"memberName": "revertWith",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 995,
															"src": "1882:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$attached_to$_t_bytes4_$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1882:38:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1270,
													"nodeType": "ExpressionStatement",
													"src": "1882:38:14"
												}
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "1617:154:14",
										"text": "@notice Cast a uint256 to a int256, revert on overflow\n @param x The uint256 to be casted\n @return y The casted integer, now type int256"
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "1785:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1802:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1794:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1793:11:14"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1835:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1828:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1251,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1828:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1827:10:14"
									},
									"scope": 1304,
									"src": "1776:151:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "2158:108:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1281,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "2172:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
															"typeString": "int_const 1701...(31 digits omitted)...5728"
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2177:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "313237",
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_127_by_1",
																"typeString": "int_const 127"
															},
															"value": "127"
														},
														"src": "2177:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
															"typeString": "int_const 1701...(31 digits omitted)...5728"
														}
													},
													"src": "2172:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1293,
												"nodeType": "IfStatement",
												"src": "2168:57:14",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 1286,
																	"name": "SafeCastOverflow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "2187:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2204:8:14",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "2187:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2213:10:14",
															"memberName": "revertWith",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 995,
															"src": "2187:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$attached_to$_t_bytes4_$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2187:38:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1292,
													"nodeType": "ExpressionStatement",
													"src": "2187:38:14"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1298,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "2256:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2249:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 1296,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2249:6:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2249:9:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2242:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int128_$",
															"typeString": "type(int128)"
														},
														"typeName": {
															"id": 1294,
															"name": "int128",
															"nodeType": "ElementaryTypeName",
															"src": "2242:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2242:17:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"functionReturnParameters": 1280,
												"id": 1301,
												"nodeType": "Return",
												"src": "2235:24:14"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "1933:160:14",
										"text": "@notice Cast a uint256 to a int128, revert on overflow\n @param x The uint256 to be downcasted\n @return The downcasted integer, now type int128"
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "2107:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2124:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2116:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:11:14"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2150:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1278,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2150:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2149:8:14"
									},
									"scope": 1304,
									"src": "2098:168:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1305,
							"src": "201:2067:14",
							"usedErrors": [
								1138
							],
							"usedEvents": []
						}
					],
					"src": "32:2237:14"
				},
				"id": 14
			},
			"@uniswap/v4-core/src/libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/libraries/TickMath.sol",
					"exportedSymbols": {
						"BitMath": [
							925
						],
						"CustomRevert": [
							1079
						],
						"TickMath": [
							1858
						]
					},
					"id": 1859,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1306,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:15"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/libraries/BitMath.sol",
							"file": "./BitMath.sol",
							"id": 1308,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1859,
							"sourceUnit": 926,
							"src": "57:38:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1307,
										"name": "BitMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 925,
										"src": "65:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/libraries/CustomRevert.sol",
							"file": "./CustomRevert.sol",
							"id": 1310,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1859,
							"sourceUnit": 1080,
							"src": "96:48:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1309,
										"name": "CustomRevert",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1079,
										"src": "104:12:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "146:235:15",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 1858,
							"linearizedBaseContracts": [
								1858
							],
							"name": "TickMath",
							"nameLocation": "389:8:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1314,
									"libraryName": {
										"id": 1312,
										"name": "CustomRevert",
										"nameLocations": [
											"410:12:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1079,
										"src": "410:12:15"
									},
									"nodeType": "UsingForDirective",
									"src": "404:30:15",
									"typeName": {
										"id": 1313,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "427:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									}
								},
								{
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "440:99:15",
										"text": "@notice Thrown when the tick passed to #getSqrtPriceAtTick is not between MIN_TICK and MAX_TICK"
									},
									"errorSelector": "8b86327a",
									"id": 1319,
									"name": "InvalidTick",
									"nameLocation": "550:11:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "568:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "562:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1316,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "562:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:12:15"
									},
									"src": "544:30:15"
								},
								{
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "579:124:15",
										"text": "@notice Thrown when the price passed to #getTickAtSqrtPrice does not correspond to a price between MIN_TICK and MAX_TICK"
									},
									"errorSelector": "61487524",
									"id": 1324,
									"name": "InvalidSqrtPrice",
									"nameLocation": "714:16:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "739:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "731:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1321,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:22:15"
									},
									"src": "708:45:15"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "759:233:15",
										"text": "@dev The minimum tick that may be passed to #getSqrtPriceAtTick computed from log base 1.0001 of 2**-128\n @dev If ever MIN_TICK and MAX_TICK are not centered around 0, the absTick logic in getSqrtPriceAtTick cannot be used"
									},
									"id": 1329,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nameLocation": "1021:8:15",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "997:42:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1326,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "997:5:15",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 1328,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "1032:7:15",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 1327,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1033:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "1045:232:15",
										"text": "@dev The maximum tick that may be passed to #getSqrtPriceAtTick computed from log base 1.0001 of 2**128\n @dev If ever MIN_TICK and MAX_TICK are not centered around 0, the absTick logic in getSqrtPriceAtTick cannot be used"
									},
									"id": 1333,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nameLocation": "1306:8:15",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "1282:41:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1331,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "1282:5:15",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"hexValue": "383837323732",
										"id": 1332,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1317:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_887272_by_1",
											"typeString": "int_const 887272"
										},
										"value": "887272"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "1330:133:15",
										"text": "@dev The minimum tick spacing value drawn from the range of type int16 that is greater than 0, i.e. min from the range [1, 32767]"
									},
									"id": 1337,
									"mutability": "constant",
									"name": "MIN_TICK_SPACING",
									"nameLocation": "1492:16:15",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "1468:44:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1335,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "1468:5:15",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1336,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1511:1:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "1518:110:15",
										"text": "@dev The maximum tick spacing value drawn from the range of type int16, i.e. max from the range [1, 32767]"
									},
									"id": 1345,
									"mutability": "constant",
									"name": "MAX_TICK_SPACING",
									"nameLocation": "1657:16:15",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "1633:58:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1339,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "1633:5:15",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"expression": {
											"arguments": [
												{
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "1681:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_int16_$",
														"typeString": "type(int16)"
													},
													"typeName": {
														"id": 1341,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "1681:5:15",
														"typeDescriptions": {}
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_type$_t_int16_$",
														"typeString": "type(int16)"
													}
												],
												"id": 1340,
												"name": "type",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967269,
												"src": "1676:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
													"typeString": "function () pure"
												}
											},
											"id": 1343,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1676:11:15",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_magic_meta_type_t_int16",
												"typeString": "type(int16)"
											}
										},
										"id": 1344,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberLocation": "1688:3:15",
										"memberName": "max",
										"nodeType": "MemberAccess",
										"src": "1676:15:15",
										"typeDescriptions": {
											"typeIdentifier": "t_int16",
											"typeString": "int16"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "1698:116:15",
										"text": "@dev The minimum value that can be returned from #getSqrtPriceAtTick. Equivalent to getSqrtPriceAtTick(MIN_TICK)"
									},
									"id": 1349,
									"mutability": "constant",
									"name": "MIN_SQRT_PRICE",
									"nameLocation": "1845:14:15",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "1819:53:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 1347,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "1819:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 1348,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1862:10:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "1878:116:15",
										"text": "@dev The maximum value that can be returned from #getSqrtPriceAtTick. Equivalent to getSqrtPriceAtTick(MAX_TICK)"
									},
									"id": 1353,
									"mutability": "constant",
									"name": "MAX_SQRT_PRICE",
									"nameLocation": "2025:14:15",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "1999:92:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 1351,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "1999:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 1352,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2042:49:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "2097:98:15",
										"text": "@dev A threshold used for optimized bounds check, equals `MAX_SQRT_PRICE - MIN_SQRT_PRICE - 1`"
									},
									"id": 1361,
									"mutability": "constant",
									"name": "MAX_SQRT_PRICE_MINUS_MIN_SQRT_PRICE_MINUS_ONE",
									"nameLocation": "2226:45:15",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "2200:148:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 1355,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "2200:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822374428841602_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...1602"
										},
										"id": 1360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1461446703485210103287273052203988822374428841603_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...1603"
											},
											"id": 1358,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
												"id": 1356,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2282:49:15",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
													"typeString": "int_const 1461...(41 digits omitted)...0342"
												},
												"value": "1461446703485210103287273052203988822378723970342"
											},
											"nodeType": "BinaryOperation",
											"operator": "-",
											"rightExpression": {
												"hexValue": "34323935313238373339",
												"id": 1357,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2334:10:15",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4295128739_by_1",
													"typeString": "int_const 4295128739"
												},
												"value": "4295128739"
											},
											"src": "2282:62:15",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461446703485210103287273052203988822374428841603_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...1603"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1359,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2347:1:15",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2282:66:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822374428841602_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...1602"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1377,
										"nodeType": "Block",
										"src": "2496:96:15",
										"statements": [
											{
												"id": 1376,
												"nodeType": "UncheckedBlock",
												"src": "2506:80:15",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1369,
																			"name": "MAX_TICK",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1333,
																			"src": "2538:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1370,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1364,
																			"src": "2549:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "2538:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"id": 1372,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2537:24:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1373,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "2564:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2537:38:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"functionReturnParameters": 1368,
														"id": 1375,
														"nodeType": "Return",
														"src": "2530:45:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "2355:64:15",
										"text": "@notice Given a tickSpacing, compute the maximum usable tick"
									},
									"id": 1378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxUsableTick",
									"nameLocation": "2433:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "2453:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "2447:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1363,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:19:15"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "2489:5:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1366,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2489:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2488:7:15"
									},
									"scope": 1858,
									"src": "2424:168:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "2739:96:15",
										"statements": [
											{
												"id": 1393,
												"nodeType": "UncheckedBlock",
												"src": "2749:80:15",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1386,
																			"name": "MIN_TICK",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1329,
																			"src": "2781:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1387,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1381,
																			"src": "2792:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "2781:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"id": 1389,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2780:24:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1390,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "2807:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2780:38:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"functionReturnParameters": 1385,
														"id": 1392,
														"nodeType": "Return",
														"src": "2773:45:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "2598:64:15",
										"text": "@notice Given a tickSpacing, compute the minimum usable tick"
									},
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "minUsableTick",
									"nameLocation": "2676:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "2696:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2690:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1380,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2690:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2689:19:15"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2732:5:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1383,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2732:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2731:7:15"
									},
									"scope": 1858,
									"src": "2667:168:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "3234:3933:15",
										"statements": [
											{
												"id": 1715,
												"nodeType": "UncheckedBlock",
												"src": "3244:3917:15",
												"statements": [
													{
														"assignments": [
															1404
														],
														"declarations": [
															{
																"constant": false,
																"id": 1404,
																"mutability": "mutable",
																"name": "absTick",
																"nameLocation": "3276:7:15",
																"nodeType": "VariableDeclaration",
																"scope": 1715,
																"src": "3268:15:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1403,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3268:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1405,
														"nodeType": "VariableDeclarationStatement",
														"src": "3268:15:15"
													},
													{
														"AST": {
															"nativeSrc": "3322:434:15",
															"nodeType": "YulBlock",
															"src": "3322:434:15",
															"statements": [
																{
																	"nativeSrc": "3340:27:15",
																	"nodeType": "YulAssignment",
																	"src": "3340:27:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3359:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3359:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "tick",
																				"nativeSrc": "3362:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "3362:4:15"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "3348:10:15",
																			"nodeType": "YulIdentifier",
																			"src": "3348:10:15"
																		},
																		"nativeSrc": "3348:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3348:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "tick",
																			"nativeSrc": "3340:4:15",
																			"nodeType": "YulIdentifier",
																			"src": "3340:4:15"
																		}
																	]
																},
																{
																	"nativeSrc": "3442:26:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3442:26:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3458:3:15",
																				"nodeType": "YulLiteral",
																				"src": "3458:3:15",
																				"type": "",
																				"value": "255"
																			},
																			{
																				"name": "tick",
																				"nativeSrc": "3463:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "3463:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sar",
																			"nativeSrc": "3454:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3454:3:15"
																		},
																		"nativeSrc": "3454:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3454:14:15"
																	},
																	"variables": [
																		{
																			"name": "mask",
																			"nativeSrc": "3446:4:15",
																			"nodeType": "YulTypedName",
																			"src": "3446:4:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3705:37:15",
																	"nodeType": "YulAssignment",
																	"src": "3705:37:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3720:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "3720:4:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mask",
																						"nativeSrc": "3730:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "3730:4:15"
																					},
																					{
																						"name": "tick",
																						"nativeSrc": "3736:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "3736:4:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3726:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3726:3:15"
																				},
																				"nativeSrc": "3726:15:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3726:15:15"
																			}
																		],
																		"functionName": {
																			"name": "xor",
																			"nativeSrc": "3716:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:15"
																		},
																		"nativeSrc": "3716:26:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:26:15"
																	},
																	"variableNames": [
																		{
																			"name": "absTick",
																			"nativeSrc": "3705:7:15",
																			"nodeType": "YulIdentifier",
																			"src": "3705:7:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1404,
																"isOffset": false,
																"isSlot": false,
																"src": "3705:7:15",
																"valueSize": 1
															},
															{
																"declaration": 1398,
																"isOffset": false,
																"isSlot": false,
																"src": "3340:4:15",
																"valueSize": 1
															},
															{
																"declaration": 1398,
																"isOffset": false,
																"isSlot": false,
																"src": "3362:4:15",
																"valueSize": 1
															},
															{
																"declaration": 1398,
																"isOffset": false,
																"isSlot": false,
																"src": "3463:4:15",
																"valueSize": 1
															},
															{
																"declaration": 1398,
																"isOffset": false,
																"isSlot": false,
																"src": "3736:4:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1406,
														"nodeType": "InlineAssembly",
														"src": "3297:459:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1407,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "3774:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1412,
																				"name": "MAX_TICK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1333,
																				"src": "3799:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			],
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3792:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 1410,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3792:6:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3792:16:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3784:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1408,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3784:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3784:25:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3774:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1424,
														"nodeType": "IfStatement",
														"src": "3770:78:15",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"id": 1421,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "3843:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1416,
																			"name": "InvalidTick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1319,
																			"src": "3811:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_int24_$returns$_t_error_$",
																				"typeString": "function (int24) pure returns (error)"
																			}
																		},
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3823:8:15",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "3811:20:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3832:10:15",
																	"memberName": "revertWith",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1015,
																	"src": "3811:31:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_int24_$returns$__$attached_to$_t_bytes4_$",
																		"typeString": "function (bytes4,int24) pure"
																	}
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:37:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1423,
															"nodeType": "ExpressionStatement",
															"src": "3811:37:15"
														}
													},
													{
														"assignments": [
															1426
														],
														"declarations": [
															{
																"constant": false,
																"id": 1426,
																"mutability": "mutable",
																"name": "price",
																"nameLocation": "4364:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 1715,
																"src": "4356:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1425,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4356:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1427,
														"nodeType": "VariableDeclarationStatement",
														"src": "4356:13:15"
													},
													{
														"AST": {
															"nativeSrc": "4408:135:15",
															"nodeType": "YulBlock",
															"src": "4408:135:15",
															"statements": [
																{
																	"nativeSrc": "4426:103:15",
																	"nodeType": "YulAssignment",
																	"src": "4426:103:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4443:3:15",
																						"nodeType": "YulLiteral",
																						"src": "4443:3:15",
																						"type": "",
																						"value": "128"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4448:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4448:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4439:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4439:3:15"
																				},
																				"nativeSrc": "4439:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4439:11:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "4464:3:15",
																										"nodeType": "YulLiteral",
																										"src": "4464:3:15",
																										"type": "",
																										"value": "128"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4469:1:15",
																										"nodeType": "YulLiteral",
																										"src": "4469:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "4460:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4460:3:15"
																								},
																								"nativeSrc": "4460:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4460:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4473:34:15",
																								"nodeType": "YulLiteral",
																								"src": "4473:34:15",
																								"type": "",
																								"value": "0xfffcb933bd6fad37aa2d162d1a594001"
																							}
																						],
																						"functionName": {
																							"name": "xor",
																							"nativeSrc": "4456:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4456:3:15"
																						},
																						"nativeSrc": "4456:52:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4456:52:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "absTick",
																								"nativeSrc": "4514:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "4514:7:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4523:3:15",
																								"nodeType": "YulLiteral",
																								"src": "4523:3:15",
																								"type": "",
																								"value": "0x1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4510:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4510:3:15"
																						},
																						"nativeSrc": "4510:17:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4510:17:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4452:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4452:3:15"
																				},
																				"nativeSrc": "4452:76:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4452:76:15"
																			}
																		],
																		"functionName": {
																			"name": "xor",
																			"nativeSrc": "4435:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4435:3:15"
																		},
																		"nativeSrc": "4435:94:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4435:94:15"
																	},
																	"variableNames": [
																		{
																			"name": "price",
																			"nativeSrc": "4426:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4426:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1404,
																"isOffset": false,
																"isSlot": false,
																"src": "4514:7:15",
																"valueSize": 1
															},
															{
																"declaration": 1426,
																"isOffset": false,
																"isSlot": false,
																"src": "4426:5:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1428,
														"nodeType": "InlineAssembly",
														"src": "4383:160:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1429,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "4560:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307832",
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4570:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "0x2"
																},
																"src": "4560:13:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4577:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4560:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1443,
														"nodeType": "IfStatement",
														"src": "4556:83:15",
														"trueBody": {
															"expression": {
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1434,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "4580:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1435,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "4589:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																					"id": 1436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4597:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...2778"
																					},
																					"value": "0xfff97272373d413259a46990580e213a"
																				},
																				"src": "4589:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1438,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4588:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4636:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "4588:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4580:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1442,
															"nodeType": "ExpressionStatement",
															"src": "4580:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1444,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "4657:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307834",
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4667:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "0x4"
																},
																"src": "4657:13:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4674:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4657:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1458,
														"nodeType": "IfStatement",
														"src": "4653:83:15",
														"trueBody": {
															"expression": {
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1449,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "4677:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1450,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "4686:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																					"id": 1451,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4694:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1260"
																					},
																					"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																				},
																				"src": "4686:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1453,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4685:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4733:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "4685:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4677:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1457,
															"nodeType": "ExpressionStatement",
															"src": "4677:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1459,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "4754:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307838",
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4764:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "0x8"
																},
																"src": "4754:13:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4771:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4754:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1473,
														"nodeType": "IfStatement",
														"src": "4750:83:15",
														"trueBody": {
															"expression": {
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1464,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "4774:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1465,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "4783:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																					"id": 1466,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4791:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																						"typeString": "int_const 3401...(31 digits omitted)...4304"
																					},
																					"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																				},
																				"src": "4783:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1468,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4782:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4830:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "4782:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4774:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1472,
															"nodeType": "ExpressionStatement",
															"src": "4774:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1474,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "4851:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783130",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4861:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "0x10"
																},
																"src": "4851:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4869:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4851:19:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1488,
														"nodeType": "IfStatement",
														"src": "4847:84:15",
														"trueBody": {
															"expression": {
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1479,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "4872:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1480,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "4881:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																					"id": 1481,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4889:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																						"typeString": "int_const 3400...(31 digits omitted)...1444"
																					},
																					"value": "0xffcb9843d60f6159c9db58835c926644"
																				},
																				"src": "4881:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1483,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4880:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4928:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "4880:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4872:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1487,
															"nodeType": "ExpressionStatement",
															"src": "4872:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1489,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "4949:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783230",
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4959:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "0x20"
																},
																"src": "4949:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4967:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4949:19:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1503,
														"nodeType": "IfStatement",
														"src": "4945:84:15",
														"trueBody": {
															"expression": {
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1494,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "4970:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1495,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "4979:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																					"id": 1496,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4987:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																						"typeString": "int_const 3397...(31 digits omitted)...2016"
																					},
																					"value": "0xff973b41fa98c081472e6896dfb254c0"
																				},
																				"src": "4979:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1498,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4978:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5026:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "4978:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4970:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1502,
															"nodeType": "ExpressionStatement",
															"src": "4970:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1504,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "5047:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783430",
																	"id": 1505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5057:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "0x40"
																},
																"src": "5047:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5065:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5047:19:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1518,
														"nodeType": "IfStatement",
														"src": "5043:84:15",
														"trueBody": {
															"expression": {
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1509,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "5068:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1510,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "5077:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																					"id": 1511,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5085:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																						"typeString": "int_const 3391...(31 digits omitted)...7025"
																					},
																					"value": "0xff2ea16466c96a3843ec78b326b52861"
																				},
																				"src": "5077:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1513,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5076:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5124:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "5076:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5068:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1517,
															"nodeType": "ExpressionStatement",
															"src": "5068:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1519,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "5145:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783830",
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5155:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "5145:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5163:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5145:19:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1533,
														"nodeType": "IfStatement",
														"src": "5141:84:15",
														"trueBody": {
															"expression": {
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1524,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "5166:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1525,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "5175:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																					"id": 1526,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5183:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																						"typeString": "int_const 3381...(31 digits omitted)...5971"
																					},
																					"value": "0xfe5dee046a99a2a811c461f1969c3053"
																				},
																				"src": "5175:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1528,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5174:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5222:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "5174:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5166:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1532,
															"nodeType": "ExpressionStatement",
															"src": "5166:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1534,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "5243:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078313030",
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5253:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "0x100"
																},
																"src": "5243:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5262:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5243:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1548,
														"nodeType": "IfStatement",
														"src": "5239:85:15",
														"trueBody": {
															"expression": {
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1539,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "5265:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1540,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "5274:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																					"id": 1541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5282:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																						"typeString": "int_const 3359...(31 digits omitted)...7700"
																					},
																					"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																				},
																				"src": "5274:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1543,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5273:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5321:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "5273:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5265:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1547,
															"nodeType": "ExpressionStatement",
															"src": "5265:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1549,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "5342:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078323030",
																	"id": 1550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5352:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_512_by_1",
																		"typeString": "int_const 512"
																	},
																	"value": "0x200"
																},
																"src": "5342:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5361:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5342:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1563,
														"nodeType": "IfStatement",
														"src": "5338:85:15",
														"trueBody": {
															"expression": {
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1554,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "5364:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1555,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "5373:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																					"id": 1556,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5381:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																						"typeString": "int_const 3316...(31 digits omitted)...7300"
																					},
																					"value": "0xf987a7253ac413176f2b074cf7815e54"
																				},
																				"src": "5373:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1558,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5372:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5420:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "5372:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5364:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1562,
															"nodeType": "ExpressionStatement",
															"src": "5364:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1564,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "5441:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078343030",
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5451:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1024_by_1",
																		"typeString": "int_const 1024"
																	},
																	"value": "0x400"
																},
																"src": "5441:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5460:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5441:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1578,
														"nodeType": "IfStatement",
														"src": "5437:85:15",
														"trueBody": {
															"expression": {
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1569,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "5463:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1572,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1570,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "5472:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																					"id": 1571,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5480:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																						"typeString": "int_const 3232...(31 digits omitted)...8739"
																					},
																					"value": "0xf3392b0822b70005940c7a398e4b70f3"
																				},
																				"src": "5472:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1573,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5471:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5519:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "5471:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5463:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1577,
															"nodeType": "ExpressionStatement",
															"src": "5463:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1579,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "5540:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078383030",
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5550:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2048_by_1",
																		"typeString": "int_const 2048"
																	},
																	"value": "0x800"
																},
																"src": "5540:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5559:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5540:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1593,
														"nodeType": "IfStatement",
														"src": "5536:85:15",
														"trueBody": {
															"expression": {
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1584,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "5562:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1585,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "5571:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																					"id": 1586,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5579:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																						"typeString": "int_const 3071...(31 digits omitted)...3929"
																					},
																					"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																				},
																				"src": "5571:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1588,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5570:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5618:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "5570:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5562:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1592,
															"nodeType": "ExpressionStatement",
															"src": "5562:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1594,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "5639:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307831303030",
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5649:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4096_by_1",
																		"typeString": "int_const 4096"
																	},
																	"value": "0x1000"
																},
																"src": "5639:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5659:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5639:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1608,
														"nodeType": "IfStatement",
														"src": "5635:86:15",
														"trueBody": {
															"expression": {
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1599,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "5662:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1600,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "5671:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																					"id": 1601,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5679:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																						"typeString": "int_const 2772...(31 digits omitted)...5045"
																					},
																					"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																				},
																				"src": "5671:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1603,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5670:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5718:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "5670:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5662:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1607,
															"nodeType": "ExpressionStatement",
															"src": "5662:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1609,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "5739:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307832303030",
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5749:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8192_by_1",
																		"typeString": "int_const 8192"
																	},
																	"value": "0x2000"
																},
																"src": "5739:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5759:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5739:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1623,
														"nodeType": "IfStatement",
														"src": "5735:86:15",
														"trueBody": {
															"expression": {
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1614,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "5762:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1615,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "5771:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																					"id": 1616,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5779:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																						"typeString": "int_const 2259...(31 digits omitted)...1333"
																					},
																					"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																				},
																				"src": "5771:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1618,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5770:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5818:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "5770:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5762:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1622,
															"nodeType": "ExpressionStatement",
															"src": "5762:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1624,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "5839:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307834303030",
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5849:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16384_by_1",
																		"typeString": "int_const 16384"
																	},
																	"value": "0x4000"
																},
																"src": "5839:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5859:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5839:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1638,
														"nodeType": "IfStatement",
														"src": "5835:86:15",
														"trueBody": {
															"expression": {
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1629,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "5862:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1630,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "5871:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																					"id": 1631,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5879:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																						"typeString": "int_const 1499...(31 digits omitted)...5943"
																					},
																					"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																				},
																				"src": "5871:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1633,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5870:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5918:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "5870:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5862:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1637,
															"nodeType": "ExpressionStatement",
															"src": "5862:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1639,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "5939:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307838303030",
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5949:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32768_by_1",
																		"typeString": "int_const 32768"
																	},
																	"value": "0x8000"
																},
																"src": "5939:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5959:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5939:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1653,
														"nodeType": "IfStatement",
														"src": "5935:86:15",
														"trueBody": {
															"expression": {
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1644,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "5962:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1645,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "5971:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																					"id": 1646,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5979:34:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																						"typeString": "int_const 6611...(30 digits omitted)...7926"
																					},
																					"value": "0x31be135f97d08fd981231505542fcfa6"
																				},
																				"src": "5971:42:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1648,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5970:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6018:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "5970:51:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5962:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1652,
															"nodeType": "ExpressionStatement",
															"src": "5962:59:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1654,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "6039:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783130303030",
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6049:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_65536_by_1",
																		"typeString": "int_const 65536"
																	},
																	"value": "0x10000"
																},
																"src": "6039:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6060:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6039:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1668,
														"nodeType": "IfStatement",
														"src": "6035:86:15",
														"trueBody": {
															"expression": {
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1659,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "6063:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1660,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "6072:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																					"id": 1661,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6080:33:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																						"typeString": "int_const 1284...(30 digits omitted)...8313"
																					},
																					"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																				},
																				"src": "6072:41:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1663,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6071:43:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6118:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "6071:50:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6063:58:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1667,
															"nodeType": "ExpressionStatement",
															"src": "6063:58:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1669,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "6139:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783230303030",
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6149:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_131072_by_1",
																		"typeString": "int_const 131072"
																	},
																	"value": "0x20000"
																},
																"src": "6139:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6160:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6139:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1683,
														"nodeType": "IfStatement",
														"src": "6135:85:15",
														"trueBody": {
															"expression": {
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1674,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "6163:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1677,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1675,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "6172:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																					"id": 1676,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6180:32:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																						"typeString": "int_const 4850...(28 digits omitted)...4020"
																					},
																					"value": "0x5d6af8dedb81196699c329225ee604"
																				},
																				"src": "6172:40:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1678,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6171:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6217:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "6171:49:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6163:57:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1682,
															"nodeType": "ExpressionStatement",
															"src": "6163:57:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1684,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "6238:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783430303030",
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6248:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_262144_by_1",
																		"typeString": "int_const 262144"
																	},
																	"value": "0x40000"
																},
																"src": "6238:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6259:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6238:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1698,
														"nodeType": "IfStatement",
														"src": "6234:83:15",
														"trueBody": {
															"expression": {
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1689,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "6262:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1690,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "6271:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																					"id": 1691,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6279:30:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																						"typeString": "int_const 6914...(25 digits omitted)...4168"
																					},
																					"value": "0x2216e584f5fa1ea926041bedfe98"
																				},
																				"src": "6271:38:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1693,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6270:40:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6314:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "6270:47:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6262:55:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1697,
															"nodeType": "ExpressionStatement",
															"src": "6262:55:15"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1699,
																	"name": "absTick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "6335:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783830303030",
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6345:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_524288_by_1",
																		"typeString": "int_const 524288"
																	},
																	"value": "0x80000"
																},
																"src": "6335:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6356:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6335:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1713,
														"nodeType": "IfStatement",
														"src": "6331:78:15",
														"trueBody": {
															"expression": {
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1704,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "6359:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1705,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "6368:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30783438613137303339316637646334323434346538666132",
																					"id": 1706,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6376:25:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																						"typeString": "int_const 1404880482679654955896180642"
																					},
																					"value": "0x48a170391f7dc42444e8fa2"
																				},
																				"src": "6368:33:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1708,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6367:35:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6406:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "6367:42:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6359:50:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1712,
															"nodeType": "ExpressionStatement",
															"src": "6359:50:15"
														}
													},
													{
														"AST": {
															"nativeSrc": "6449:702:15",
															"nodeType": "YulBlock",
															"src": "6449:702:15",
															"statements": [
																{
																	"body": {
																		"nativeSrc": "6551:31:15",
																		"nodeType": "YulBlock",
																		"src": "6551:31:15",
																		"statements": [
																			{
																				"nativeSrc": "6553:27:15",
																				"nodeType": "YulAssignment",
																				"src": "6553:27:15",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6570:1:15",
																									"nodeType": "YulLiteral",
																									"src": "6570:1:15",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6566:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "6566:3:15"
																							},
																							"nativeSrc": "6566:6:15",
																							"nodeType": "YulFunctionCall",
																							"src": "6566:6:15"
																						},
																						{
																							"name": "price",
																							"nativeSrc": "6574:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "6574:5:15"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6562:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "6562:3:15"
																					},
																					"nativeSrc": "6562:18:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6562:18:15"
																				},
																				"variableNames": [
																					{
																						"name": "price",
																						"nativeSrc": "6553:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "6553:5:15"
																					}
																				]
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "tick",
																				"nativeSrc": "6542:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6542:4:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6548:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6548:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nativeSrc": "6538:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6538:3:15"
																		},
																		"nativeSrc": "6538:12:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6538:12:15"
																	},
																	"nativeSrc": "6535:47:15",
																	"nodeType": "YulIf",
																	"src": "6535:47:15"
																},
																{
																	"nativeSrc": "7082:55:15",
																	"nodeType": "YulAssignment",
																	"src": "7082:55:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7102:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7102:2:15",
																				"type": "",
																				"value": "32"
																			},
																			{
																				"arguments": [
																					{
																						"name": "price",
																						"nativeSrc": "7110:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "7110:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "7125:2:15",
																										"nodeType": "YulLiteral",
																										"src": "7125:2:15",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7129:1:15",
																										"nodeType": "YulLiteral",
																										"src": "7129:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "7121:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "7121:3:15"
																								},
																								"nativeSrc": "7121:10:15",
																								"nodeType": "YulFunctionCall",
																								"src": "7121:10:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7133:1:15",
																								"nodeType": "YulLiteral",
																								"src": "7133:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "7117:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "7117:3:15"
																						},
																						"nativeSrc": "7117:18:15",
																						"nodeType": "YulFunctionCall",
																						"src": "7117:18:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7106:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7106:3:15"
																				},
																				"nativeSrc": "7106:30:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7106:30:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "7098:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7098:3:15"
																		},
																		"nativeSrc": "7098:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7098:39:15"
																	},
																	"variableNames": [
																		{
																			"name": "sqrtPriceX96",
																			"nativeSrc": "7082:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "7082:12:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1426,
																"isOffset": false,
																"isSlot": false,
																"src": "6553:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1426,
																"isOffset": false,
																"isSlot": false,
																"src": "6574:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1426,
																"isOffset": false,
																"isSlot": false,
																"src": "7110:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1401,
																"isOffset": false,
																"isSlot": false,
																"src": "7082:12:15",
																"valueSize": 1
															},
															{
																"declaration": 1398,
																"isOffset": false,
																"isSlot": false,
																"src": "6542:4:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1714,
														"nodeType": "InlineAssembly",
														"src": "6424:727:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "2841:303:15",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the price of the two assets (currency1/currency0)\n at the given tick"
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtPriceAtTick",
									"nameLocation": "3158:18:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3183:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3177:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1397,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3177:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:12:15"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3220:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3212:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1400,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3212:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3211:22:15"
									},
									"scope": 1858,
									"src": "3149:4018:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1856,
										"nodeType": "Block",
										"src": "7712:4667:15",
										"statements": [
											{
												"id": 1855,
												"nodeType": "UncheckedBlock",
												"src": "7722:4651:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		"id": 1727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1725,
																			"name": "sqrtPriceX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1720,
																			"src": "8183:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1726,
																			"name": "MIN_SQRT_PRICE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1349,
																			"src": "8198:14:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "8183:29:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 1728,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8182:31:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1729,
																"name": "MAX_SQRT_PRICE_MINUS_MIN_SQRT_PRICE_MINUS_ONE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1361,
																"src": "8216:45:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"src": "8182:79:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1740,
														"nodeType": "IfStatement",
														"src": "8178:168:15",
														"trueBody": {
															"id": 1739,
															"nodeType": "Block",
															"src": "8263:83:15",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1736,
																				"name": "sqrtPriceX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1720,
																				"src": "8318:12:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 1731,
																					"name": "InvalidSqrtPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1324,
																					"src": "8281:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$_t_uint160_$returns$_t_error_$",
																						"typeString": "function (uint160) pure returns (error)"
																					}
																				},
																				"id": 1734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8298:8:15",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "8281:25:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"id": 1735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8307:10:15",
																			"memberName": "revertWith",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1025,
																			"src": "8281:36:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint160_$returns$__$attached_to$_t_bytes4_$",
																				"typeString": "function (bytes4,uint160) pure"
																			}
																		},
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8281:50:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1738,
																	"nodeType": "ExpressionStatement",
																	"src": "8281:50:15"
																}
															]
														}
													},
													{
														"assignments": [
															1742
														],
														"declarations": [
															{
																"constant": false,
																"id": 1742,
																"mutability": "mutable",
																"name": "price",
																"nameLocation": "8368:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 1855,
																"src": "8360:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1741,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8360:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1749,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1745,
																		"name": "sqrtPriceX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "8384:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8376:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1743,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8376:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8376:21:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "3332",
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8401:2:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "32"
															},
															"src": "8376:27:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8360:43:15"
													},
													{
														"assignments": [
															1751
														],
														"declarations": [
															{
																"constant": false,
																"id": 1751,
																"mutability": "mutable",
																"name": "r",
																"nameLocation": "8426:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 1855,
																"src": "8418:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1750,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8418:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1753,
														"initialValue": {
															"id": 1752,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "8430:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8418:17:15"
													},
													{
														"assignments": [
															1755
														],
														"declarations": [
															{
																"constant": false,
																"id": 1755,
																"mutability": "mutable",
																"name": "msb",
																"nameLocation": "8457:3:15",
																"nodeType": "VariableDeclaration",
																"scope": 1855,
																"src": "8449:11:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1754,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8449:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1760,
														"initialValue": {
															"arguments": [
																{
																	"id": 1758,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "8490:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1756,
																	"name": "BitMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "8463:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_BitMath_$925_$",
																		"typeString": "type(library BitMath)"
																	}
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8471:18:15",
																"memberName": "mostSignificantBit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 908,
																"src": "8463:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																	"typeString": "function (uint256) pure returns (uint8)"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8463:29:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8449:43:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1761,
																"name": "msb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1755,
																"src": "8511:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8518:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8511:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1773,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "8566:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1774,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1742,
																		"src": "8570:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "313237",
																					"id": 1775,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8580:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_127_by_1",
																						"typeString": "int_const 127"
																					},
																					"value": "127"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1776,
																					"name": "msb",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1755,
																					"src": "8586:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8580:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1778,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8579:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8570:20:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8566:24:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1781,
															"nodeType": "ExpressionStatement",
															"src": "8566:24:15"
														},
														"id": 1782,
														"nodeType": "IfStatement",
														"src": "8507:83:15",
														"trueBody": {
															"expression": {
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1764,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "8523:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1765,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1742,
																		"src": "8527:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1768,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1766,
																					"name": "msb",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1755,
																					"src": "8537:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "313237",
																					"id": 1767,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8543:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_127_by_1",
																						"typeString": "int_const 127"
																					},
																					"value": "127"
																				},
																				"src": "8537:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1769,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8536:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8527:20:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8523:24:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1772,
															"nodeType": "ExpressionStatement",
															"src": "8523:24:15"
														}
													},
													{
														"assignments": [
															1784
														],
														"declarations": [
															{
																"constant": false,
																"id": 1784,
																"mutability": "mutable",
																"name": "log_2",
																"nameLocation": "8612:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 1855,
																"src": "8605:12:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1783,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8605:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1794,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1787,
																					"name": "msb",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1755,
																					"src": "8628:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1786,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8621:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 1785,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8621:6:15",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8621:11:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 1789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8635:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8621:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 1791,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8620:19:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "3634",
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8643:2:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_64_by_1",
																	"typeString": "int_const 64"
																},
																"value": "64"
															},
															"src": "8620:25:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8605:40:15"
													},
													{
														"AST": {
															"nativeSrc": "8685:171:15",
															"nodeType": "YulBlock",
															"src": "8685:171:15",
															"statements": [
																{
																	"nativeSrc": "8703:24:15",
																	"nodeType": "YulAssignment",
																	"src": "8703:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8712:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8712:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "8721:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "8721:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "8724:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "8724:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8717:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8717:3:15"
																				},
																				"nativeSrc": "8717:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8717:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8708:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8708:3:15"
																		},
																		"nativeSrc": "8708:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8708:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "8703:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "8703:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "8744:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8744:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8757:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8757:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8762:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "8762:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8753:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8753:3:15"
																		},
																		"nativeSrc": "8753:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8753:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "8748:1:15",
																			"nodeType": "YulTypedName",
																			"src": "8748:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8781:30:15",
																	"nodeType": "YulAssignment",
																	"src": "8781:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "8793:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "8793:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8804:2:15",
																						"nodeType": "YulLiteral",
																						"src": "8804:2:15",
																						"type": "",
																						"value": "63"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "8808:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "8808:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8800:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8800:3:15"
																				},
																				"nativeSrc": "8800:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8800:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8790:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "8790:2:15"
																		},
																		"nativeSrc": "8790:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8790:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "8781:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "8781:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "8828:14:15",
																	"nodeType": "YulAssignment",
																	"src": "8828:14:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "8837:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "8837:1:15"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8840:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "8840:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8833:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8833:3:15"
																		},
																		"nativeSrc": "8833:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8833:9:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "8828:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "8828:1:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "8781:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "8793:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "8703:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "8721:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "8724:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "8762:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "8828:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "8840:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1795,
														"nodeType": "InlineAssembly",
														"src": "8660:196:15"
													},
													{
														"AST": {
															"nativeSrc": "8894:171:15",
															"nodeType": "YulBlock",
															"src": "8894:171:15",
															"statements": [
																{
																	"nativeSrc": "8912:24:15",
																	"nodeType": "YulAssignment",
																	"src": "8912:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8921:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8921:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "8930:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "8930:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "8933:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "8933:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8926:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8926:3:15"
																				},
																				"nativeSrc": "8926:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8926:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8917:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8917:3:15"
																		},
																		"nativeSrc": "8917:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8917:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "8912:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "8912:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "8953:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8953:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8966:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8966:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8971:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "8971:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "8962:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8962:3:15"
																		},
																		"nativeSrc": "8962:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8962:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "8957:1:15",
																			"nodeType": "YulTypedName",
																			"src": "8957:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8990:30:15",
																	"nodeType": "YulAssignment",
																	"src": "8990:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "9002:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9002:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "9013:2:15",
																						"nodeType": "YulLiteral",
																						"src": "9013:2:15",
																						"type": "",
																						"value": "62"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "9017:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9017:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "9009:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9009:3:15"
																				},
																				"nativeSrc": "9009:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9009:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8999:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "8999:2:15"
																		},
																		"nativeSrc": "8999:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8999:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "8990:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "8990:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "9037:14:15",
																	"nodeType": "YulAssignment",
																	"src": "9037:14:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "9046:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9046:1:15"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "9049:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9049:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9042:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:15"
																		},
																		"nativeSrc": "9042:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9042:9:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "9037:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "9037:1:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "8990:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "9002:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "8912:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "8930:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "8933:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "8971:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9037:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9049:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1796,
														"nodeType": "InlineAssembly",
														"src": "8869:196:15"
													},
													{
														"AST": {
															"nativeSrc": "9103:171:15",
															"nodeType": "YulBlock",
															"src": "9103:171:15",
															"statements": [
																{
																	"nativeSrc": "9121:24:15",
																	"nodeType": "YulAssignment",
																	"src": "9121:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9130:3:15",
																				"nodeType": "YulLiteral",
																				"src": "9130:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "9139:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9139:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "9142:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9142:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "9135:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9135:3:15"
																				},
																				"nativeSrc": "9135:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9135:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9126:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9126:3:15"
																		},
																		"nativeSrc": "9126:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "9121:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "9121:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "9162:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9162:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9175:3:15",
																				"nodeType": "YulLiteral",
																				"src": "9175:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "9180:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9180:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9171:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9171:3:15"
																		},
																		"nativeSrc": "9171:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9171:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "9166:1:15",
																			"nodeType": "YulTypedName",
																			"src": "9166:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9199:30:15",
																	"nodeType": "YulAssignment",
																	"src": "9199:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "9211:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9211:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "9222:2:15",
																						"nodeType": "YulLiteral",
																						"src": "9222:2:15",
																						"type": "",
																						"value": "61"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "9226:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9226:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "9218:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9218:3:15"
																				},
																				"nativeSrc": "9218:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9218:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9208:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9208:2:15"
																		},
																		"nativeSrc": "9208:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9208:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "9199:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "9199:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "9246:14:15",
																	"nodeType": "YulAssignment",
																	"src": "9246:14:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "9255:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9255:1:15"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "9258:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9258:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9251:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9251:3:15"
																		},
																		"nativeSrc": "9251:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9251:9:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "9246:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "9246:1:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "9199:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "9211:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9121:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9139:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9142:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9180:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9246:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9258:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1797,
														"nodeType": "InlineAssembly",
														"src": "9078:196:15"
													},
													{
														"AST": {
															"nativeSrc": "9312:171:15",
															"nodeType": "YulBlock",
															"src": "9312:171:15",
															"statements": [
																{
																	"nativeSrc": "9330:24:15",
																	"nodeType": "YulAssignment",
																	"src": "9330:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9339:3:15",
																				"nodeType": "YulLiteral",
																				"src": "9339:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "9348:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9348:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "9351:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9351:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "9344:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9344:3:15"
																				},
																				"nativeSrc": "9344:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9344:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9335:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9335:3:15"
																		},
																		"nativeSrc": "9335:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9335:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "9330:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "9330:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "9371:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9371:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9384:3:15",
																				"nodeType": "YulLiteral",
																				"src": "9384:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "9389:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9389:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9380:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9380:3:15"
																		},
																		"nativeSrc": "9380:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9380:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "9375:1:15",
																			"nodeType": "YulTypedName",
																			"src": "9375:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9408:30:15",
																	"nodeType": "YulAssignment",
																	"src": "9408:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "9420:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9420:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "9431:2:15",
																						"nodeType": "YulLiteral",
																						"src": "9431:2:15",
																						"type": "",
																						"value": "60"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "9435:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9435:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "9427:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9427:3:15"
																				},
																				"nativeSrc": "9427:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9427:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9417:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9417:2:15"
																		},
																		"nativeSrc": "9417:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9417:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "9408:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "9408:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "9455:14:15",
																	"nodeType": "YulAssignment",
																	"src": "9455:14:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "9464:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9464:1:15"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "9467:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9467:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9460:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9460:3:15"
																		},
																		"nativeSrc": "9460:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9460:9:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "9455:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "9455:1:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "9408:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "9420:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9330:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9348:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9351:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9389:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9455:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9467:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1798,
														"nodeType": "InlineAssembly",
														"src": "9287:196:15"
													},
													{
														"AST": {
															"nativeSrc": "9521:171:15",
															"nodeType": "YulBlock",
															"src": "9521:171:15",
															"statements": [
																{
																	"nativeSrc": "9539:24:15",
																	"nodeType": "YulAssignment",
																	"src": "9539:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9548:3:15",
																				"nodeType": "YulLiteral",
																				"src": "9548:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "9557:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9557:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "9560:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9560:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "9553:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9553:3:15"
																				},
																				"nativeSrc": "9553:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9553:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9544:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9544:3:15"
																		},
																		"nativeSrc": "9544:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9544:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "9539:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "9539:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "9580:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9580:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9593:3:15",
																				"nodeType": "YulLiteral",
																				"src": "9593:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "9598:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9598:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9589:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9589:3:15"
																		},
																		"nativeSrc": "9589:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9589:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "9584:1:15",
																			"nodeType": "YulTypedName",
																			"src": "9584:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9617:30:15",
																	"nodeType": "YulAssignment",
																	"src": "9617:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "9629:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9629:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "9640:2:15",
																						"nodeType": "YulLiteral",
																						"src": "9640:2:15",
																						"type": "",
																						"value": "59"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "9644:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9644:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "9636:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9636:3:15"
																				},
																				"nativeSrc": "9636:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9636:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9626:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9626:2:15"
																		},
																		"nativeSrc": "9626:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9626:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "9617:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "9617:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "9664:14:15",
																	"nodeType": "YulAssignment",
																	"src": "9664:14:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "9673:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9673:1:15"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "9676:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9676:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9669:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9669:3:15"
																		},
																		"nativeSrc": "9669:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9669:9:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "9664:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "9664:1:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "9617:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "9629:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9539:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9557:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9560:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9598:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9664:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9676:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1799,
														"nodeType": "InlineAssembly",
														"src": "9496:196:15"
													},
													{
														"AST": {
															"nativeSrc": "9730:171:15",
															"nodeType": "YulBlock",
															"src": "9730:171:15",
															"statements": [
																{
																	"nativeSrc": "9748:24:15",
																	"nodeType": "YulAssignment",
																	"src": "9748:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9757:3:15",
																				"nodeType": "YulLiteral",
																				"src": "9757:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "9766:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9766:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "9769:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9769:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "9762:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9762:3:15"
																				},
																				"nativeSrc": "9762:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9762:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9753:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9753:3:15"
																		},
																		"nativeSrc": "9753:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9753:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "9748:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "9748:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "9789:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9789:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9802:3:15",
																				"nodeType": "YulLiteral",
																				"src": "9802:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "9807:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9807:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9798:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9798:3:15"
																		},
																		"nativeSrc": "9798:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9798:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "9793:1:15",
																			"nodeType": "YulTypedName",
																			"src": "9793:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9826:30:15",
																	"nodeType": "YulAssignment",
																	"src": "9826:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "9838:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9838:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "9849:2:15",
																						"nodeType": "YulLiteral",
																						"src": "9849:2:15",
																						"type": "",
																						"value": "58"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "9853:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9853:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "9845:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9845:3:15"
																				},
																				"nativeSrc": "9845:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9845:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9835:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9835:2:15"
																		},
																		"nativeSrc": "9835:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9835:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "9826:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "9826:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "9873:14:15",
																	"nodeType": "YulAssignment",
																	"src": "9873:14:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "9882:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9882:1:15"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "9885:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "9885:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9878:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9878:3:15"
																		},
																		"nativeSrc": "9878:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9878:9:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "9873:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "9873:1:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "9826:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "9838:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9748:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9766:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9769:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9807:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9873:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9885:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1800,
														"nodeType": "InlineAssembly",
														"src": "9705:196:15"
													},
													{
														"AST": {
															"nativeSrc": "9939:171:15",
															"nodeType": "YulBlock",
															"src": "9939:171:15",
															"statements": [
																{
																	"nativeSrc": "9957:24:15",
																	"nodeType": "YulAssignment",
																	"src": "9957:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9966:3:15",
																				"nodeType": "YulLiteral",
																				"src": "9966:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "9975:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9975:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "9978:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "9978:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "9971:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9971:3:15"
																				},
																				"nativeSrc": "9971:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9971:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9962:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9962:3:15"
																		},
																		"nativeSrc": "9962:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9962:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "9957:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "9957:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "9998:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9998:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10011:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10011:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "10016:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10016:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10007:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10007:3:15"
																		},
																		"nativeSrc": "10007:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10007:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "10002:1:15",
																			"nodeType": "YulTypedName",
																			"src": "10002:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10035:30:15",
																	"nodeType": "YulAssignment",
																	"src": "10035:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "10047:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10047:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10058:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10058:2:15",
																						"type": "",
																						"value": "57"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "10062:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10062:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "10054:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10054:3:15"
																				},
																				"nativeSrc": "10054:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10054:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10044:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10044:2:15"
																		},
																		"nativeSrc": "10044:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10044:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "10035:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "10035:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "10082:14:15",
																	"nodeType": "YulAssignment",
																	"src": "10082:14:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "10091:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10091:1:15"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "10094:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10094:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10087:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10087:3:15"
																		},
																		"nativeSrc": "10087:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10087:9:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "10082:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "10082:1:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "10035:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "10047:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10016:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10082:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10094:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9957:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9975:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "9978:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1801,
														"nodeType": "InlineAssembly",
														"src": "9914:196:15"
													},
													{
														"AST": {
															"nativeSrc": "10148:171:15",
															"nodeType": "YulBlock",
															"src": "10148:171:15",
															"statements": [
																{
																	"nativeSrc": "10166:24:15",
																	"nodeType": "YulAssignment",
																	"src": "10166:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10175:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10175:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "10184:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10184:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "10187:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10187:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "10180:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10180:3:15"
																				},
																				"nativeSrc": "10180:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10180:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10171:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10171:3:15"
																		},
																		"nativeSrc": "10171:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10171:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "10166:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "10166:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "10207:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10207:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10220:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10220:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "10225:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10225:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10216:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10216:3:15"
																		},
																		"nativeSrc": "10216:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10216:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "10211:1:15",
																			"nodeType": "YulTypedName",
																			"src": "10211:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10244:30:15",
																	"nodeType": "YulAssignment",
																	"src": "10244:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "10256:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10256:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10267:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10267:2:15",
																						"type": "",
																						"value": "56"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "10271:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10271:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "10263:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10263:3:15"
																				},
																				"nativeSrc": "10263:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10263:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10253:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10253:2:15"
																		},
																		"nativeSrc": "10253:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10253:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "10244:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "10244:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "10291:14:15",
																	"nodeType": "YulAssignment",
																	"src": "10291:14:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "10300:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10300:1:15"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "10303:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10303:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10296:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10296:3:15"
																		},
																		"nativeSrc": "10296:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10296:9:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "10291:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "10291:1:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "10244:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "10256:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10166:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10184:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10187:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10225:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10291:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10303:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1802,
														"nodeType": "InlineAssembly",
														"src": "10123:196:15"
													},
													{
														"AST": {
															"nativeSrc": "10357:171:15",
															"nodeType": "YulBlock",
															"src": "10357:171:15",
															"statements": [
																{
																	"nativeSrc": "10375:24:15",
																	"nodeType": "YulAssignment",
																	"src": "10375:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10384:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10384:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "10393:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10393:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "10396:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10396:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "10389:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10389:3:15"
																				},
																				"nativeSrc": "10389:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10389:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10380:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10380:3:15"
																		},
																		"nativeSrc": "10380:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10380:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "10375:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "10375:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "10416:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10416:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10429:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10429:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "10434:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10434:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10425:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10425:3:15"
																		},
																		"nativeSrc": "10425:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10425:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "10420:1:15",
																			"nodeType": "YulTypedName",
																			"src": "10420:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10453:30:15",
																	"nodeType": "YulAssignment",
																	"src": "10453:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "10465:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10465:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10476:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10476:2:15",
																						"type": "",
																						"value": "55"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "10480:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10480:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "10472:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10472:3:15"
																				},
																				"nativeSrc": "10472:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10472:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10462:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10462:2:15"
																		},
																		"nativeSrc": "10462:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10462:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "10453:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "10453:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "10500:14:15",
																	"nodeType": "YulAssignment",
																	"src": "10500:14:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "10509:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10509:1:15"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "10512:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10512:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10505:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10505:3:15"
																		},
																		"nativeSrc": "10505:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10505:9:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "10500:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "10500:1:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "10453:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "10465:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10375:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10393:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10396:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10434:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10500:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10512:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1803,
														"nodeType": "InlineAssembly",
														"src": "10332:196:15"
													},
													{
														"AST": {
															"nativeSrc": "10566:171:15",
															"nodeType": "YulBlock",
															"src": "10566:171:15",
															"statements": [
																{
																	"nativeSrc": "10584:24:15",
																	"nodeType": "YulAssignment",
																	"src": "10584:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10593:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10593:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "10602:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10602:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "10605:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10605:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "10598:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10598:3:15"
																				},
																				"nativeSrc": "10598:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10598:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10589:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10589:3:15"
																		},
																		"nativeSrc": "10589:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10589:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "10584:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "10584:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "10625:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10625:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10638:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10638:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "10643:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10643:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10634:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10634:3:15"
																		},
																		"nativeSrc": "10634:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10634:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "10629:1:15",
																			"nodeType": "YulTypedName",
																			"src": "10629:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10662:30:15",
																	"nodeType": "YulAssignment",
																	"src": "10662:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "10674:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10674:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10685:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10685:2:15",
																						"type": "",
																						"value": "54"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "10689:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10689:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "10681:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10681:3:15"
																				},
																				"nativeSrc": "10681:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10681:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10671:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10671:2:15"
																		},
																		"nativeSrc": "10671:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10671:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "10662:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "10662:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "10709:14:15",
																	"nodeType": "YulAssignment",
																	"src": "10709:14:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "10718:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10718:1:15"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "10721:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10721:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10714:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10714:3:15"
																		},
																		"nativeSrc": "10714:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10714:9:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "10709:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "10709:1:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "10662:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "10674:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10584:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10602:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10605:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10643:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10709:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10721:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1804,
														"nodeType": "InlineAssembly",
														"src": "10541:196:15"
													},
													{
														"AST": {
															"nativeSrc": "10775:171:15",
															"nodeType": "YulBlock",
															"src": "10775:171:15",
															"statements": [
																{
																	"nativeSrc": "10793:24:15",
																	"nodeType": "YulAssignment",
																	"src": "10793:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10802:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10802:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "10811:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10811:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "10814:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10814:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "10807:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10807:3:15"
																				},
																				"nativeSrc": "10807:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10807:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10798:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10798:3:15"
																		},
																		"nativeSrc": "10798:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10798:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "10793:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "10793:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "10834:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10834:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10847:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10847:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "10852:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10852:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10843:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10843:3:15"
																		},
																		"nativeSrc": "10843:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10843:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "10838:1:15",
																			"nodeType": "YulTypedName",
																			"src": "10838:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10871:30:15",
																	"nodeType": "YulAssignment",
																	"src": "10871:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "10883:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10883:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10894:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10894:2:15",
																						"type": "",
																						"value": "53"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "10898:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10898:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "10890:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10890:3:15"
																				},
																				"nativeSrc": "10890:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10890:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10880:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10880:2:15"
																		},
																		"nativeSrc": "10880:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10880:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "10871:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "10871:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "10918:14:15",
																	"nodeType": "YulAssignment",
																	"src": "10918:14:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "10927:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10927:1:15"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "10930:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "10930:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10923:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10923:3:15"
																		},
																		"nativeSrc": "10923:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10923:9:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "10918:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "10918:1:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "10871:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "10883:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10793:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10811:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10814:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10852:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10918:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "10930:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1805,
														"nodeType": "InlineAssembly",
														"src": "10750:196:15"
													},
													{
														"AST": {
															"nativeSrc": "10984:171:15",
															"nodeType": "YulBlock",
															"src": "10984:171:15",
															"statements": [
																{
																	"nativeSrc": "11002:24:15",
																	"nodeType": "YulAssignment",
																	"src": "11002:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11011:3:15",
																				"nodeType": "YulLiteral",
																				"src": "11011:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "11020:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "11020:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "11023:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "11023:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "11016:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11016:3:15"
																				},
																				"nativeSrc": "11016:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11016:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "11007:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11007:3:15"
																		},
																		"nativeSrc": "11007:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11007:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "11002:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "11002:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "11043:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11043:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11056:3:15",
																				"nodeType": "YulLiteral",
																				"src": "11056:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "11061:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "11061:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "11052:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11052:3:15"
																		},
																		"nativeSrc": "11052:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11052:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "11047:1:15",
																			"nodeType": "YulTypedName",
																			"src": "11047:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11080:30:15",
																	"nodeType": "YulAssignment",
																	"src": "11080:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "11092:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11092:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "11103:2:15",
																						"nodeType": "YulLiteral",
																						"src": "11103:2:15",
																						"type": "",
																						"value": "52"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "11107:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "11107:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "11099:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11099:3:15"
																				},
																				"nativeSrc": "11099:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11099:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11089:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11089:2:15"
																		},
																		"nativeSrc": "11089:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11089:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "11080:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "11080:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "11127:14:15",
																	"nodeType": "YulAssignment",
																	"src": "11127:14:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "11136:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "11136:1:15"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "11139:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "11139:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "11132:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11132:3:15"
																		},
																		"nativeSrc": "11132:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11132:9:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "11127:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "11127:1:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "11080:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "11092:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11002:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11020:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11023:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11061:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11127:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11139:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1806,
														"nodeType": "InlineAssembly",
														"src": "10959:196:15"
													},
													{
														"AST": {
															"nativeSrc": "11193:171:15",
															"nodeType": "YulBlock",
															"src": "11193:171:15",
															"statements": [
																{
																	"nativeSrc": "11211:24:15",
																	"nodeType": "YulAssignment",
																	"src": "11211:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11220:3:15",
																				"nodeType": "YulLiteral",
																				"src": "11220:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "11229:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "11229:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "11232:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "11232:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "11225:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11225:3:15"
																				},
																				"nativeSrc": "11225:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11225:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "11216:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11216:3:15"
																		},
																		"nativeSrc": "11216:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11216:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "11211:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "11211:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "11252:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11252:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11265:3:15",
																				"nodeType": "YulLiteral",
																				"src": "11265:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "11270:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "11270:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "11261:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11261:3:15"
																		},
																		"nativeSrc": "11261:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11261:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "11256:1:15",
																			"nodeType": "YulTypedName",
																			"src": "11256:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11289:30:15",
																	"nodeType": "YulAssignment",
																	"src": "11289:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "11301:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11301:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "11312:2:15",
																						"nodeType": "YulLiteral",
																						"src": "11312:2:15",
																						"type": "",
																						"value": "51"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "11316:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "11316:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "11308:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11308:3:15"
																				},
																				"nativeSrc": "11308:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11308:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11298:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11298:2:15"
																		},
																		"nativeSrc": "11298:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11298:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "11289:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "11289:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "11336:14:15",
																	"nodeType": "YulAssignment",
																	"src": "11336:14:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "f",
																				"nativeSrc": "11345:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "11345:1:15"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "11348:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "11348:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "11341:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11341:3:15"
																		},
																		"nativeSrc": "11341:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11341:9:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "11336:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "11336:1:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "11289:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "11301:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11211:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11229:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11232:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11270:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11336:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11348:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1807,
														"nodeType": "InlineAssembly",
														"src": "11168:196:15"
													},
													{
														"AST": {
															"nativeSrc": "11402:140:15",
															"nodeType": "YulBlock",
															"src": "11402:140:15",
															"statements": [
																{
																	"nativeSrc": "11420:24:15",
																	"nodeType": "YulAssignment",
																	"src": "11420:24:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11429:3:15",
																				"nodeType": "YulLiteral",
																				"src": "11429:3:15",
																				"type": "",
																				"value": "127"
																			},
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "11438:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "11438:1:15"
																					},
																					{
																						"name": "r",
																						"nativeSrc": "11441:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "11441:1:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "11434:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11434:3:15"
																				},
																				"nativeSrc": "11434:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11434:9:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "11425:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11425:3:15"
																		},
																		"nativeSrc": "11425:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11425:19:15"
																	},
																	"variableNames": [
																		{
																			"name": "r",
																			"nativeSrc": "11420:1:15",
																			"nodeType": "YulIdentifier",
																			"src": "11420:1:15"
																		}
																	]
																},
																{
																	"nativeSrc": "11461:20:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11461:20:15",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11474:3:15",
																				"nodeType": "YulLiteral",
																				"src": "11474:3:15",
																				"type": "",
																				"value": "128"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "11479:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "11479:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "11470:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11470:3:15"
																		},
																		"nativeSrc": "11470:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11470:11:15"
																	},
																	"variables": [
																		{
																			"name": "f",
																			"nativeSrc": "11465:1:15",
																			"nodeType": "YulTypedName",
																			"src": "11465:1:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11498:30:15",
																	"nodeType": "YulAssignment",
																	"src": "11498:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "log_2",
																				"nativeSrc": "11510:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11510:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "11521:2:15",
																						"nodeType": "YulLiteral",
																						"src": "11521:2:15",
																						"type": "",
																						"value": "50"
																					},
																					{
																						"name": "f",
																						"nativeSrc": "11525:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "11525:1:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "11517:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11517:3:15"
																				},
																				"nativeSrc": "11517:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11517:10:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11507:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11507:2:15"
																		},
																		"nativeSrc": "11507:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11507:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "log_2",
																			"nativeSrc": "11498:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "11498:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "11498:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "11510:5:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11420:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11438:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11441:1:15",
																"valueSize": 1
															},
															{
																"declaration": 1751,
																"isOffset": false,
																"isSlot": false,
																"src": "11479:1:15",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1808,
														"nodeType": "InlineAssembly",
														"src": "11377:165:15"
													},
													{
														"assignments": [
															1810
														],
														"declarations": [
															{
																"constant": false,
																"id": 1810,
																"mutability": "mutable",
																"name": "log_sqrt10001",
																"nameLocation": "11563:13:15",
																"nodeType": "VariableDeclaration",
																"scope": 1855,
																"src": "11556:20:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1809,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11556:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1814,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1811,
																"name": "log_2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "11579:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "323535373338393538393939363033383236333437313431",
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11587:24:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255738958999603826347141_by_1",
																	"typeString": "int_const 255738958999603826347141"
																},
																"value": "255738958999603826347141"
															},
															"src": "11579:32:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11556:55:15"
													},
													{
														"assignments": [
															1816
														],
														"declarations": [
															{
																"constant": false,
																"id": 1816,
																"mutability": "mutable",
																"name": "tickLow",
																"nameLocation": "11771:7:15",
																"nodeType": "VariableDeclaration",
																"scope": 1855,
																"src": "11765:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"typeName": {
																	"id": 1815,
																	"name": "int24",
																	"nodeType": "ElementaryTypeName",
																	"src": "11765:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1826,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 1821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1819,
																					"name": "log_sqrt10001",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1810,
																					"src": "11788:13:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																					"id": 1820,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11804:37:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																						"typeString": "int_const 3402...(29 digits omitted)...7210"
																					},
																					"value": "3402992956809132418596140100660247210"
																				},
																				"src": "11788:53:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 1822,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "11787:55:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11846:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "11787:62:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11781:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int24_$",
																	"typeString": "type(int24)"
																},
																"typeName": {
																	"id": 1817,
																	"name": "int24",
																	"nodeType": "ElementaryTypeName",
																	"src": "11781:5:15",
																	"typeDescriptions": {}
																}
															},
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11781:69:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11765:85:15"
													},
													{
														"assignments": [
															1828
														],
														"declarations": [
															{
																"constant": false,
																"id": 1828,
																"mutability": "mutable",
																"name": "tickHi",
																"nameLocation": "12169:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 1855,
																"src": "12163:12:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"typeName": {
																	"id": 1827,
																	"name": "int24",
																	"nodeType": "ElementaryTypeName",
																	"src": "12163:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1838,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 1833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1831,
																					"name": "log_sqrt10001",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1810,
																					"src": "12185:13:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																					"id": 1832,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12201:39:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																						"typeString": "int_const 2913...(31 digits omitted)...8495"
																					},
																					"value": "291339464771989622907027621153398088495"
																				},
																				"src": "12185:55:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 1834,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "12184:57:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12245:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "12184:64:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12178:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int24_$",
																	"typeString": "type(int24)"
																},
																"typeName": {
																	"id": 1829,
																	"name": "int24",
																	"nodeType": "ElementaryTypeName",
																	"src": "12178:5:15",
																	"typeDescriptions": {}
																}
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12178:71:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12163:86:15"
													},
													{
														"expression": {
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1839,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "12264:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1840,
																		"name": "tickLow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1816,
																		"src": "12271:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1841,
																		"name": "tickHi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1828,
																		"src": "12282:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"src": "12271:17:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		"id": 1848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1845,
																					"name": "tickHi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1828,
																					"src": "12320:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				],
																				"id": 1844,
																				"name": "getSqrtPriceAtTick",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1717,
																				"src": "12301:18:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																					"typeString": "function (int24) pure returns (uint160)"
																				}
																			},
																			"id": 1846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12301:26:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1847,
																			"name": "sqrtPriceX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1720,
																			"src": "12331:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "12301:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1850,
																		"name": "tickLow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1816,
																		"src": "12355:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "12301:61:15",
																	"trueExpression": {
																		"id": 1849,
																		"name": "tickHi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1828,
																		"src": "12346:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "12271:91:15",
																"trueExpression": {
																	"id": 1843,
																	"name": "tickLow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "12291:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "12264:98:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 1854,
														"nodeType": "ExpressionStatement",
														"src": "12264:98:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "7173:449:15",
										"text": "@notice Calculates the greatest tick value such that getSqrtPriceAtTick(tick) <= sqrtPriceX96\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_PRICE, as MIN_SQRT_PRICE is the lowest value getSqrtPriceAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt price for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the getSqrtPriceAtTick(tick) is less than or equal to the input sqrtPriceX96"
									},
									"id": 1857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtPrice",
									"nameLocation": "7636:18:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "7663:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "7655:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1719,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7655:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7654:22:15"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "7706:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "7700:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1722,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "7700:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7699:12:15"
									},
									"scope": 1858,
									"src": "7627:4752:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1859,
							"src": "381:12000:15",
							"usedErrors": [
								1319,
								1324
							],
							"usedEvents": []
						}
					],
					"src": "32:12350:15"
				},
				"id": 15
			},
			"@uniswap/v4-core/src/libraries/TransientStateLibrary.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
					"exportedSymbols": {
						"Currency": [
							2214
						],
						"CurrencyReserves": [
							973
						],
						"IPoolManager": [
							614
						],
						"Lock": [
							1103
						],
						"NonzeroDeltaCount": [
							1128
						],
						"TransientStateLibrary": [
							1994
						]
					},
					"id": 1995,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1860,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:16"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
							"file": "../interfaces/IPoolManager.sol",
							"id": 1862,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1995,
							"sourceUnit": 615,
							"src": "58:60:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1861,
										"name": "IPoolManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 614,
										"src": "66:12:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/Currency.sol",
							"file": "../types/Currency.sol",
							"id": 1864,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1995,
							"sourceUnit": 2509,
							"src": "119:47:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1863,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2214,
										"src": "127:8:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/libraries/CurrencyReserves.sol",
							"file": "./CurrencyReserves.sol",
							"id": 1866,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1995,
							"sourceUnit": 974,
							"src": "167:56:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1865,
										"name": "CurrencyReserves",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 973,
										"src": "175:16:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/libraries/NonzeroDeltaCount.sol",
							"file": "./NonzeroDeltaCount.sol",
							"id": 1868,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1995,
							"sourceUnit": 1129,
							"src": "224:58:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1867,
										"name": "NonzeroDeltaCount",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1128,
										"src": "232:17:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/libraries/Lock.sol",
							"file": "./Lock.sol",
							"id": 1870,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1995,
							"sourceUnit": 1104,
							"src": "283:32:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1869,
										"name": "Lock",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1103,
										"src": "291:4:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransientStateLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1871,
								"nodeType": "StructuredDocumentation",
								"src": "317:72:16",
								"text": "@notice A helper library to provide state getters that use exttload"
							},
							"fullyImplemented": true,
							"id": 1994,
							"linearizedBaseContracts": [
								1994
							],
							"name": "TransientStateLibrary",
							"nameLocation": "397:21:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "848:150:16",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1881,
																	"name": "manager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "880:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IPoolManager_$614",
																		"typeString": "contract IPoolManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IPoolManager_$614",
																		"typeString": "contract IPoolManager"
																	}
																],
																"id": 1880,
																"name": "getSyncedCurrency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1926,
																"src": "862:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IPoolManager_$614_$returns$_t_userDefinedValueType$_Currency_$2214_$",
																	"typeString": "function (contract IPoolManager) view returns (Currency)"
																}
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "862:26:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "889:13:16",
														"memberName": "isAddressZero",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2470,
														"src": "862:40:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "function (Currency) pure returns (bool)"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "862:42:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1887,
												"nodeType": "IfStatement",
												"src": "858:56:16",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "913:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1879,
													"id": 1886,
													"nodeType": "Return",
													"src": "906:8:16"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1892,
																		"name": "CurrencyReserves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 973,
																		"src": "956:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_CurrencyReserves_$973_$",
																			"typeString": "type(library CurrencyReserves)"
																		}
																	},
																	"id": 1893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "973:16:16",
																	"memberName": "RESERVES_OF_SLOT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 938,
																	"src": "956:33:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1890,
																	"name": "manager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "939:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IPoolManager_$614",
																		"typeString": "contract IPoolManager"
																	}
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "947:8:16",
																"memberName": "exttload",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 121,
																"src": "939:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (bytes32) view external returns (bytes32)"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "939:51:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "931:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1888,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "931:7:16",
															"typeDescriptions": {}
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "931:60:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1879,
												"id": 1896,
												"nodeType": "Return",
												"src": "924:67:16"
											}
										]
									},
									"documentation": {
										"id": 1872,
										"nodeType": "StructuredDocumentation",
										"src": "537:225:16",
										"text": "@return uint256 The reserves of the currency.\n @dev returns 0 if the reserves are not synced or value is 0.\n Checks the synced currency to only return valid reserve values (after a sync and before a settle)."
									},
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSyncedReserves",
									"nameLocation": "776:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "807:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "794:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolManager_$614",
													"typeString": "contract IPoolManager"
												},
												"typeName": {
													"id": 1874,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1873,
														"name": "IPoolManager",
														"nameLocations": [
															"794:12:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "794:12:16"
													},
													"referencedDeclaration": 614,
													"src": "794:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:22:16"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "839:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:9:16"
									},
									"scope": 1994,
									"src": "767:231:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1925,
										"nodeType": "Block",
										"src": "1086:114:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 1917,
																								"name": "CurrencyReserves",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 973,
																								"src": "1158:16:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_CurrencyReserves_$973_$",
																									"typeString": "type(library CurrencyReserves)"
																								}
																							},
																							"id": 1918,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "1175:13:16",
																							"memberName": "CURRENCY_SLOT",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 942,
																							"src": "1158:30:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"expression": {
																							"id": 1915,
																							"name": "manager",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1901,
																							"src": "1141:7:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IPoolManager_$614",
																								"typeString": "contract IPoolManager"
																							}
																						},
																						"id": 1916,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1149:8:16",
																						"memberName": "exttload",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 121,
																						"src": "1141:16:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bytes32_$",
																							"typeString": "function (bytes32) view external returns (bytes32)"
																						}
																					},
																					"id": 1919,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1141:48:16",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1133:7:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1913,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1133:7:16",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1133:57:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1125:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1911,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "1125:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1125:66:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1117:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1909,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1117:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1117:75:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1907,
															"name": "Currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "1103:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
																"typeString": "type(Currency)"
															}
														},
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1112:4:16",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1103:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_address_$returns$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "function (address) pure returns (Currency)"
														}
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1103:90:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"functionReturnParameters": 1906,
												"id": 1924,
												"nodeType": "Return",
												"src": "1096:97:16"
											}
										]
									},
									"id": 1926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSyncedCurrency",
									"nameLocation": "1013:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "1044:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1031:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolManager_$614",
													"typeString": "contract IPoolManager"
												},
												"typeName": {
													"id": 1900,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1899,
														"name": "IPoolManager",
														"nameLocations": [
															"1031:12:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "1031:12:16"
													},
													"referencedDeclaration": 614,
													"src": "1031:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:22:16"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1076:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 1904,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1903,
														"name": "Currency",
														"nameLocations": [
															"1076:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "1076:8:16"
													},
													"referencedDeclaration": 2214,
													"src": "1076:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1075:10:16"
									},
									"scope": 1994,
									"src": "1004:196:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1944,
										"nodeType": "Block",
										"src": "1421:93:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1939,
																		"name": "NonzeroDeltaCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1128,
																		"src": "1463:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_NonzeroDeltaCount_$1128_$",
																			"typeString": "type(library NonzeroDeltaCount)"
																		}
																	},
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1481:24:16",
																	"memberName": "NONZERO_DELTA_COUNT_SLOT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1109,
																	"src": "1463:42:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1937,
																	"name": "manager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1930,
																	"src": "1446:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IPoolManager_$614",
																		"typeString": "contract IPoolManager"
																	}
																},
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1454:8:16",
																"memberName": "exttload",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 121,
																"src": "1446:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (bytes32) view external returns (bytes32)"
																}
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1446:60:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1438:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1935,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1438:7:16",
															"typeDescriptions": {}
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1438:69:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1934,
												"id": 1943,
												"nodeType": "Return",
												"src": "1431:76:16"
											}
										]
									},
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "1206:126:16",
										"text": "@notice Returns the number of nonzero deltas open on the PoolManager that must be zeroed out before the contract is locked"
									},
									"id": 1945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNonzeroDeltaCount",
									"nameLocation": "1346:20:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "1380:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1367:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolManager_$614",
													"typeString": "contract IPoolManager"
												},
												"typeName": {
													"id": 1929,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1928,
														"name": "IPoolManager",
														"nameLocations": [
															"1367:12:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "1367:12:16"
													},
													"referencedDeclaration": 614,
													"src": "1367:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1366:22:16"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1412:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1411:9:16"
									},
									"scope": 1994,
									"src": "1337:177:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "1822:325:16",
										"statements": [
											{
												"assignments": [
													1960
												],
												"declarations": [
													{
														"constant": false,
														"id": 1960,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "1840:3:16",
														"nodeType": "VariableDeclaration",
														"scope": 1974,
														"src": "1832:11:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1959,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1832:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1961,
												"nodeType": "VariableDeclarationStatement",
												"src": "1832:11:16"
											},
											{
												"AST": {
													"nativeSrc": "1878:208:16",
													"nodeType": "YulBlock",
													"src": "1878:208:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1899:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1899:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "target",
																				"nativeSrc": "1906:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1906:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1914:42:16",
																				"nodeType": "YulLiteral",
																				"src": "1914:42:16",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1902:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1902:3:16"
																		},
																		"nativeSrc": "1902:55:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1902:55:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1892:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1892:6:16"
																},
																"nativeSrc": "1892:66:16",
																"nodeType": "YulFunctionCall",
																"src": "1892:66:16"
															},
															"nativeSrc": "1892:66:16",
															"nodeType": "YulExpressionStatement",
															"src": "1892:66:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1978:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1978:2:16",
																		"type": "",
																		"value": "32"
																	},
																	{
																		"arguments": [
																			{
																				"name": "currency",
																				"nativeSrc": "1986:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "1986:8:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1996:42:16",
																				"nodeType": "YulLiteral",
																				"src": "1996:42:16",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1982:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1982:3:16"
																		},
																		"nativeSrc": "1982:57:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1982:57:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1971:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1971:6:16"
																},
																"nativeSrc": "1971:69:16",
																"nodeType": "YulFunctionCall",
																"src": "1971:69:16"
															},
															"nativeSrc": "1971:69:16",
															"nodeType": "YulExpressionStatement",
															"src": "1971:69:16"
														},
														{
															"nativeSrc": "2053:23:16",
															"nodeType": "YulAssignment",
															"src": "2053:23:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2070:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2070:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2073:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2073:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2060:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "2060:9:16"
																},
																"nativeSrc": "2060:16:16",
																"nodeType": "YulFunctionCall",
																"src": "2060:16:16"
															},
															"variableNames": [
																{
																	"name": "key",
																	"nativeSrc": "2053:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2053:3:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1954,
														"isOffset": false,
														"isSlot": false,
														"src": "1986:8:16",
														"valueSize": 1
													},
													{
														"declaration": 1960,
														"isOffset": false,
														"isSlot": false,
														"src": "2053:3:16",
														"valueSize": 1
													},
													{
														"declaration": 1951,
														"isOffset": false,
														"isSlot": false,
														"src": "1906:6:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1962,
												"nodeType": "InlineAssembly",
												"src": "1853:233:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1969,
																			"name": "key",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1960,
																			"src": "2134:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"expression": {
																			"id": 1967,
																			"name": "manager",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1949,
																			"src": "2117:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IPoolManager_$614",
																				"typeString": "contract IPoolManager"
																			}
																		},
																		"id": 1968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2125:8:16",
																		"memberName": "exttload",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 121,
																		"src": "2117:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bytes32_$",
																			"typeString": "function (bytes32) view external returns (bytes32)"
																		}
																	},
																	"id": 1970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2117:21:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2109:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1965,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2109:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2109:30:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2102:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 1963,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2102:6:16",
															"typeDescriptions": {}
														}
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:38:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1958,
												"id": 1973,
												"nodeType": "Return",
												"src": "2095:45:16"
											}
										]
									},
									"documentation": {
										"id": 1946,
										"nodeType": "StructuredDocumentation",
										"src": "1520:186:16",
										"text": "@notice Get the current delta for a caller in the given currency\n @param target The credited account address\n @param currency The currency for which to lookup the delta"
									},
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "currencyDelta",
									"nameLocation": "1720:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "1747:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "1734:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolManager_$614",
													"typeString": "contract IPoolManager"
												},
												"typeName": {
													"id": 1948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1947,
														"name": "IPoolManager",
														"nameLocations": [
															"1734:12:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "1734:12:16"
													},
													"referencedDeclaration": 614,
													"src": "1734:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1764:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "1756:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "1781:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "1772:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 1953,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1952,
														"name": "Currency",
														"nameLocations": [
															"1772:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "1772:8:16"
													},
													"referencedDeclaration": 2214,
													"src": "1772:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1733:57:16"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "1814:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1956,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1814:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:8:16"
									},
									"scope": 1994,
									"src": "1711:436:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1992,
										"nodeType": "Block",
										"src": "2288:70:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1986,
																	"name": "Lock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "2322:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Lock_$1103_$",
																		"typeString": "type(library Lock)"
																	}
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2327:16:16",
																"memberName": "IS_UNLOCKED_SLOT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1085,
																"src": "2322:21:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1984,
																"name": "manager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "2305:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPoolManager_$614",
																	"typeString": "contract IPoolManager"
																}
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2313:8:16",
															"memberName": "exttload",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 121,
															"src": "2305:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32) view external returns (bytes32)"
															}
														},
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2305:39:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "307830",
														"id": 1989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2348:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0x0"
													},
													"src": "2305:46:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1983,
												"id": 1991,
												"nodeType": "Return",
												"src": "2298:53:16"
											}
										]
									},
									"documentation": {
										"id": 1976,
										"nodeType": "StructuredDocumentation",
										"src": "2153:59:16",
										"text": "@notice Returns whether the contract is unlocked or not"
									},
									"id": 1993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUnlocked",
									"nameLocation": "2226:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "2250:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2237:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolManager_$614",
													"typeString": "contract IPoolManager"
												},
												"typeName": {
													"id": 1978,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1977,
														"name": "IPoolManager",
														"nameLocations": [
															"2237:12:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "2237:12:16"
													},
													"referencedDeclaration": 614,
													"src": "2237:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2236:22:16"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2282:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2282:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2281:6:16"
									},
									"scope": 1994,
									"src": "2217:141:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1995,
							"src": "389:1971:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2329:16"
				},
				"id": 16
			},
			"@uniswap/v4-core/src/types/BalanceDelta.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/types/BalanceDelta.sol",
					"exportedSymbols": {
						"BalanceDelta": [
							2000
						],
						"BalanceDeltaLibrary": [
							2158
						],
						"SafeCast": [
							1304
						],
						"add": [
							2055
						],
						"eq": [
							2106
						],
						"neq": [
							2128
						],
						"sub": [
							2084
						],
						"toBalanceDelta": [
							2026
						]
					},
					"id": 2159,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1996,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:17"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/libraries/SafeCast.sol",
							"file": "../libraries/SafeCast.sol",
							"id": 1998,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2159,
							"sourceUnit": 1305,
							"src": "57:51:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1997,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1304,
										"src": "65:8:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "BalanceDelta",
							"id": 2000,
							"name": "BalanceDelta",
							"nameLocation": "271:12:17",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "266:28:17",
							"underlyingType": {
								"id": 1999,
								"name": "int256",
								"nodeType": "ElementaryTypeName",
								"src": "287:6:17",
								"typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								}
							}
						},
						{
							"functionList": [
								{
									"definition": {
										"id": 2001,
										"name": "add",
										"nameLocations": [
											"303:3:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2055,
										"src": "303:3:17"
									},
									"operator": "+"
								},
								{
									"definition": {
										"id": 2002,
										"name": "sub",
										"nameLocations": [
											"313:3:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2084,
										"src": "313:3:17"
									},
									"operator": "-"
								},
								{
									"definition": {
										"id": 2003,
										"name": "eq",
										"nameLocations": [
											"323:2:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2106,
										"src": "323:2:17"
									},
									"operator": "=="
								},
								{
									"definition": {
										"id": 2004,
										"name": "neq",
										"nameLocations": [
											"333:3:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2128,
										"src": "333:3:17"
									},
									"operator": "!="
								}
							],
							"global": true,
							"id": 2007,
							"nodeType": "UsingForDirective",
							"src": "296:72:17",
							"typeName": {
								"id": 2006,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 2005,
									"name": "BalanceDelta",
									"nameLocations": [
										"348:12:17"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 2000,
									"src": "348:12:17"
								},
								"referencedDeclaration": 2000,
								"src": "348:12:17",
								"typeDescriptions": {
									"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
									"typeString": "BalanceDelta"
								}
							}
						},
						{
							"global": true,
							"id": 2011,
							"libraryName": {
								"id": 2008,
								"name": "BalanceDeltaLibrary",
								"nameLocations": [
									"375:19:17"
								],
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 2158,
								"src": "375:19:17"
							},
							"nodeType": "UsingForDirective",
							"src": "369:50:17",
							"typeName": {
								"id": 2010,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 2009,
									"name": "BalanceDelta",
									"nameLocations": [
										"399:12:17"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 2000,
									"src": "399:12:17"
								},
								"referencedDeclaration": 2000,
								"src": "399:12:17",
								"typeDescriptions": {
									"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
									"typeString": "BalanceDelta"
								}
							}
						},
						{
							"global": false,
							"id": 2014,
							"libraryName": {
								"id": 2012,
								"name": "SafeCast",
								"nameLocations": [
									"426:8:17"
								],
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1304,
								"src": "426:8:17"
							},
							"nodeType": "UsingForDirective",
							"src": "420:26:17",
							"typeName": {
								"id": 2013,
								"name": "int256",
								"nodeType": "ElementaryTypeName",
								"src": "439:6:17",
								"typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								}
							}
						},
						{
							"body": {
								"id": 2025,
								"nodeType": "Block",
								"src": "547:123:17",
								"statements": [
									{
										"AST": {
											"nativeSrc": "578:90:17",
											"nodeType": "YulBlock",
											"src": "578:90:17",
											"statements": [
												{
													"nativeSrc": "588:74:17",
													"nodeType": "YulAssignment",
													"src": "588:74:17",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "611:3:17",
																		"nodeType": "YulLiteral",
																		"src": "611:3:17",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "_amount0",
																		"nativeSrc": "616:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "616:8:17"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "607:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:17"
																},
																"nativeSrc": "607:18:17",
																"nodeType": "YulFunctionCall",
																"src": "607:18:17"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "639:3:17",
																						"nodeType": "YulLiteral",
																						"src": "639:3:17",
																						"type": "",
																						"value": "128"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "644:1:17",
																						"nodeType": "YulLiteral",
																						"src": "644:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "635:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "635:3:17"
																				},
																				"nativeSrc": "635:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "635:11:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "648:1:17",
																				"nodeType": "YulLiteral",
																				"src": "648:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "631:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "631:3:17"
																		},
																		"nativeSrc": "631:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "631:19:17"
																	},
																	{
																		"name": "_amount1",
																		"nativeSrc": "652:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "652:8:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "627:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "627:3:17"
																},
																"nativeSrc": "627:34:17",
																"nodeType": "YulFunctionCall",
																"src": "627:34:17"
															}
														],
														"functionName": {
															"name": "or",
															"nativeSrc": "604:2:17",
															"nodeType": "YulIdentifier",
															"src": "604:2:17"
														},
														"nativeSrc": "604:58:17",
														"nodeType": "YulFunctionCall",
														"src": "604:58:17"
													},
													"variableNames": [
														{
															"name": "balanceDelta",
															"nativeSrc": "588:12:17",
															"nodeType": "YulIdentifier",
															"src": "588:12:17"
														}
													]
												}
											]
										},
										"evmVersion": "cancun",
										"externalReferences": [
											{
												"declaration": 2016,
												"isOffset": false,
												"isSlot": false,
												"src": "616:8:17",
												"valueSize": 1
											},
											{
												"declaration": 2018,
												"isOffset": false,
												"isSlot": false,
												"src": "652:8:17",
												"valueSize": 1
											},
											{
												"declaration": 2022,
												"isOffset": false,
												"isSlot": false,
												"src": "588:12:17",
												"valueSize": 1
											}
										],
										"flags": [
											"memory-safe"
										],
										"id": 2024,
										"nodeType": "InlineAssembly",
										"src": "553:115:17"
									}
								]
							},
							"id": 2026,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "toBalanceDelta",
							"nameLocation": "457:14:17",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2019,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2016,
										"mutability": "mutable",
										"name": "_amount0",
										"nameLocation": "479:8:17",
										"nodeType": "VariableDeclaration",
										"scope": 2026,
										"src": "472:15:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int128",
											"typeString": "int128"
										},
										"typeName": {
											"id": 2015,
											"name": "int128",
											"nodeType": "ElementaryTypeName",
											"src": "472:6:17",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2018,
										"mutability": "mutable",
										"name": "_amount1",
										"nameLocation": "496:8:17",
										"nodeType": "VariableDeclaration",
										"scope": 2026,
										"src": "489:15:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int128",
											"typeString": "int128"
										},
										"typeName": {
											"id": 2017,
											"name": "int128",
											"nodeType": "ElementaryTypeName",
											"src": "489:6:17",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "471:34:17"
							},
							"returnParameters": {
								"id": 2023,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2022,
										"mutability": "mutable",
										"name": "balanceDelta",
										"nameLocation": "533:12:17",
										"nodeType": "VariableDeclaration",
										"scope": 2026,
										"src": "520:25:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 2021,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2020,
												"name": "BalanceDelta",
												"nameLocations": [
													"520:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2000,
												"src": "520:12:17"
											},
											"referencedDeclaration": 2000,
											"src": "520:12:17",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "519:27:17"
							},
							"scope": 2159,
							"src": "448:222:17",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2054,
								"nodeType": "Block",
								"src": "745:323:17",
								"statements": [
									{
										"assignments": [
											2039
										],
										"declarations": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "res0",
												"nameLocation": "758:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "751:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2038,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "751:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2040,
										"nodeType": "VariableDeclarationStatement",
										"src": "751:11:17"
									},
									{
										"assignments": [
											2042
										],
										"declarations": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "res1",
												"nameLocation": "775:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "768:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2041,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "768:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2043,
										"nodeType": "VariableDeclarationStatement",
										"src": "768:11:17"
									},
									{
										"AST": {
											"nativeSrc": "810:195:17",
											"nodeType": "YulBlock",
											"src": "810:195:17",
											"statements": [
												{
													"nativeSrc": "820:21:17",
													"nodeType": "YulVariableDeclaration",
													"src": "820:21:17",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "834:3:17",
																"nodeType": "YulLiteral",
																"src": "834:3:17",
																"type": "",
																"value": "128"
															},
															{
																"name": "a",
																"nativeSrc": "839:1:17",
																"nodeType": "YulIdentifier",
																"src": "839:1:17"
															}
														],
														"functionName": {
															"name": "sar",
															"nativeSrc": "830:3:17",
															"nodeType": "YulIdentifier",
															"src": "830:3:17"
														},
														"nativeSrc": "830:11:17",
														"nodeType": "YulFunctionCall",
														"src": "830:11:17"
													},
													"variables": [
														{
															"name": "a0",
															"nativeSrc": "824:2:17",
															"nodeType": "YulTypedName",
															"src": "824:2:17",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "850:27:17",
													"nodeType": "YulVariableDeclaration",
													"src": "850:27:17",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "871:2:17",
																"nodeType": "YulLiteral",
																"src": "871:2:17",
																"type": "",
																"value": "15"
															},
															{
																"name": "a",
																"nativeSrc": "875:1:17",
																"nodeType": "YulIdentifier",
																"src": "875:1:17"
															}
														],
														"functionName": {
															"name": "signextend",
															"nativeSrc": "860:10:17",
															"nodeType": "YulIdentifier",
															"src": "860:10:17"
														},
														"nativeSrc": "860:17:17",
														"nodeType": "YulFunctionCall",
														"src": "860:17:17"
													},
													"variables": [
														{
															"name": "a1",
															"nativeSrc": "854:2:17",
															"nodeType": "YulTypedName",
															"src": "854:2:17",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "886:21:17",
													"nodeType": "YulVariableDeclaration",
													"src": "886:21:17",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "900:3:17",
																"nodeType": "YulLiteral",
																"src": "900:3:17",
																"type": "",
																"value": "128"
															},
															{
																"name": "b",
																"nativeSrc": "905:1:17",
																"nodeType": "YulIdentifier",
																"src": "905:1:17"
															}
														],
														"functionName": {
															"name": "sar",
															"nativeSrc": "896:3:17",
															"nodeType": "YulIdentifier",
															"src": "896:3:17"
														},
														"nativeSrc": "896:11:17",
														"nodeType": "YulFunctionCall",
														"src": "896:11:17"
													},
													"variables": [
														{
															"name": "b0",
															"nativeSrc": "890:2:17",
															"nodeType": "YulTypedName",
															"src": "890:2:17",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "916:27:17",
													"nodeType": "YulVariableDeclaration",
													"src": "916:27:17",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "937:2:17",
																"nodeType": "YulLiteral",
																"src": "937:2:17",
																"type": "",
																"value": "15"
															},
															{
																"name": "b",
																"nativeSrc": "941:1:17",
																"nodeType": "YulIdentifier",
																"src": "941:1:17"
															}
														],
														"functionName": {
															"name": "signextend",
															"nativeSrc": "926:10:17",
															"nodeType": "YulIdentifier",
															"src": "926:10:17"
														},
														"nativeSrc": "926:17:17",
														"nodeType": "YulFunctionCall",
														"src": "926:17:17"
													},
													"variables": [
														{
															"name": "b1",
															"nativeSrc": "920:2:17",
															"nodeType": "YulTypedName",
															"src": "920:2:17",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "952:19:17",
													"nodeType": "YulAssignment",
													"src": "952:19:17",
													"value": {
														"arguments": [
															{
																"name": "a0",
																"nativeSrc": "964:2:17",
																"nodeType": "YulIdentifier",
																"src": "964:2:17"
															},
															{
																"name": "b0",
																"nativeSrc": "968:2:17",
																"nodeType": "YulIdentifier",
																"src": "968:2:17"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "960:3:17",
															"nodeType": "YulIdentifier",
															"src": "960:3:17"
														},
														"nativeSrc": "960:11:17",
														"nodeType": "YulFunctionCall",
														"src": "960:11:17"
													},
													"variableNames": [
														{
															"name": "res0",
															"nativeSrc": "952:4:17",
															"nodeType": "YulIdentifier",
															"src": "952:4:17"
														}
													]
												},
												{
													"nativeSrc": "980:19:17",
													"nodeType": "YulAssignment",
													"src": "980:19:17",
													"value": {
														"arguments": [
															{
																"name": "a1",
																"nativeSrc": "992:2:17",
																"nodeType": "YulIdentifier",
																"src": "992:2:17"
															},
															{
																"name": "b1",
																"nativeSrc": "996:2:17",
																"nodeType": "YulIdentifier",
																"src": "996:2:17"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "988:3:17",
															"nodeType": "YulIdentifier",
															"src": "988:3:17"
														},
														"nativeSrc": "988:11:17",
														"nodeType": "YulFunctionCall",
														"src": "988:11:17"
													},
													"variableNames": [
														{
															"name": "res1",
															"nativeSrc": "980:4:17",
															"nodeType": "YulIdentifier",
															"src": "980:4:17"
														}
													]
												}
											]
										},
										"evmVersion": "cancun",
										"externalReferences": [
											{
												"declaration": 2029,
												"isOffset": false,
												"isSlot": false,
												"src": "839:1:17",
												"valueSize": 1
											},
											{
												"declaration": 2029,
												"isOffset": false,
												"isSlot": false,
												"src": "875:1:17",
												"valueSize": 1
											},
											{
												"declaration": 2032,
												"isOffset": false,
												"isSlot": false,
												"src": "905:1:17",
												"valueSize": 1
											},
											{
												"declaration": 2032,
												"isOffset": false,
												"isSlot": false,
												"src": "941:1:17",
												"valueSize": 1
											},
											{
												"declaration": 2039,
												"isOffset": false,
												"isSlot": false,
												"src": "952:4:17",
												"valueSize": 1
											},
											{
												"declaration": 2042,
												"isOffset": false,
												"isSlot": false,
												"src": "980:4:17",
												"valueSize": 1
											}
										],
										"flags": [
											"memory-safe"
										],
										"id": 2044,
										"nodeType": "InlineAssembly",
										"src": "785:220:17"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2046,
															"name": "res0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2039,
															"src": "1032:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 2047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1037:8:17",
														"memberName": "toInt128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1246,
														"src": "1032:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$attached_to$_t_int256_$",
															"typeString": "function (int256) pure returns (int128)"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1032:15:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2049,
															"name": "res1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "1049:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 2050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1054:8:17",
														"memberName": "toInt128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1246,
														"src": "1049:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$attached_to$_t_int256_$",
															"typeString": "function (int256) pure returns (int128)"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:15:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													{
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												],
												"id": 2045,
												"name": "toBalanceDelta",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2026,
												"src": "1017:14:17",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_userDefinedValueType$_BalanceDelta_$2000_$",
													"typeString": "function (int128,int128) pure returns (BalanceDelta)"
												}
											},
											"id": 2052,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1017:48:17",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
												"typeString": "BalanceDelta"
											}
										},
										"functionReturnParameters": 2037,
										"id": 2053,
										"nodeType": "Return",
										"src": "1010:55:17"
									}
								]
							},
							"id": 2055,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "add",
							"nameLocation": "681:3:17",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2033,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2029,
										"mutability": "mutable",
										"name": "a",
										"nameLocation": "698:1:17",
										"nodeType": "VariableDeclaration",
										"scope": 2055,
										"src": "685:14:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 2028,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2027,
												"name": "BalanceDelta",
												"nameLocations": [
													"685:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2000,
												"src": "685:12:17"
											},
											"referencedDeclaration": 2000,
											"src": "685:12:17",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2032,
										"mutability": "mutable",
										"name": "b",
										"nameLocation": "714:1:17",
										"nodeType": "VariableDeclaration",
										"scope": 2055,
										"src": "701:14:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 2031,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2030,
												"name": "BalanceDelta",
												"nameLocations": [
													"701:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2000,
												"src": "701:12:17"
											},
											"referencedDeclaration": 2000,
											"src": "701:12:17",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "684:32:17"
							},
							"returnParameters": {
								"id": 2037,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2036,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2055,
										"src": "731:12:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 2035,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2034,
												"name": "BalanceDelta",
												"nameLocations": [
													"731:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2000,
												"src": "731:12:17"
											},
											"referencedDeclaration": 2000,
											"src": "731:12:17",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "730:14:17"
							},
							"scope": 2159,
							"src": "672:396:17",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2083,
								"nodeType": "Block",
								"src": "1143:323:17",
								"statements": [
									{
										"assignments": [
											2068
										],
										"declarations": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "res0",
												"nameLocation": "1156:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "1149:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2067,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1149:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2069,
										"nodeType": "VariableDeclarationStatement",
										"src": "1149:11:17"
									},
									{
										"assignments": [
											2071
										],
										"declarations": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "res1",
												"nameLocation": "1173:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "1166:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2070,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2072,
										"nodeType": "VariableDeclarationStatement",
										"src": "1166:11:17"
									},
									{
										"AST": {
											"nativeSrc": "1208:195:17",
											"nodeType": "YulBlock",
											"src": "1208:195:17",
											"statements": [
												{
													"nativeSrc": "1218:21:17",
													"nodeType": "YulVariableDeclaration",
													"src": "1218:21:17",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1232:3:17",
																"nodeType": "YulLiteral",
																"src": "1232:3:17",
																"type": "",
																"value": "128"
															},
															{
																"name": "a",
																"nativeSrc": "1237:1:17",
																"nodeType": "YulIdentifier",
																"src": "1237:1:17"
															}
														],
														"functionName": {
															"name": "sar",
															"nativeSrc": "1228:3:17",
															"nodeType": "YulIdentifier",
															"src": "1228:3:17"
														},
														"nativeSrc": "1228:11:17",
														"nodeType": "YulFunctionCall",
														"src": "1228:11:17"
													},
													"variables": [
														{
															"name": "a0",
															"nativeSrc": "1222:2:17",
															"nodeType": "YulTypedName",
															"src": "1222:2:17",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "1248:27:17",
													"nodeType": "YulVariableDeclaration",
													"src": "1248:27:17",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1269:2:17",
																"nodeType": "YulLiteral",
																"src": "1269:2:17",
																"type": "",
																"value": "15"
															},
															{
																"name": "a",
																"nativeSrc": "1273:1:17",
																"nodeType": "YulIdentifier",
																"src": "1273:1:17"
															}
														],
														"functionName": {
															"name": "signextend",
															"nativeSrc": "1258:10:17",
															"nodeType": "YulIdentifier",
															"src": "1258:10:17"
														},
														"nativeSrc": "1258:17:17",
														"nodeType": "YulFunctionCall",
														"src": "1258:17:17"
													},
													"variables": [
														{
															"name": "a1",
															"nativeSrc": "1252:2:17",
															"nodeType": "YulTypedName",
															"src": "1252:2:17",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "1284:21:17",
													"nodeType": "YulVariableDeclaration",
													"src": "1284:21:17",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1298:3:17",
																"nodeType": "YulLiteral",
																"src": "1298:3:17",
																"type": "",
																"value": "128"
															},
															{
																"name": "b",
																"nativeSrc": "1303:1:17",
																"nodeType": "YulIdentifier",
																"src": "1303:1:17"
															}
														],
														"functionName": {
															"name": "sar",
															"nativeSrc": "1294:3:17",
															"nodeType": "YulIdentifier",
															"src": "1294:3:17"
														},
														"nativeSrc": "1294:11:17",
														"nodeType": "YulFunctionCall",
														"src": "1294:11:17"
													},
													"variables": [
														{
															"name": "b0",
															"nativeSrc": "1288:2:17",
															"nodeType": "YulTypedName",
															"src": "1288:2:17",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "1314:27:17",
													"nodeType": "YulVariableDeclaration",
													"src": "1314:27:17",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1335:2:17",
																"nodeType": "YulLiteral",
																"src": "1335:2:17",
																"type": "",
																"value": "15"
															},
															{
																"name": "b",
																"nativeSrc": "1339:1:17",
																"nodeType": "YulIdentifier",
																"src": "1339:1:17"
															}
														],
														"functionName": {
															"name": "signextend",
															"nativeSrc": "1324:10:17",
															"nodeType": "YulIdentifier",
															"src": "1324:10:17"
														},
														"nativeSrc": "1324:17:17",
														"nodeType": "YulFunctionCall",
														"src": "1324:17:17"
													},
													"variables": [
														{
															"name": "b1",
															"nativeSrc": "1318:2:17",
															"nodeType": "YulTypedName",
															"src": "1318:2:17",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "1350:19:17",
													"nodeType": "YulAssignment",
													"src": "1350:19:17",
													"value": {
														"arguments": [
															{
																"name": "a0",
																"nativeSrc": "1362:2:17",
																"nodeType": "YulIdentifier",
																"src": "1362:2:17"
															},
															{
																"name": "b0",
																"nativeSrc": "1366:2:17",
																"nodeType": "YulIdentifier",
																"src": "1366:2:17"
															}
														],
														"functionName": {
															"name": "sub",
															"nativeSrc": "1358:3:17",
															"nodeType": "YulIdentifier",
															"src": "1358:3:17"
														},
														"nativeSrc": "1358:11:17",
														"nodeType": "YulFunctionCall",
														"src": "1358:11:17"
													},
													"variableNames": [
														{
															"name": "res0",
															"nativeSrc": "1350:4:17",
															"nodeType": "YulIdentifier",
															"src": "1350:4:17"
														}
													]
												},
												{
													"nativeSrc": "1378:19:17",
													"nodeType": "YulAssignment",
													"src": "1378:19:17",
													"value": {
														"arguments": [
															{
																"name": "a1",
																"nativeSrc": "1390:2:17",
																"nodeType": "YulIdentifier",
																"src": "1390:2:17"
															},
															{
																"name": "b1",
																"nativeSrc": "1394:2:17",
																"nodeType": "YulIdentifier",
																"src": "1394:2:17"
															}
														],
														"functionName": {
															"name": "sub",
															"nativeSrc": "1386:3:17",
															"nodeType": "YulIdentifier",
															"src": "1386:3:17"
														},
														"nativeSrc": "1386:11:17",
														"nodeType": "YulFunctionCall",
														"src": "1386:11:17"
													},
													"variableNames": [
														{
															"name": "res1",
															"nativeSrc": "1378:4:17",
															"nodeType": "YulIdentifier",
															"src": "1378:4:17"
														}
													]
												}
											]
										},
										"evmVersion": "cancun",
										"externalReferences": [
											{
												"declaration": 2058,
												"isOffset": false,
												"isSlot": false,
												"src": "1237:1:17",
												"valueSize": 1
											},
											{
												"declaration": 2058,
												"isOffset": false,
												"isSlot": false,
												"src": "1273:1:17",
												"valueSize": 1
											},
											{
												"declaration": 2061,
												"isOffset": false,
												"isSlot": false,
												"src": "1303:1:17",
												"valueSize": 1
											},
											{
												"declaration": 2061,
												"isOffset": false,
												"isSlot": false,
												"src": "1339:1:17",
												"valueSize": 1
											},
											{
												"declaration": 2068,
												"isOffset": false,
												"isSlot": false,
												"src": "1350:4:17",
												"valueSize": 1
											},
											{
												"declaration": 2071,
												"isOffset": false,
												"isSlot": false,
												"src": "1378:4:17",
												"valueSize": 1
											}
										],
										"flags": [
											"memory-safe"
										],
										"id": 2073,
										"nodeType": "InlineAssembly",
										"src": "1183:220:17"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2075,
															"name": "res0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "1430:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 2076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1435:8:17",
														"memberName": "toInt128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1246,
														"src": "1430:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$attached_to$_t_int256_$",
															"typeString": "function (int256) pure returns (int128)"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1430:15:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2078,
															"name": "res1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "1447:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1452:8:17",
														"memberName": "toInt128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1246,
														"src": "1447:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$attached_to$_t_int256_$",
															"typeString": "function (int256) pure returns (int128)"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1447:15:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													{
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												],
												"id": 2074,
												"name": "toBalanceDelta",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2026,
												"src": "1415:14:17",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_userDefinedValueType$_BalanceDelta_$2000_$",
													"typeString": "function (int128,int128) pure returns (BalanceDelta)"
												}
											},
											"id": 2081,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1415:48:17",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
												"typeString": "BalanceDelta"
											}
										},
										"functionReturnParameters": 2066,
										"id": 2082,
										"nodeType": "Return",
										"src": "1408:55:17"
									}
								]
							},
							"id": 2084,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "sub",
							"nameLocation": "1079:3:17",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2062,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2058,
										"mutability": "mutable",
										"name": "a",
										"nameLocation": "1096:1:17",
										"nodeType": "VariableDeclaration",
										"scope": 2084,
										"src": "1083:14:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 2057,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2056,
												"name": "BalanceDelta",
												"nameLocations": [
													"1083:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2000,
												"src": "1083:12:17"
											},
											"referencedDeclaration": 2000,
											"src": "1083:12:17",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2061,
										"mutability": "mutable",
										"name": "b",
										"nameLocation": "1112:1:17",
										"nodeType": "VariableDeclaration",
										"scope": 2084,
										"src": "1099:14:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 2060,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2059,
												"name": "BalanceDelta",
												"nameLocations": [
													"1099:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2000,
												"src": "1099:12:17"
											},
											"referencedDeclaration": 2000,
											"src": "1099:12:17",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1082:32:17"
							},
							"returnParameters": {
								"id": 2066,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2065,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2084,
										"src": "1129:12:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 2064,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2063,
												"name": "BalanceDelta",
												"nameLocations": [
													"1129:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2000,
												"src": "1129:12:17"
											},
											"referencedDeclaration": 2000,
											"src": "1129:12:17",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1128:14:17"
							},
							"scope": 2159,
							"src": "1070:396:17",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2105,
								"nodeType": "Block",
								"src": "1532:64:17",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"id": 2103,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"arguments": [
													{
														"id": 2097,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2087,
														"src": "1565:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
															"typeString": "BalanceDelta"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
															"typeString": "BalanceDelta"
														}
													],
													"expression": {
														"id": 2095,
														"name": "BalanceDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2000,
														"src": "1545:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_BalanceDelta_$2000_$",
															"typeString": "type(BalanceDelta)"
														}
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1558:6:17",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "1545:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_BalanceDelta_$2000_$returns$_t_int256_$",
														"typeString": "function (BalanceDelta) pure returns (int256)"
													}
												},
												"id": 2098,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1545:22:17",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"arguments": [
													{
														"id": 2101,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2090,
														"src": "1591:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
															"typeString": "BalanceDelta"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
															"typeString": "BalanceDelta"
														}
													],
													"expression": {
														"id": 2099,
														"name": "BalanceDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2000,
														"src": "1571:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_BalanceDelta_$2000_$",
															"typeString": "type(BalanceDelta)"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1584:6:17",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "1571:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_BalanceDelta_$2000_$returns$_t_int256_$",
														"typeString": "function (BalanceDelta) pure returns (int256)"
													}
												},
												"id": 2102,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1571:22:17",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"src": "1545:48:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"functionReturnParameters": 2094,
										"id": 2104,
										"nodeType": "Return",
										"src": "1538:55:17"
									}
								]
							},
							"id": 2106,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "eq",
							"nameLocation": "1477:2:17",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2091,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2087,
										"mutability": "mutable",
										"name": "a",
										"nameLocation": "1493:1:17",
										"nodeType": "VariableDeclaration",
										"scope": 2106,
										"src": "1480:14:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 2086,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2085,
												"name": "BalanceDelta",
												"nameLocations": [
													"1480:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2000,
												"src": "1480:12:17"
											},
											"referencedDeclaration": 2000,
											"src": "1480:12:17",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2090,
										"mutability": "mutable",
										"name": "b",
										"nameLocation": "1509:1:17",
										"nodeType": "VariableDeclaration",
										"scope": 2106,
										"src": "1496:14:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 2089,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2088,
												"name": "BalanceDelta",
												"nameLocations": [
													"1496:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2000,
												"src": "1496:12:17"
											},
											"referencedDeclaration": 2000,
											"src": "1496:12:17",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1479:32:17"
							},
							"returnParameters": {
								"id": 2094,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2093,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2106,
										"src": "1526:4:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 2092,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1526:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1525:6:17"
							},
							"scope": 2159,
							"src": "1468:128:17",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2127,
								"nodeType": "Block",
								"src": "1663:64:17",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"id": 2125,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"arguments": [
													{
														"id": 2119,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2109,
														"src": "1696:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
															"typeString": "BalanceDelta"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
															"typeString": "BalanceDelta"
														}
													],
													"expression": {
														"id": 2117,
														"name": "BalanceDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2000,
														"src": "1676:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_BalanceDelta_$2000_$",
															"typeString": "type(BalanceDelta)"
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1689:6:17",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "1676:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_BalanceDelta_$2000_$returns$_t_int256_$",
														"typeString": "function (BalanceDelta) pure returns (int256)"
													}
												},
												"id": 2120,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1676:22:17",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "!=",
											"rightExpression": {
												"arguments": [
													{
														"id": 2123,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2112,
														"src": "1722:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
															"typeString": "BalanceDelta"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
															"typeString": "BalanceDelta"
														}
													],
													"expression": {
														"id": 2121,
														"name": "BalanceDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2000,
														"src": "1702:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_BalanceDelta_$2000_$",
															"typeString": "type(BalanceDelta)"
														}
													},
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1715:6:17",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "1702:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_BalanceDelta_$2000_$returns$_t_int256_$",
														"typeString": "function (BalanceDelta) pure returns (int256)"
													}
												},
												"id": 2124,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1702:22:17",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"src": "1676:48:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"functionReturnParameters": 2116,
										"id": 2126,
										"nodeType": "Return",
										"src": "1669:55:17"
									}
								]
							},
							"id": 2128,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "neq",
							"nameLocation": "1607:3:17",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2113,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2109,
										"mutability": "mutable",
										"name": "a",
										"nameLocation": "1624:1:17",
										"nodeType": "VariableDeclaration",
										"scope": 2128,
										"src": "1611:14:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 2108,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2107,
												"name": "BalanceDelta",
												"nameLocations": [
													"1611:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2000,
												"src": "1611:12:17"
											},
											"referencedDeclaration": 2000,
											"src": "1611:12:17",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2112,
										"mutability": "mutable",
										"name": "b",
										"nameLocation": "1640:1:17",
										"nodeType": "VariableDeclaration",
										"scope": 2128,
										"src": "1627:14:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 2111,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2110,
												"name": "BalanceDelta",
												"nameLocations": [
													"1627:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2000,
												"src": "1627:12:17"
											},
											"referencedDeclaration": 2000,
											"src": "1627:12:17",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1610:32:17"
							},
							"returnParameters": {
								"id": 2116,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2115,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2128,
										"src": "1657:4:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 2114,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1657:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1656:6:17"
							},
							"scope": 2159,
							"src": "1598:129:17",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BalanceDeltaLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2129,
								"nodeType": "StructuredDocumentation",
								"src": "1729:90:17",
								"text": "@notice Library for getting the amount0 and amount1 deltas from the BalanceDelta type"
							},
							"fullyImplemented": true,
							"id": 2158,
							"linearizedBaseContracts": [
								2158
							],
							"name": "BalanceDeltaLibrary",
							"nameLocation": "1827:19:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "1853:31:17",
										"text": "@notice A BalanceDelta of 0"
									},
									"functionSelector": "91cb4669",
									"id": 2137,
									"mutability": "constant",
									"name": "ZERO_DELTA",
									"nameLocation": "1918:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 2158,
									"src": "1889:62:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
										"typeString": "BalanceDelta"
									},
									"typeName": {
										"id": 2132,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2131,
											"name": "BalanceDelta",
											"nameLocations": [
												"1889:12:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2000,
											"src": "1889:12:17"
										},
										"referencedDeclaration": 2000,
										"src": "1889:12:17",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
											"typeString": "BalanceDelta"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 2135,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1949:1:17",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"expression": {
												"id": 2133,
												"name": "BalanceDelta",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2000,
												"src": "1931:12:17",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_userDefinedValueType$_BalanceDelta_$2000_$",
													"typeString": "type(BalanceDelta)"
												}
											},
											"id": 2134,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"memberLocation": "1944:4:17",
											"memberName": "wrap",
											"nodeType": "MemberAccess",
											"src": "1931:17:17",
											"typeDescriptions": {
												"typeIdentifier": "t_function_wrap_pure$_t_int256_$returns$_t_userDefinedValueType$_BalanceDelta_$2000_$",
												"typeString": "function (int256) pure returns (BalanceDelta)"
											}
										},
										"id": 2136,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1931:20:17",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
											"typeString": "BalanceDelta"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "2042:99:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2077:58:17",
													"nodeType": "YulBlock",
													"src": "2077:58:17",
													"statements": [
														{
															"nativeSrc": "2091:34:17",
															"nodeType": "YulAssignment",
															"src": "2091:34:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2107:3:17",
																		"nodeType": "YulLiteral",
																		"src": "2107:3:17",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "balanceDelta",
																		"nativeSrc": "2112:12:17",
																		"nodeType": "YulIdentifier",
																		"src": "2112:12:17"
																	}
																],
																"functionName": {
																	"name": "sar",
																	"nativeSrc": "2103:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2103:3:17"
																},
																"nativeSrc": "2103:22:17",
																"nodeType": "YulFunctionCall",
																"src": "2103:22:17"
															},
															"variableNames": [
																{
																	"name": "_amount0",
																	"nativeSrc": "2091:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "2091:8:17"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2143,
														"isOffset": false,
														"isSlot": false,
														"src": "2091:8:17",
														"valueSize": 1
													},
													{
														"declaration": 2140,
														"isOffset": false,
														"isSlot": false,
														"src": "2112:12:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2145,
												"nodeType": "InlineAssembly",
												"src": "2052:83:17"
											}
										]
									},
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "amount0",
									"nameLocation": "1967:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "balanceDelta",
												"nameLocation": "1988:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1975:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 2139,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2138,
														"name": "BalanceDelta",
														"nameLocations": [
															"1975:12:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "1975:12:17"
													},
													"referencedDeclaration": 2000,
													"src": "1975:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1974:27:17"
									},
									"returnParameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "2032:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "2025:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2142,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2025:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:17"
									},
									"scope": 2158,
									"src": "1958:183:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "2231:105:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2266:64:17",
													"nodeType": "YulBlock",
													"src": "2266:64:17",
													"statements": [
														{
															"nativeSrc": "2280:40:17",
															"nodeType": "YulAssignment",
															"src": "2280:40:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2303:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2303:2:17",
																		"type": "",
																		"value": "15"
																	},
																	{
																		"name": "balanceDelta",
																		"nativeSrc": "2307:12:17",
																		"nodeType": "YulIdentifier",
																		"src": "2307:12:17"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "2292:10:17",
																	"nodeType": "YulIdentifier",
																	"src": "2292:10:17"
																},
																"nativeSrc": "2292:28:17",
																"nodeType": "YulFunctionCall",
																"src": "2292:28:17"
															},
															"variableNames": [
																{
																	"name": "_amount1",
																	"nativeSrc": "2280:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "2280:8:17"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2153,
														"isOffset": false,
														"isSlot": false,
														"src": "2280:8:17",
														"valueSize": 1
													},
													{
														"declaration": 2150,
														"isOffset": false,
														"isSlot": false,
														"src": "2307:12:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2155,
												"nodeType": "InlineAssembly",
												"src": "2241:89:17"
											}
										]
									},
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "amount1",
									"nameLocation": "2156:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "balanceDelta",
												"nameLocation": "2177:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "2164:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 2149,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2148,
														"name": "BalanceDelta",
														"nameLocations": [
															"2164:12:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "2164:12:17"
													},
													"referencedDeclaration": 2000,
													"src": "2164:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2163:27:17"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "2221:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "2214:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2152,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2214:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:17:17"
									},
									"scope": 2158,
									"src": "2147:189:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2159,
							"src": "1819:519:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2307:17"
				},
				"id": 17
			},
			"@uniswap/v4-core/src/types/BeforeSwapDelta.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/types/BeforeSwapDelta.sol",
					"exportedSymbols": {
						"BeforeSwapDelta": [
							2162
						],
						"BeforeSwapDeltaLibrary": [
							2206
						],
						"toBeforeSwapDelta": [
							2174
						]
					},
					"id": 2207,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2160,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:18"
						},
						{
							"canonicalName": "BeforeSwapDelta",
							"id": 2162,
							"name": "BeforeSwapDelta",
							"nameLocation": "229:15:18",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "224:31:18",
							"underlyingType": {
								"id": 2161,
								"name": "int256",
								"nodeType": "ElementaryTypeName",
								"src": "248:6:18",
								"typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								}
							}
						},
						{
							"body": {
								"id": 2173,
								"nodeType": "Block",
								"src": "447:140:18",
								"statements": [
									{
										"AST": {
											"nativeSrc": "478:107:18",
											"nodeType": "YulBlock",
											"src": "478:107:18",
											"statements": [
												{
													"nativeSrc": "488:91:18",
													"nodeType": "YulAssignment",
													"src": "488:91:18",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "514:3:18",
																		"nodeType": "YulLiteral",
																		"src": "514:3:18",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "deltaSpecified",
																		"nativeSrc": "519:14:18",
																		"nodeType": "YulIdentifier",
																		"src": "519:14:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "510:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:18"
																},
																"nativeSrc": "510:24:18",
																"nodeType": "YulFunctionCall",
																"src": "510:24:18"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "548:3:18",
																						"nodeType": "YulLiteral",
																						"src": "548:3:18",
																						"type": "",
																						"value": "128"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "553:1:18",
																						"nodeType": "YulLiteral",
																						"src": "553:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "544:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "544:3:18"
																				},
																				"nativeSrc": "544:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "544:11:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "557:1:18",
																				"nodeType": "YulLiteral",
																				"src": "557:1:18",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "540:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "540:3:18"
																		},
																		"nativeSrc": "540:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "540:19:18"
																	},
																	{
																		"name": "deltaUnspecified",
																		"nativeSrc": "561:16:18",
																		"nodeType": "YulIdentifier",
																		"src": "561:16:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "536:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "536:3:18"
																},
																"nativeSrc": "536:42:18",
																"nodeType": "YulFunctionCall",
																"src": "536:42:18"
															}
														],
														"functionName": {
															"name": "or",
															"nativeSrc": "507:2:18",
															"nodeType": "YulIdentifier",
															"src": "507:2:18"
														},
														"nativeSrc": "507:72:18",
														"nodeType": "YulFunctionCall",
														"src": "507:72:18"
													},
													"variableNames": [
														{
															"name": "beforeSwapDelta",
															"nativeSrc": "488:15:18",
															"nodeType": "YulIdentifier",
															"src": "488:15:18"
														}
													]
												}
											]
										},
										"evmVersion": "cancun",
										"externalReferences": [
											{
												"declaration": 2170,
												"isOffset": false,
												"isSlot": false,
												"src": "488:15:18",
												"valueSize": 1
											},
											{
												"declaration": 2164,
												"isOffset": false,
												"isSlot": false,
												"src": "519:14:18",
												"valueSize": 1
											},
											{
												"declaration": 2166,
												"isOffset": false,
												"isSlot": false,
												"src": "561:16:18",
												"valueSize": 1
											}
										],
										"flags": [
											"memory-safe"
										],
										"id": 2172,
										"nodeType": "InlineAssembly",
										"src": "453:132:18"
									}
								]
							},
							"id": 2174,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "toBeforeSwapDelta",
							"nameLocation": "326:17:18",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2167,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2164,
										"mutability": "mutable",
										"name": "deltaSpecified",
										"nameLocation": "351:14:18",
										"nodeType": "VariableDeclaration",
										"scope": 2174,
										"src": "344:21:18",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int128",
											"typeString": "int128"
										},
										"typeName": {
											"id": 2163,
											"name": "int128",
											"nodeType": "ElementaryTypeName",
											"src": "344:6:18",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2166,
										"mutability": "mutable",
										"name": "deltaUnspecified",
										"nameLocation": "374:16:18",
										"nodeType": "VariableDeclaration",
										"scope": 2174,
										"src": "367:23:18",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int128",
											"typeString": "int128"
										},
										"typeName": {
											"id": 2165,
											"name": "int128",
											"nodeType": "ElementaryTypeName",
											"src": "367:6:18",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "343:48:18"
							},
							"returnParameters": {
								"id": 2171,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2170,
										"mutability": "mutable",
										"name": "beforeSwapDelta",
										"nameLocation": "430:15:18",
										"nodeType": "VariableDeclaration",
										"scope": 2174,
										"src": "414:31:18",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$2162",
											"typeString": "BeforeSwapDelta"
										},
										"typeName": {
											"id": 2169,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2168,
												"name": "BeforeSwapDelta",
												"nameLocations": [
													"414:15:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2162,
												"src": "414:15:18"
											},
											"referencedDeclaration": 2162,
											"src": "414:15:18",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$2162",
												"typeString": "BeforeSwapDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "413:33:18"
							},
							"scope": 2207,
							"src": "317:270:18",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BeforeSwapDeltaLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2175,
								"nodeType": "StructuredDocumentation",
								"src": "589:99:18",
								"text": "@notice Library for getting the specified and unspecified deltas from the BeforeSwapDelta type"
							},
							"fullyImplemented": true,
							"id": 2206,
							"linearizedBaseContracts": [
								2206
							],
							"name": "BeforeSwapDeltaLibrary",
							"nameLocation": "696:22:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2176,
										"nodeType": "StructuredDocumentation",
										"src": "725:34:18",
										"text": "@notice A BeforeSwapDelta of 0"
									},
									"functionSelector": "91cb4669",
									"id": 2183,
									"mutability": "constant",
									"name": "ZERO_DELTA",
									"nameLocation": "796:10:18",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "764:68:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$2162",
										"typeString": "BeforeSwapDelta"
									},
									"typeName": {
										"id": 2178,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2177,
											"name": "BeforeSwapDelta",
											"nameLocations": [
												"764:15:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2162,
											"src": "764:15:18"
										},
										"referencedDeclaration": 2162,
										"src": "764:15:18",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$2162",
											"typeString": "BeforeSwapDelta"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 2181,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "830:1:18",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"expression": {
												"id": 2179,
												"name": "BeforeSwapDelta",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2162,
												"src": "809:15:18",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_userDefinedValueType$_BeforeSwapDelta_$2162_$",
													"typeString": "type(BeforeSwapDelta)"
												}
											},
											"id": 2180,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"memberLocation": "825:4:18",
											"memberName": "wrap",
											"nodeType": "MemberAccess",
											"src": "809:20:18",
											"typeDescriptions": {
												"typeIdentifier": "t_function_wrap_pure$_t_int256_$returns$_t_userDefinedValueType$_BeforeSwapDelta_$2162_$",
												"typeString": "function (int256) pure returns (BeforeSwapDelta)"
											}
										},
										"id": 2182,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "809:23:18",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$2162",
											"typeString": "BeforeSwapDelta"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2193,
										"nodeType": "Block",
										"src": "1037:98:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1072:57:18",
													"nodeType": "YulBlock",
													"src": "1072:57:18",
													"statements": [
														{
															"nativeSrc": "1086:33:18",
															"nodeType": "YulAssignment",
															"src": "1086:33:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1108:3:18",
																		"nodeType": "YulLiteral",
																		"src": "1108:3:18",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "delta",
																		"nativeSrc": "1113:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1113:5:18"
																	}
																],
																"functionName": {
																	"name": "sar",
																	"nativeSrc": "1104:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1104:3:18"
																},
																"nativeSrc": "1104:15:18",
																"nodeType": "YulFunctionCall",
																"src": "1104:15:18"
															},
															"variableNames": [
																{
																	"name": "deltaSpecified",
																	"nativeSrc": "1086:14:18",
																	"nodeType": "YulIdentifier",
																	"src": "1086:14:18"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2187,
														"isOffset": false,
														"isSlot": false,
														"src": "1113:5:18",
														"valueSize": 1
													},
													{
														"declaration": 2190,
														"isOffset": false,
														"isSlot": false,
														"src": "1086:14:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2192,
												"nodeType": "InlineAssembly",
												"src": "1047:82:18"
											}
										]
									},
									"documentation": {
										"id": 2184,
										"nodeType": "StructuredDocumentation",
										"src": "839:97:18",
										"text": "extracts int128 from the upper 128 bits of the BeforeSwapDelta\n returned by beforeSwap"
									},
									"id": 2194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSpecifiedDelta",
									"nameLocation": "950:17:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "984:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "968:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$2162",
													"typeString": "BeforeSwapDelta"
												},
												"typeName": {
													"id": 2186,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2185,
														"name": "BeforeSwapDelta",
														"nameLocations": [
															"968:15:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2162,
														"src": "968:15:18"
													},
													"referencedDeclaration": 2162,
													"src": "968:15:18",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$2162",
														"typeString": "BeforeSwapDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:23:18"
									},
									"returnParameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "deltaSpecified",
												"nameLocation": "1021:14:18",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "1014:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2189,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1014:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1013:23:18"
									},
									"scope": 2206,
									"src": "941:194:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2204,
										"nodeType": "Block",
										"src": "1357:106:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1392:65:18",
													"nodeType": "YulBlock",
													"src": "1392:65:18",
													"statements": [
														{
															"nativeSrc": "1406:41:18",
															"nodeType": "YulAssignment",
															"src": "1406:41:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1437:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:18",
																		"type": "",
																		"value": "15"
																	},
																	{
																		"name": "delta",
																		"nativeSrc": "1441:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1441:5:18"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "1426:10:18",
																	"nodeType": "YulIdentifier",
																	"src": "1426:10:18"
																},
																"nativeSrc": "1426:21:18",
																"nodeType": "YulFunctionCall",
																"src": "1426:21:18"
															},
															"variableNames": [
																{
																	"name": "deltaUnspecified",
																	"nativeSrc": "1406:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "1406:16:18"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2198,
														"isOffset": false,
														"isSlot": false,
														"src": "1441:5:18",
														"valueSize": 1
													},
													{
														"declaration": 2201,
														"isOffset": false,
														"isSlot": false,
														"src": "1406:16:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2203,
												"nodeType": "InlineAssembly",
												"src": "1367:90:18"
											}
										]
									},
									"documentation": {
										"id": 2195,
										"nodeType": "StructuredDocumentation",
										"src": "1141:111:18",
										"text": "extracts int128 from the lower 128 bits of the BeforeSwapDelta\n returned by beforeSwap and afterSwap"
									},
									"id": 2205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUnspecifiedDelta",
									"nameLocation": "1266:19:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "1302:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "1286:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$2162",
													"typeString": "BeforeSwapDelta"
												},
												"typeName": {
													"id": 2197,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2196,
														"name": "BeforeSwapDelta",
														"nameLocations": [
															"1286:15:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2162,
														"src": "1286:15:18"
													},
													"referencedDeclaration": 2162,
													"src": "1286:15:18",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$2162",
														"typeString": "BeforeSwapDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:23:18"
									},
									"returnParameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "deltaUnspecified",
												"nameLocation": "1339:16:18",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "1332:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2200,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1332:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:25:18"
									},
									"scope": 2206,
									"src": "1257:206:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2207,
							"src": "688:777:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1434:18"
				},
				"id": 18
			},
			"@uniswap/v4-core/src/types/Currency.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/types/Currency.sol",
					"exportedSymbols": {
						"Currency": [
							2214
						],
						"CurrencyLibrary": [
							2508
						],
						"CustomRevert": [
							1079
						],
						"IERC20Minimal": [
							775
						],
						"equals": [
							2247
						],
						"greaterThan": [
							2269
						],
						"greaterThanOrEqualTo": [
							2313
						],
						"lessThan": [
							2291
						]
					},
					"id": 2509,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2208,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:19"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol",
							"file": "../interfaces/external/IERC20Minimal.sol",
							"id": 2210,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2509,
							"sourceUnit": 776,
							"src": "57:71:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2209,
										"name": "IERC20Minimal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 775,
										"src": "65:13:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/libraries/CustomRevert.sol",
							"file": "../libraries/CustomRevert.sol",
							"id": 2212,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2509,
							"sourceUnit": 1080,
							"src": "129:59:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2211,
										"name": "CustomRevert",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1079,
										"src": "137:12:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "Currency",
							"id": 2214,
							"name": "Currency",
							"nameLocation": "195:8:19",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "190:25:19",
							"underlyingType": {
								"id": 2213,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "207:7:19",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							}
						},
						{
							"functionList": [
								{
									"definition": {
										"id": 2215,
										"name": "greaterThan",
										"nameLocations": [
											"224:11:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2269,
										"src": "224:11:19"
									},
									"operator": ">"
								},
								{
									"definition": {
										"id": 2216,
										"name": "lessThan",
										"nameLocations": [
											"242:8:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2291,
										"src": "242:8:19"
									},
									"operator": "<"
								},
								{
									"definition": {
										"id": 2217,
										"name": "greaterThanOrEqualTo",
										"nameLocations": [
											"257:20:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2313,
										"src": "257:20:19"
									},
									"operator": ">="
								},
								{
									"definition": {
										"id": 2218,
										"name": "equals",
										"nameLocations": [
											"285:6:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2247,
										"src": "285:6:19"
									},
									"operator": "=="
								}
							],
							"global": true,
							"id": 2221,
							"nodeType": "UsingForDirective",
							"src": "217:102:19",
							"typeName": {
								"id": 2220,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 2219,
									"name": "Currency",
									"nameLocations": [
										"303:8:19"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 2214,
									"src": "303:8:19"
								},
								"referencedDeclaration": 2214,
								"src": "303:8:19",
								"typeDescriptions": {
									"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
									"typeString": "Currency"
								}
							}
						},
						{
							"global": true,
							"id": 2225,
							"libraryName": {
								"id": 2222,
								"name": "CurrencyLibrary",
								"nameLocations": [
									"326:15:19"
								],
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 2508,
								"src": "326:15:19"
							},
							"nodeType": "UsingForDirective",
							"src": "320:42:19",
							"typeName": {
								"id": 2224,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 2223,
									"name": "Currency",
									"nameLocations": [
										"346:8:19"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 2214,
									"src": "346:8:19"
								},
								"referencedDeclaration": 2214,
								"src": "346:8:19",
								"typeDescriptions": {
									"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
									"typeString": "Currency"
								}
							}
						},
						{
							"body": {
								"id": 2246,
								"nodeType": "Block",
								"src": "435:67:19",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"id": 2244,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"arguments": [
													{
														"id": 2238,
														"name": "currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "464:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 2236,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "448:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "457:6:19",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "448:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 2239,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "448:25:19",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"arguments": [
													{
														"id": 2242,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "493:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 2240,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "477:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "486:6:19",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "477:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 2243,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "477:22:19",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"src": "448:51:19",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"functionReturnParameters": 2235,
										"id": 2245,
										"nodeType": "Return",
										"src": "441:58:19"
									}
								]
							},
							"id": 2247,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "equals",
							"nameLocation": "373:6:19",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2232,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2228,
										"mutability": "mutable",
										"name": "currency",
										"nameLocation": "389:8:19",
										"nodeType": "VariableDeclaration",
										"scope": 2247,
										"src": "380:17:19",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 2227,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2226,
												"name": "Currency",
												"nameLocations": [
													"380:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2214,
												"src": "380:8:19"
											},
											"referencedDeclaration": 2214,
											"src": "380:8:19",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2231,
										"mutability": "mutable",
										"name": "other",
										"nameLocation": "408:5:19",
										"nodeType": "VariableDeclaration",
										"scope": 2247,
										"src": "399:14:19",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 2230,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2229,
												"name": "Currency",
												"nameLocations": [
													"399:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2214,
												"src": "399:8:19"
											},
											"referencedDeclaration": 2214,
											"src": "399:8:19",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "379:35:19"
							},
							"returnParameters": {
								"id": 2235,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2234,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2247,
										"src": "429:4:19",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 2233,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "429:4:19",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "428:6:19"
							},
							"scope": 2509,
							"src": "364:138:19",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2268,
								"nodeType": "Block",
								"src": "580:66:19",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"id": 2266,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"arguments": [
													{
														"id": 2260,
														"name": "currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2250,
														"src": "609:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 2258,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "593:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "602:6:19",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "593:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 2261,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "593:25:19",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": ">",
											"rightExpression": {
												"arguments": [
													{
														"id": 2264,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2253,
														"src": "637:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 2262,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "621:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 2263,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "630:6:19",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "621:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 2265,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "621:22:19",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"src": "593:50:19",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"functionReturnParameters": 2257,
										"id": 2267,
										"nodeType": "Return",
										"src": "586:57:19"
									}
								]
							},
							"id": 2269,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "greaterThan",
							"nameLocation": "513:11:19",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2254,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2250,
										"mutability": "mutable",
										"name": "currency",
										"nameLocation": "534:8:19",
										"nodeType": "VariableDeclaration",
										"scope": 2269,
										"src": "525:17:19",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 2249,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2248,
												"name": "Currency",
												"nameLocations": [
													"525:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2214,
												"src": "525:8:19"
											},
											"referencedDeclaration": 2214,
											"src": "525:8:19",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2253,
										"mutability": "mutable",
										"name": "other",
										"nameLocation": "553:5:19",
										"nodeType": "VariableDeclaration",
										"scope": 2269,
										"src": "544:14:19",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 2252,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2251,
												"name": "Currency",
												"nameLocations": [
													"544:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2214,
												"src": "544:8:19"
											},
											"referencedDeclaration": 2214,
											"src": "544:8:19",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "524:35:19"
							},
							"returnParameters": {
								"id": 2257,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2256,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2269,
										"src": "574:4:19",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 2255,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "574:4:19",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "573:6:19"
							},
							"scope": 2509,
							"src": "504:142:19",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2290,
								"nodeType": "Block",
								"src": "721:66:19",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"id": 2288,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"arguments": [
													{
														"id": 2282,
														"name": "currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2272,
														"src": "750:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 2280,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "734:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "743:6:19",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "734:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 2283,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "734:25:19",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "<",
											"rightExpression": {
												"arguments": [
													{
														"id": 2286,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2275,
														"src": "778:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 2284,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "762:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "771:6:19",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "762:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 2287,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "762:22:19",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"src": "734:50:19",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"functionReturnParameters": 2279,
										"id": 2289,
										"nodeType": "Return",
										"src": "727:57:19"
									}
								]
							},
							"id": 2291,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "lessThan",
							"nameLocation": "657:8:19",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2276,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2272,
										"mutability": "mutable",
										"name": "currency",
										"nameLocation": "675:8:19",
										"nodeType": "VariableDeclaration",
										"scope": 2291,
										"src": "666:17:19",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 2271,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2270,
												"name": "Currency",
												"nameLocations": [
													"666:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2214,
												"src": "666:8:19"
											},
											"referencedDeclaration": 2214,
											"src": "666:8:19",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2275,
										"mutability": "mutable",
										"name": "other",
										"nameLocation": "694:5:19",
										"nodeType": "VariableDeclaration",
										"scope": 2291,
										"src": "685:14:19",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 2274,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2273,
												"name": "Currency",
												"nameLocations": [
													"685:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2214,
												"src": "685:8:19"
											},
											"referencedDeclaration": 2214,
											"src": "685:8:19",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "665:35:19"
							},
							"returnParameters": {
								"id": 2279,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2278,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2291,
										"src": "715:4:19",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 2277,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "715:4:19",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "714:6:19"
							},
							"scope": 2509,
							"src": "648:139:19",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2312,
								"nodeType": "Block",
								"src": "874:67:19",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"id": 2310,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"arguments": [
													{
														"id": 2304,
														"name": "currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2294,
														"src": "903:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 2302,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "887:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "896:6:19",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "887:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 2305,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "887:25:19",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": ">=",
											"rightExpression": {
												"arguments": [
													{
														"id": 2308,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2297,
														"src": "932:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 2306,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "916:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "925:6:19",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "916:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 2309,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "916:22:19",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"src": "887:51:19",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"functionReturnParameters": 2301,
										"id": 2311,
										"nodeType": "Return",
										"src": "880:58:19"
									}
								]
							},
							"id": 2313,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "greaterThanOrEqualTo",
							"nameLocation": "798:20:19",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2298,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2294,
										"mutability": "mutable",
										"name": "currency",
										"nameLocation": "828:8:19",
										"nodeType": "VariableDeclaration",
										"scope": 2313,
										"src": "819:17:19",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 2293,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2292,
												"name": "Currency",
												"nameLocations": [
													"819:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2214,
												"src": "819:8:19"
											},
											"referencedDeclaration": 2214,
											"src": "819:8:19",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2297,
										"mutability": "mutable",
										"name": "other",
										"nameLocation": "847:5:19",
										"nodeType": "VariableDeclaration",
										"scope": 2313,
										"src": "838:14:19",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 2296,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2295,
												"name": "Currency",
												"nameLocations": [
													"838:8:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2214,
												"src": "838:8:19"
											},
											"referencedDeclaration": 2214,
											"src": "838:8:19",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "818:35:19"
							},
							"returnParameters": {
								"id": 2301,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2300,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2313,
										"src": "868:4:19",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 2299,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "868:4:19",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "867:6:19"
							},
							"scope": 2509,
							"src": "789:152:19",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CurrencyLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2314,
								"nodeType": "StructuredDocumentation",
								"src": "943:116:19",
								"text": "@title CurrencyLibrary\n @dev This library allows for transferring and holding native tokens and ERC20 tokens"
							},
							"fullyImplemented": true,
							"id": 2508,
							"linearizedBaseContracts": [
								2508
							],
							"name": "CurrencyLibrary",
							"nameLocation": "1067:15:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2315,
										"nodeType": "StructuredDocumentation",
										"src": "1089:86:19",
										"text": "@notice Additional context for ERC-7751 wrapped error when a native transfer fails"
									},
									"errorSelector": "f4b3b1bc",
									"id": 2317,
									"name": "NativeTransferFailed",
									"nameLocation": "1186:20:19",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1206:2:19"
									},
									"src": "1180:29:19"
								},
								{
									"documentation": {
										"id": 2318,
										"nodeType": "StructuredDocumentation",
										"src": "1215:86:19",
										"text": "@notice Additional context for ERC-7751 wrapped error when an ERC20 transfer fails"
									},
									"errorSelector": "f27f64e4",
									"id": 2320,
									"name": "ERC20TransferFailed",
									"nameLocation": "1312:19:19",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1331:2:19"
									},
									"src": "1306:28:19"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2321,
										"nodeType": "StructuredDocumentation",
										"src": "1340:55:19",
										"text": "@notice A constant to represent the native currency"
									},
									"functionSelector": "66e79509",
									"id": 2331,
									"mutability": "constant",
									"name": "ADDRESS_ZERO",
									"nameLocation": "1425:12:19",
									"nodeType": "VariableDeclaration",
									"scope": 2508,
									"src": "1400:65:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
										"typeString": "Currency"
									},
									"typeName": {
										"id": 2323,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2322,
											"name": "Currency",
											"nameLocations": [
												"1400:8:19"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2214,
											"src": "1400:8:19"
										},
										"referencedDeclaration": 2214,
										"src": "1400:8:19",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
											"typeString": "Currency"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 2328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1462:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "1454:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 2326,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1454:7:19",
														"typeDescriptions": {}
													}
												},
												"id": 2329,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1454:10:19",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"expression": {
												"id": 2324,
												"name": "Currency",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2214,
												"src": "1440:8:19",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
													"typeString": "type(Currency)"
												}
											},
											"id": 2325,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"memberLocation": "1449:4:19",
											"memberName": "wrap",
											"nodeType": "MemberAccess",
											"src": "1440:13:19",
											"typeDescriptions": {
												"typeIdentifier": "t_function_wrap_pure$_t_address_$returns$_t_userDefinedValueType$_Currency_$2214_$",
												"typeString": "function (address) pure returns (Currency)"
											}
										},
										"id": 2330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1440:25:19",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
											"typeString": "Currency"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2386,
										"nodeType": "Block",
										"src": "1546:2799:19",
										"statements": [
											{
												"assignments": [
													2342
												],
												"declarations": [
													{
														"constant": false,
														"id": 2342,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1748:7:19",
														"nodeType": "VariableDeclaration",
														"scope": 2386,
														"src": "1743:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2341,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1743:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2343,
												"nodeType": "VariableDeclarationStatement",
												"src": "1743:12:19"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2344,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "1769:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1778:13:19",
														"memberName": "isAddressZero",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2470,
														"src": "1769:22:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "function (Currency) pure returns (bool)"
														}
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:24:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2384,
													"nodeType": "Block",
													"src": "2224:2115:19",
													"statements": [
														{
															"AST": {
																"nativeSrc": "2263:1749:19",
																"nodeType": "YulBlock",
																"src": "2263:1749:19",
																"statements": [
																	{
																		"nativeSrc": "2335:22:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2335:22:19",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2352:4:19",
																					"nodeType": "YulLiteral",
																					"src": "2352:4:19",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2346:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2346:5:19"
																			},
																			"nativeSrc": "2346:11:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2346:11:19"
																		},
																		"variables": [
																			{
																				"name": "fmp",
																				"nativeSrc": "2339:3:19",
																				"nodeType": "YulTypedName",
																				"src": "2339:3:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "fmp",
																					"nativeSrc": "2483:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2483:3:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2488:66:19",
																					"nodeType": "YulLiteral",
																					"src": "2488:66:19",
																					"type": "",
																					"value": "0xa9059cbb00000000000000000000000000000000000000000000000000000000"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2476:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2476:6:19"
																			},
																			"nativeSrc": "2476:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2476:79:19"
																		},
																		"nativeSrc": "2476:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2476:79:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "fmp",
																							"nativeSrc": "2583:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "2583:3:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2588:1:19",
																							"nodeType": "YulLiteral",
																							"src": "2588:1:19",
																							"type": "",
																							"value": "4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2579:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2579:3:19"
																					},
																					"nativeSrc": "2579:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2579:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "to",
																							"nativeSrc": "2596:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "2596:2:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2600:42:19",
																							"nodeType": "YulLiteral",
																							"src": "2600:42:19",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2592:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2592:3:19"
																					},
																					"nativeSrc": "2592:51:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2592:51:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2572:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2572:6:19"
																			},
																			"nativeSrc": "2572:72:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2572:72:19"
																		},
																		"nativeSrc": "2572:72:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2572:72:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "fmp",
																							"nativeSrc": "2710:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "2710:3:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2715:2:19",
																							"nodeType": "YulLiteral",
																							"src": "2715:2:19",
																							"type": "",
																							"value": "36"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2706:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2706:3:19"
																					},
																					"nativeSrc": "2706:12:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2706:12:19"
																				},
																				{
																					"name": "amount",
																					"nativeSrc": "2720:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "2720:6:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2699:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2699:6:19"
																			},
																			"nativeSrc": "2699:28:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2699:28:19"
																		},
																		"nativeSrc": "2699:28:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2699:28:19"
																	},
																	{
																		"nativeSrc": "2828:846:19",
																		"nodeType": "YulAssignment",
																		"src": "2828:846:19",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "3099:1:19",
																													"nodeType": "YulLiteral",
																													"src": "3099:1:19",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nativeSrc": "3093:5:19",
																												"nodeType": "YulIdentifier",
																												"src": "3093:5:19"
																											},
																											"nativeSrc": "3093:8:19",
																											"nodeType": "YulFunctionCall",
																											"src": "3093:8:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3103:1:19",
																											"nodeType": "YulLiteral",
																											"src": "3103:1:19",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "eq",
																										"nativeSrc": "3090:2:19",
																										"nodeType": "YulIdentifier",
																										"src": "3090:2:19"
																									},
																									"nativeSrc": "3090:15:19",
																									"nodeType": "YulFunctionCall",
																									"src": "3090:15:19"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "returndatasize",
																												"nativeSrc": "3110:14:19",
																												"nodeType": "YulIdentifier",
																												"src": "3110:14:19"
																											},
																											"nativeSrc": "3110:16:19",
																											"nodeType": "YulFunctionCall",
																											"src": "3110:16:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3128:2:19",
																											"nodeType": "YulLiteral",
																											"src": "3128:2:19",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "gt",
																										"nativeSrc": "3107:2:19",
																										"nodeType": "YulIdentifier",
																										"src": "3107:2:19"
																									},
																									"nativeSrc": "3107:24:19",
																									"nodeType": "YulFunctionCall",
																									"src": "3107:24:19"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "3086:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "3086:3:19"
																							},
																							"nativeSrc": "3086:46:19",
																							"nodeType": "YulFunctionCall",
																							"src": "3086:46:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "returndatasize",
																										"nativeSrc": "3141:14:19",
																										"nodeType": "YulIdentifier",
																										"src": "3141:14:19"
																									},
																									"nativeSrc": "3141:16:19",
																									"nodeType": "YulFunctionCall",
																									"src": "3141:16:19"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "3134:6:19",
																								"nodeType": "YulIdentifier",
																								"src": "3134:6:19"
																							},
																							"nativeSrc": "3134:24:19",
																							"nodeType": "YulFunctionCall",
																							"src": "3134:24:19"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "3083:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "3083:2:19"
																					},
																					"nativeSrc": "3083:76:19",
																					"nodeType": "YulFunctionCall",
																					"src": "3083:76:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "gas",
																								"nativeSrc": "3617:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "3617:3:19"
																							},
																							"nativeSrc": "3617:5:19",
																							"nodeType": "YulFunctionCall",
																							"src": "3617:5:19"
																						},
																						{
																							"name": "currency",
																							"nativeSrc": "3624:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "3624:8:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3634:1:19",
																							"nodeType": "YulLiteral",
																							"src": "3634:1:19",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "fmp",
																							"nativeSrc": "3637:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "3637:3:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3642:2:19",
																							"nodeType": "YulLiteral",
																							"src": "3642:2:19",
																							"type": "",
																							"value": "68"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3646:1:19",
																							"nodeType": "YulLiteral",
																							"src": "3646:1:19",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3649:2:19",
																							"nodeType": "YulLiteral",
																							"src": "3649:2:19",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "call",
																						"nativeSrc": "3612:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "3612:4:19"
																					},
																					"nativeSrc": "3612:40:19",
																					"nodeType": "YulFunctionCall",
																					"src": "3612:40:19"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2859:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2859:3:19"
																			},
																			"nativeSrc": "2859:815:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2859:815:19"
																		},
																		"variableNames": [
																			{
																				"name": "success",
																				"nativeSrc": "2828:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "2828:7:19"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "fmp",
																					"nativeSrc": "3747:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3747:3:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3752:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3752:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3740:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3740:6:19"
																			},
																			"nativeSrc": "3740:14:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3740:14:19"
																		},
																		"nativeSrc": "3740:14:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3740:14:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "fmp",
																							"nativeSrc": "3841:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "3841:3:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3846:4:19",
																							"nodeType": "YulLiteral",
																							"src": "3846:4:19",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3837:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "3837:3:19"
																					},
																					"nativeSrc": "3837:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "3837:14:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3853:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3853:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3830:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3830:6:19"
																			},
																			"nativeSrc": "3830:25:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3830:25:19"
																		},
																		"nativeSrc": "3830:25:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3830:25:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "fmp",
																							"nativeSrc": "3944:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "3944:3:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3949:4:19",
																							"nodeType": "YulLiteral",
																							"src": "3949:4:19",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3940:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "3940:3:19"
																					},
																					"nativeSrc": "3940:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "3940:14:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3956:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3956:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3933:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3933:6:19"
																			},
																			"nativeSrc": "3933:25:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3933:25:19"
																		},
																		"nativeSrc": "3933:25:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3933:25:19"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2338,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2720:6:19",
																	"valueSize": 1
																},
																{
																	"declaration": 2334,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3624:8:19",
																	"valueSize": 1
																},
																{
																	"declaration": 2342,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2828:7:19",
																	"valueSize": 1
																},
																{
																	"declaration": 2336,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2596:2:19",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2365,
															"nodeType": "InlineAssembly",
															"src": "2238:1774:19"
														},
														{
															"condition": {
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4124:8:19",
																"subExpression": {
																	"id": 2366,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2342,
																	"src": "4125:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2383,
															"nodeType": "IfStatement",
															"src": "4120:209:19",
															"trueBody": {
																"id": 2382,
																"nodeType": "Block",
																"src": "4134:195:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2373,
																							"name": "currency",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2334,
																							"src": "4224:8:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																								"typeString": "Currency"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																								"typeString": "Currency"
																							}
																						],
																						"expression": {
																							"id": 2371,
																							"name": "Currency",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2214,
																							"src": "4208:8:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
																								"typeString": "type(Currency)"
																							}
																						},
																						"id": 2372,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "4217:6:19",
																						"memberName": "unwrap",
																						"nodeType": "MemberAccess",
																						"src": "4208:15:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
																							"typeString": "function (Currency) pure returns (address)"
																						}
																					},
																					"id": 2374,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4208:25:19",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"expression": {
																							"id": 2375,
																							"name": "IERC20Minimal",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 775,
																							"src": "4235:13:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$775_$",
																								"typeString": "type(contract IERC20Minimal)"
																							}
																						},
																						"id": 2376,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "4249:8:19",
																						"memberName": "transfer",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 724,
																						"src": "4235:22:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																							"typeString": "function IERC20Minimal.transfer(address,uint256) returns (bool)"
																						}
																					},
																					"id": 2377,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4258:8:19",
																					"memberName": "selector",
																					"nodeType": "MemberAccess",
																					"src": "4235:31:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				{
																					"expression": {
																						"id": 2378,
																						"name": "ERC20TransferFailed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2320,
																						"src": "4268:19:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																							"typeString": "function () pure returns (error)"
																						}
																					},
																					"id": 2379,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4288:8:19",
																					"memberName": "selector",
																					"nodeType": "MemberAccess",
																					"src": "4268:28:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"expression": {
																					"id": 2368,
																					"name": "CustomRevert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "4152:12:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_CustomRevert_$1079_$",
																						"typeString": "type(library CustomRevert)"
																					}
																				},
																				"id": 2370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4165:21:19",
																				"memberName": "bubbleUpAndRevertWith",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1078,
																				"src": "4152:34:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes4_$_t_bytes4_$returns$__$",
																					"typeString": "function (address,bytes4,bytes4) pure"
																				}
																			},
																			"id": 2380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4152:162:19",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2381,
																		"nodeType": "ExpressionStatement",
																		"src": "4152:162:19"
																	}
																]
															}
														}
													]
												},
												"id": 2385,
												"nodeType": "IfStatement",
												"src": "1765:2574:19",
												"trueBody": {
													"id": 2364,
													"nodeType": "Block",
													"src": "1795:423:19",
													"statements": [
														{
															"AST": {
																"nativeSrc": "1834:138:19",
																"nodeType": "YulBlock",
																"src": "1834:138:19",
																"statements": [
																	{
																		"nativeSrc": "1912:46:19",
																		"nodeType": "YulAssignment",
																		"src": "1912:46:19",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "gas",
																						"nativeSrc": "1928:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1928:3:19"
																					},
																					"nativeSrc": "1928:5:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1928:5:19"
																				},
																				{
																					"name": "to",
																					"nativeSrc": "1935:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "1935:2:19"
																				},
																				{
																					"name": "amount",
																					"nativeSrc": "1939:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "1939:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1947:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1947:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1950:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1953:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1953:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1956:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "call",
																				"nativeSrc": "1923:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "1923:4:19"
																			},
																			"nativeSrc": "1923:35:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1923:35:19"
																		},
																		"variableNames": [
																			{
																				"name": "success",
																				"nativeSrc": "1912:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1912:7:19"
																			}
																		]
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2338,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1939:6:19",
																	"valueSize": 1
																},
																{
																	"declaration": 2342,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1912:7:19",
																	"valueSize": 1
																},
																{
																	"declaration": 2336,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1935:2:19",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2347,
															"nodeType": "InlineAssembly",
															"src": "1809:163:19"
														},
														{
															"condition": {
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2085:8:19",
																"subExpression": {
																	"id": 2348,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2342,
																	"src": "2086:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2363,
															"nodeType": "IfStatement",
															"src": "2081:127:19",
															"trueBody": {
																"id": 2362,
																"nodeType": "Block",
																"src": "2095:113:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2353,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2336,
																					"src": "2148:2:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2356,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2159:1:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2355,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2152:6:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes4_$",
																							"typeString": "type(bytes4)"
																						},
																						"typeName": {
																							"id": 2354,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "2152:6:19",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2357,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2152:9:19",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				{
																					"expression": {
																						"id": 2358,
																						"name": "NativeTransferFailed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2317,
																						"src": "2163:20:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																							"typeString": "function () pure returns (error)"
																						}
																					},
																					"id": 2359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2184:8:19",
																					"memberName": "selector",
																					"nodeType": "MemberAccess",
																					"src": "2163:29:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"expression": {
																					"id": 2350,
																					"name": "CustomRevert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "2113:12:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_CustomRevert_$1079_$",
																						"typeString": "type(library CustomRevert)"
																					}
																				},
																				"id": 2352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:21:19",
																				"memberName": "bubbleUpAndRevertWith",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1078,
																				"src": "2113:34:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes4_$_t_bytes4_$returns$__$",
																					"typeString": "function (address,bytes4,bytes4) pure"
																				}
																			},
																			"id": 2360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2113:80:19",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2361,
																		"nodeType": "ExpressionStatement",
																		"src": "2113:80:19"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 2387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1481:8:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "1499:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "1490:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 2333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2332,
														"name": "Currency",
														"nameLocations": [
															"1490:8:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "1490:8:19"
													},
													"referencedDeclaration": 2214,
													"src": "1490:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1517:2:19",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "1509:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1529:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "1521:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1489:47:19"
									},
									"returnParameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1546:0:19"
									},
									"scope": 2508,
									"src": "1472:2873:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2420,
										"nodeType": "Block",
										"src": "4425:202:19",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2395,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "4439:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"id": 2396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4448:13:19",
														"memberName": "isAddressZero",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2470,
														"src": "4439:22:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "function (Currency) pure returns (bool)"
														}
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4439:24:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2418,
													"nodeType": "Block",
													"src": "4524:97:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2414,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4604:4:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CurrencyLibrary_$2508",
																					"typeString": "library CurrencyLibrary"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CurrencyLibrary_$2508",
																					"typeString": "library CurrencyLibrary"
																				}
																			],
																			"id": 2413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4596:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2412,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4596:7:19",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4596:13:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2408,
																						"name": "currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2390,
																						"src": "4575:8:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						}
																					],
																					"expression": {
																						"id": 2406,
																						"name": "Currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2214,
																						"src": "4559:8:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
																							"typeString": "type(Currency)"
																						}
																					},
																					"id": 2407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4568:6:19",
																					"memberName": "unwrap",
																					"nodeType": "MemberAccess",
																					"src": "4559:15:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
																						"typeString": "function (Currency) pure returns (address)"
																					}
																				},
																				"id": 2409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4559:25:19",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2405,
																			"name": "IERC20Minimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 775,
																			"src": "4545:13:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$775_$",
																				"typeString": "type(contract IERC20Minimal)"
																			}
																		},
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4545:40:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Minimal_$775",
																			"typeString": "contract IERC20Minimal"
																		}
																	},
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4586:9:19",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 714,
																	"src": "4545:50:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4545:65:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2394,
															"id": 2417,
															"nodeType": "Return",
															"src": "4538:72:19"
														}
													]
												},
												"id": 2419,
												"nodeType": "IfStatement",
												"src": "4435:186:19",
												"trueBody": {
													"id": 2404,
													"nodeType": "Block",
													"src": "4465:53:19",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2400,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4494:4:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CurrencyLibrary_$2508",
																				"typeString": "library CurrencyLibrary"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CurrencyLibrary_$2508",
																				"typeString": "library CurrencyLibrary"
																			}
																		],
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4486:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2398,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4486:7:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4486:13:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4500:7:19",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4486:21:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2394,
															"id": 2403,
															"nodeType": "Return",
															"src": "4479:28:19"
														}
													]
												}
											}
										]
									},
									"id": 2421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfSelf",
									"nameLocation": "4360:13:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "4383:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "4374:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 2389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2388,
														"name": "Currency",
														"nameLocations": [
															"4374:8:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "4374:8:19"
													},
													"referencedDeclaration": 2214,
													"src": "4374:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:19:19"
									},
									"returnParameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "4416:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4416:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4415:9:19"
									},
									"scope": 2508,
									"src": "4351:276:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2450,
										"nodeType": "Block",
										"src": "4718:186:19",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2431,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "4732:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"id": 2432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4741:13:19",
														"memberName": "isAddressZero",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2470,
														"src": "4732:22:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "function (Currency) pure returns (bool)"
														}
													},
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4732:24:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2448,
													"nodeType": "Block",
													"src": "4809:89:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2445,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2426,
																		"src": "4881:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2441,
																						"name": "currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2424,
																						"src": "4860:8:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						}
																					],
																					"expression": {
																						"id": 2439,
																						"name": "Currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2214,
																						"src": "4844:8:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
																							"typeString": "type(Currency)"
																						}
																					},
																					"id": 2440,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4853:6:19",
																					"memberName": "unwrap",
																					"nodeType": "MemberAccess",
																					"src": "4844:15:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
																						"typeString": "function (Currency) pure returns (address)"
																					}
																				},
																				"id": 2442,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4844:25:19",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2438,
																			"name": "IERC20Minimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 775,
																			"src": "4830:13:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$775_$",
																				"typeString": "type(contract IERC20Minimal)"
																			}
																		},
																		"id": 2443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4830:40:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Minimal_$775",
																			"typeString": "contract IERC20Minimal"
																		}
																	},
																	"id": 2444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4871:9:19",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 714,
																	"src": "4830:50:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4830:57:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2430,
															"id": 2447,
															"nodeType": "Return",
															"src": "4823:64:19"
														}
													]
												},
												"id": 2449,
												"nodeType": "IfStatement",
												"src": "4728:170:19",
												"trueBody": {
													"id": 2437,
													"nodeType": "Block",
													"src": "4758:45:19",
													"statements": [
														{
															"expression": {
																"expression": {
																	"id": 2434,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "4779:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4785:7:19",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4779:13:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2430,
															"id": 2436,
															"nodeType": "Return",
															"src": "4772:20:19"
														}
													]
												}
											}
										]
									},
									"id": 2451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4642:9:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "4661:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "4652:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 2423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2422,
														"name": "Currency",
														"nameLocations": [
															"4652:8:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "4652:8:19"
													},
													"referencedDeclaration": 2214,
													"src": "4652:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4679:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "4671:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4651:34:19"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "4709:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4709:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4708:9:19"
									},
									"scope": 2508,
									"src": "4633:271:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2469,
										"nodeType": "Block",
										"src": "4981:82:19",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2461,
																"name": "currency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "5014:8:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															],
															"expression": {
																"id": 2459,
																"name": "Currency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2214,
																"src": "4998:8:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
																	"typeString": "type(Currency)"
																}
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5007:6:19",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4998:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
																"typeString": "function (Currency) pure returns (address)"
															}
														},
														"id": 2462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4998:25:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 2465,
																"name": "ADDRESS_ZERO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "5043:12:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															],
															"expression": {
																"id": 2463,
																"name": "Currency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2214,
																"src": "5027:8:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
																	"typeString": "type(Currency)"
																}
															},
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5036:6:19",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "5027:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
																"typeString": "function (Currency) pure returns (address)"
															}
														},
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5027:29:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4998:58:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2458,
												"id": 2468,
												"nodeType": "Return",
												"src": "4991:65:19"
											}
										]
									},
									"id": 2470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAddressZero",
									"nameLocation": "4919:13:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "4942:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "4933:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 2453,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2452,
														"name": "Currency",
														"nameLocations": [
															"4933:8:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "4933:8:19"
													},
													"referencedDeclaration": 2214,
													"src": "4933:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4932:19:19"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "4975:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4975:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4974:6:19"
									},
									"scope": 2508,
									"src": "4910:153:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2486,
										"nodeType": "Block",
										"src": "5134:58:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2482,
																	"name": "currency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2473,
																	"src": "5175:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																		"typeString": "Currency"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																		"typeString": "Currency"
																	}
																],
																"expression": {
																	"id": 2480,
																	"name": "Currency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2214,
																	"src": "5159:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
																		"typeString": "type(Currency)"
																	}
																},
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5168:6:19",
																"memberName": "unwrap",
																"nodeType": "MemberAccess",
																"src": "5159:15:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_address_$",
																	"typeString": "function (Currency) pure returns (address)"
																}
															},
															"id": 2483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5159:25:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5151:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2478,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "5151:7:19",
															"typeDescriptions": {}
														}
													},
													"id": 2484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5151:34:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 2477,
												"id": 2485,
												"nodeType": "Return",
												"src": "5144:41:19"
											}
										]
									},
									"id": 2487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toId",
									"nameLocation": "5078:4:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "5092:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "5083:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 2472,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2471,
														"name": "Currency",
														"nameLocations": [
															"5083:8:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "5083:8:19"
													},
													"referencedDeclaration": 2214,
													"src": "5083:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5082:19:19"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "5125:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5125:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:9:19"
									},
									"scope": 2508,
									"src": "5069:123:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2506,
										"nodeType": "Block",
										"src": "5396:59:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2501,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2489,
																			"src": "5443:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5435:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2499,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "5435:7:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5435:11:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5427:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2497,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5427:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 2503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5427:20:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2495,
															"name": "Currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "5413:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$2214_$",
																"typeString": "type(Currency)"
															}
														},
														"id": 2496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5422:4:19",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "5413:13:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_address_$returns$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "function (address) pure returns (Currency)"
														}
													},
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5413:35:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"functionReturnParameters": 2494,
												"id": 2505,
												"nodeType": "Return",
												"src": "5406:42:19"
											}
										]
									},
									"id": 2507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fromId",
									"nameLocation": "5344:6:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5359:2:19",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "5351:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5351:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5350:12:19"
									},
									"returnParameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "5386:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 2492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2491,
														"name": "Currency",
														"nameLocations": [
															"5386:8:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "5386:8:19"
													},
													"referencedDeclaration": 2214,
													"src": "5386:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5385:10:19"
									},
									"scope": 2508,
									"src": "5335:120:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2509,
							"src": "1059:4398:19",
							"usedErrors": [
								2317,
								2320
							],
							"usedEvents": []
						}
					],
					"src": "32:5426:19"
				},
				"id": 19
			},
			"@uniswap/v4-core/src/types/PoolId.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/types/PoolId.sol",
					"exportedSymbols": {
						"PoolId": [
							2514
						],
						"PoolIdLibrary": [
							2528
						],
						"PoolKey": [
							2560
						]
					},
					"id": 2529,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2510,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:20"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolKey.sol",
							"file": "./PoolKey.sol",
							"id": 2512,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2529,
							"sourceUnit": 2561,
							"src": "57:38:20",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2511,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2560,
										"src": "65:7:20",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "PoolId",
							"id": 2514,
							"name": "PoolId",
							"nameLocation": "102:6:20",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "97:23:20",
							"underlyingType": {
								"id": 2513,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "112:7:20",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PoolIdLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2515,
								"nodeType": "StructuredDocumentation",
								"src": "122:51:20",
								"text": "@notice Library for computing the ID of a pool"
							},
							"fullyImplemented": true,
							"id": 2528,
							"linearizedBaseContracts": [
								2528
							],
							"name": "PoolIdLibrary",
							"nameLocation": "181:13:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2526,
										"nodeType": "Block",
										"src": "347:189:20",
										"statements": [
											{
												"AST": {
													"nativeSrc": "382:148:20",
													"nodeType": "YulBlock",
													"src": "382:148:20",
													"statements": [
														{
															"nativeSrc": "486:34:20",
															"nodeType": "YulAssignment",
															"src": "486:34:20",
															"value": {
																"arguments": [
																	{
																		"name": "poolKey",
																		"nativeSrc": "506:7:20",
																		"nodeType": "YulIdentifier",
																		"src": "506:7:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "515:4:20",
																		"nodeType": "YulLiteral",
																		"src": "515:4:20",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "496:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "496:9:20"
																},
																"nativeSrc": "496:24:20",
																"nodeType": "YulFunctionCall",
																"src": "496:24:20"
															},
															"variableNames": [
																{
																	"name": "poolId",
																	"nativeSrc": "486:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "486:6:20"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2523,
														"isOffset": false,
														"isSlot": false,
														"src": "486:6:20",
														"valueSize": 1
													},
													{
														"declaration": 2519,
														"isOffset": false,
														"isSlot": false,
														"src": "506:7:20",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2525,
												"nodeType": "InlineAssembly",
												"src": "357:173:20"
											}
										]
									},
									"documentation": {
										"id": 2516,
										"nodeType": "StructuredDocumentation",
										"src": "201:65:20",
										"text": "@notice Returns value equal to keccak256(abi.encode(poolKey))"
									},
									"id": 2527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toId",
									"nameLocation": "280:4:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "poolKey",
												"nameLocation": "300:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "285:22:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 2518,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2517,
														"name": "PoolKey",
														"nameLocations": [
															"285:7:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "285:7:20"
													},
													"referencedDeclaration": 2560,
													"src": "285:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "284:24:20"
									},
									"returnParameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "339:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "332:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_PoolId_$2514",
													"typeString": "PoolId"
												},
												"typeName": {
													"id": 2522,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2521,
														"name": "PoolId",
														"nameLocations": [
															"332:6:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2514,
														"src": "332:6:20"
													},
													"referencedDeclaration": 2514,
													"src": "332:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_PoolId_$2514",
														"typeString": "PoolId"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:15:20"
									},
									"scope": 2528,
									"src": "271:265:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2529,
							"src": "173:365:20",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:507:20"
				},
				"id": 20
			},
			"@uniswap/v4-core/src/types/PoolKey.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/types/PoolKey.sol",
					"exportedSymbols": {
						"Currency": [
							2214
						],
						"IHooks": [
							331
						],
						"PoolIdLibrary": [
							2528
						],
						"PoolKey": [
							2560
						]
					},
					"id": 2561,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2530,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:21"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/Currency.sol",
							"file": "./Currency.sol",
							"id": 2532,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2561,
							"sourceUnit": 2509,
							"src": "57:40:21",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2531,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2214,
										"src": "65:8:21",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/IHooks.sol",
							"file": "../interfaces/IHooks.sol",
							"id": 2534,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2561,
							"sourceUnit": 332,
							"src": "98:48:21",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2533,
										"name": "IHooks",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 331,
										"src": "106:6:21",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolId.sol",
							"file": "./PoolId.sol",
							"id": 2536,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2561,
							"sourceUnit": 2529,
							"src": "147:43:21",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2535,
										"name": "PoolIdLibrary",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2528,
										"src": "155:13:21",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"global": true,
							"id": 2540,
							"libraryName": {
								"id": 2537,
								"name": "PoolIdLibrary",
								"nameLocations": [
									"198:13:21"
								],
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 2528,
								"src": "198:13:21"
							},
							"nodeType": "UsingForDirective",
							"src": "192:39:21",
							"typeName": {
								"id": 2539,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 2538,
									"name": "PoolKey",
									"nameLocations": [
										"216:7:21"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 2560,
									"src": "216:7:21"
								},
								"referencedDeclaration": 2560,
								"src": "216:7:21",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
									"typeString": "struct PoolKey"
								}
							}
						},
						{
							"canonicalName": "PoolKey",
							"documentation": {
								"id": 2541,
								"nodeType": "StructuredDocumentation",
								"src": "233:51:21",
								"text": "@notice Returns the key for identifying a pool"
							},
							"id": 2560,
							"members": [
								{
									"constant": false,
									"id": 2545,
									"mutability": "mutable",
									"name": "currency0",
									"nameLocation": "381:9:21",
									"nodeType": "VariableDeclaration",
									"scope": 2560,
									"src": "372:18:21",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
										"typeString": "Currency"
									},
									"typeName": {
										"id": 2544,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2543,
											"name": "Currency",
											"nameLocations": [
												"372:8:21"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2214,
											"src": "372:8:21"
										},
										"referencedDeclaration": 2214,
										"src": "372:8:21",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
											"typeString": "Currency"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2549,
									"mutability": "mutable",
									"name": "currency1",
									"nameLocation": "473:9:21",
									"nodeType": "VariableDeclaration",
									"scope": 2560,
									"src": "464:18:21",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
										"typeString": "Currency"
									},
									"typeName": {
										"id": 2548,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2547,
											"name": "Currency",
											"nameLocations": [
												"464:8:21"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2214,
											"src": "464:8:21"
										},
										"referencedDeclaration": 2214,
										"src": "464:8:21",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
											"typeString": "Currency"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2552,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "639:3:21",
									"nodeType": "VariableDeclaration",
									"scope": 2560,
									"src": "632:10:21",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 2551,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "632:6:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2555,
									"mutability": "mutable",
									"name": "tickSpacing",
									"nameLocation": "734:11:21",
									"nodeType": "VariableDeclaration",
									"scope": 2560,
									"src": "728:17:21",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 2554,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "728:5:21",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2559,
									"mutability": "mutable",
									"name": "hooks",
									"nameLocation": "796:5:21",
									"nodeType": "VariableDeclaration",
									"scope": 2560,
									"src": "789:12:21",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IHooks_$331",
										"typeString": "contract IHooks"
									},
									"typeName": {
										"id": 2558,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2557,
											"name": "IHooks",
											"nameLocations": [
												"789:6:21"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 331,
											"src": "789:6:21"
										},
										"referencedDeclaration": 331,
										"src": "789:6:21",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IHooks_$331",
											"typeString": "contract IHooks"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "PoolKey",
							"nameLocation": "291:7:21",
							"nodeType": "StructDefinition",
							"scope": 2561,
							"src": "284:520:21",
							"visibility": "public"
						}
					],
					"src": "32:773:21"
				},
				"id": 21
			},
			"@uniswap/v4-core/src/types/PoolOperation.sol": {
				"ast": {
					"absolutePath": "@uniswap/v4-core/src/types/PoolOperation.sol",
					"exportedSymbols": {
						"BalanceDelta": [
							2000
						],
						"ModifyLiquidityParams": [
							2576
						],
						"PoolKey": [
							2560
						],
						"SwapParams": [
							2587
						]
					},
					"id": 2588,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2562,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:22"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolKey.sol",
							"file": "../types/PoolKey.sol",
							"id": 2564,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2588,
							"sourceUnit": 2561,
							"src": "58:45:22",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2563,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2560,
										"src": "66:7:22",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/BalanceDelta.sol",
							"file": "../types/BalanceDelta.sol",
							"id": 2566,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2588,
							"sourceUnit": 2159,
							"src": "104:55:22",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2565,
										"name": "BalanceDelta",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2000,
										"src": "112:12:22",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ModifyLiquidityParams",
							"documentation": {
								"id": 2567,
								"nodeType": "StructuredDocumentation",
								"src": "161:67:22",
								"text": "@notice Parameter struct for `ModifyLiquidity` pool operations"
							},
							"id": 2576,
							"members": [
								{
									"constant": false,
									"id": 2569,
									"mutability": "mutable",
									"name": "tickLower",
									"nameLocation": "317:9:22",
									"nodeType": "VariableDeclaration",
									"scope": 2576,
									"src": "311:15:22",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 2568,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "311:5:22",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2571,
									"mutability": "mutable",
									"name": "tickUpper",
									"nameLocation": "338:9:22",
									"nodeType": "VariableDeclaration",
									"scope": 2576,
									"src": "332:15:22",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 2570,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "332:5:22",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2573,
									"mutability": "mutable",
									"name": "liquidityDelta",
									"nameLocation": "395:14:22",
									"nodeType": "VariableDeclaration",
									"scope": 2576,
									"src": "388:21:22",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2572,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "388:6:22",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2575,
									"mutability": "mutable",
									"name": "salt",
									"nameLocation": "502:4:22",
									"nodeType": "VariableDeclaration",
									"scope": 2576,
									"src": "494:12:22",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2574,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "494:7:22",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ModifyLiquidityParams",
							"nameLocation": "235:21:22",
							"nodeType": "StructDefinition",
							"scope": 2588,
							"src": "228:281:22",
							"visibility": "public"
						},
						{
							"canonicalName": "SwapParams",
							"documentation": {
								"id": 2577,
								"nodeType": "StructuredDocumentation",
								"src": "511:56:22",
								"text": "@notice Parameter struct for `Swap` pool operations"
							},
							"id": 2587,
							"members": [
								{
									"constant": false,
									"id": 2580,
									"mutability": "mutable",
									"name": "zeroForOne",
									"nameLocation": "652:10:22",
									"nodeType": "VariableDeclaration",
									"scope": 2587,
									"src": "647:15:22",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2579,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "647:4:22",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2583,
									"mutability": "mutable",
									"name": "amountSpecified",
									"nameLocation": "783:15:22",
									"nodeType": "VariableDeclaration",
									"scope": 2587,
									"src": "776:22:22",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2582,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:22",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2586,
									"mutability": "mutable",
									"name": "sqrtPriceLimitX96",
									"nameLocation": "886:17:22",
									"nodeType": "VariableDeclaration",
									"scope": 2587,
									"src": "878:25:22",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 2585,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "878:7:22",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "SwapParams",
							"nameLocation": "574:10:22",
							"nodeType": "StructDefinition",
							"scope": 2588,
							"src": "567:339:22",
							"visibility": "public"
						}
					],
					"src": "32:875:22"
				},
				"id": 22
			},
			"contracts/Transaction.sol": {
				"ast": {
					"absolutePath": "contracts/Transaction.sol",
					"exportedSymbols": {
						"ActionConstants": [
							4148
						],
						"Actions": [
							4227
						],
						"BalanceDelta": [
							2000
						],
						"BaseActionsRouter": [
							3623
						],
						"BipsLibrary": [
							4262
						],
						"CalldataDecoder": [
							4600
						],
						"Currency": [
							2214
						],
						"DeltaResolver": [
							3928
						],
						"IERC20": [
							77
						],
						"IPoolManager": [
							614
						],
						"IV4Router": [
							4122
						],
						"PathKey": [
							4621
						],
						"PoolKey": [
							2560
						],
						"SafeCast": [
							1304
						],
						"SwapParams": [
							2587
						],
						"TickMath": [
							1858
						],
						"Transaction": [
							2677
						],
						"V4Router": [
							3431
						]
					},
					"id": 2678,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2589,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:23"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2678,
							"sourceUnit": 78,
							"src": "57:56:23",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
							"file": "https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
							"id": 2591,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2678,
							"sourceUnit": 3432,
							"src": "114:66:23",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Transaction",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2592,
								"nodeType": "StructuredDocumentation",
								"src": "182:838:23",
								"text": "1、 什麼是重入攻擊? 如何預防?\n重入攻擊（Reentrancy Attack）：重入攻擊發生在一個外部呼叫（External Call）在完成前，回調到原合約，造成惡意使用者重複提款或其他非預期的行為。\n預防方法：在執行任何操作之前，先檢查所有前提條件。更新合約的內部狀態變數必須在任何外部呼叫之前完成。\n2、 三種 send Ether 的方式具體差異為何?\ntransfer()：如果發送失敗會自動還原（revert）整個交易。\nsend()：如果發送失敗，不會自動還原交易，而是返回 false，所以需要自行檢查返回值來處理發送失敗的情況。\ncall()：如果呼叫失敗，不會自動還原交易，只會將 success 設定為 false，因此必須自行檢查 success 的返回值。"
							},
							"fullyImplemented": true,
							"id": 2677,
							"linearizedBaseContracts": [
								2677
							],
							"name": "Transaction",
							"nameLocation": "1094:11:23",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "89a30271",
									"id": 2595,
									"mutability": "mutable",
									"name": "USDC",
									"nameLocation": "1127:4:23",
									"nodeType": "VariableDeclaration",
									"scope": 2677,
									"src": "1113:18:23",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2594,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2593,
											"name": "IERC20",
											"nameLocations": [
												"1113:6:23"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "1113:6:23"
										},
										"referencedDeclaration": 77,
										"src": "1113:6:23",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "74667906",
									"id": 2598,
									"mutability": "constant",
									"name": "UNISWAP_POOLMANAGER_SEPOLIA",
									"nameLocation": "1187:27:23",
									"nodeType": "VariableDeclaration",
									"scope": 2677,
									"src": "1163:96:23",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2596,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1163:7:23",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843353332613734323536443344623432443042663761303430306645464462616437363934303038",
										"id": 2597,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1217:42:23",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC532a74256D3Db42D0Bf7a0400fEFDbad7694008"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4bf2e99b",
									"id": 2601,
									"mutability": "constant",
									"name": "USDC_ADDRESS_SEPOLIA",
									"nameLocation": "1289:20:23",
									"nodeType": "VariableDeclaration",
									"scope": 2677,
									"src": "1265:89:23",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2599,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1265:7:23",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831633744344231393643623043374230316437343346626336313136613930323337394337323338",
										"id": 2600,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1312:42:23",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bb09d9b7",
									"id": 2603,
									"mutability": "mutable",
									"name": "USDC_ADDRESS",
									"nameLocation": "1376:12:23",
									"nodeType": "VariableDeclaration",
									"scope": 2677,
									"src": "1361:27:23",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2602,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1361:7:23",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 2605,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "1436:5:23",
									"nodeType": "VariableDeclaration",
									"scope": 2677,
									"src": "1421:20:23",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2604,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1421:7:23",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "33c981baba081f8fd2c52ac6ad1ea95b6814b4376640f55689051f6584729688",
									"id": 2612,
									"name": "ContractDeployed",
									"nameLocation": "1468:16:23",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1494:5:23",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "1486:13:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2610,
												"indexed": false,
												"mutability": "mutable",
												"name": "USDC_ADDRESS",
												"nameLocation": "1508:12:23",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "1501:19:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2608,
														"name": "IERC20",
														"nameLocations": [
															"1501:6:23"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1501:6:23"
													},
													"referencedDeclaration": 77,
													"src": "1501:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:36:23"
									},
									"src": "1462:60:23"
								},
								{
									"body": {
										"id": 2635,
										"nodeType": "Block",
										"src": "1546:179:23",
										"statements": [
											{
												"expression": {
													"id": 2618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2615,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2605,
														"src": "1556:5:23",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2616,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1564:3:23",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1568:6:23",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1564:10:23",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1556:18:23",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2619,
												"nodeType": "ExpressionStatement",
												"src": "1556:18:23"
											},
											{
												"expression": {
													"id": 2622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2620,
														"name": "USDC_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2603,
														"src": "1593:12:23",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2621,
														"name": "USDC_ADDRESS_SEPOLIA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2601,
														"src": "1608:20:23",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1593:35:23",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2623,
												"nodeType": "ExpressionStatement",
												"src": "1593:35:23"
											},
											{
												"expression": {
													"id": 2628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2624,
														"name": "USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2595,
														"src": "1638:4:23",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2626,
																"name": "USDC_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "1652:12:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2625,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1645:6:23",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 2627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1645:20:23",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1638:27:23",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 2629,
												"nodeType": "ExpressionStatement",
												"src": "1638:27:23"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2631,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2605,
															"src": "1706:5:23",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2632,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2595,
															"src": "1713:4:23",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														],
														"id": 2630,
														"name": "ContractDeployed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2612,
														"src": "1689:16:23",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$77_$returns$__$",
															"typeString": "function (address,contract IERC20)"
														}
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1689:29:23",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2634,
												"nodeType": "EmitStatement",
												"src": "1684:34:23"
											}
										]
									},
									"id": 2636,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1543:2:23"
									},
									"returnParameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1546:0:23"
									},
									"scope": 2677,
									"src": "1532:193:23",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2647,
										"nodeType": "Block",
										"src": "1752:84:23",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2639,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1771:3:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1775:6:23",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1771:10:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2641,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2605,
																"src": "1785:5:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1771:19:23",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e20646f20746869732e",
															"id": 2643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1792:25:23",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca",
																"typeString": "literal_string \"Only owner can do this.\""
															},
															"value": "Only owner can do this."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0eaf8be5f0d398fa8eb04f745ba1dd1467c5794cc18b331703b2929304f917ca",
																"typeString": "literal_string \"Only owner can do this.\""
															}
														],
														"id": 2638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1762:7:23",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1762:56:23",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2645,
												"nodeType": "ExpressionStatement",
												"src": "1762:56:23"
											},
											{
												"id": 2646,
												"nodeType": "PlaceholderStatement",
												"src": "1828:1:23"
											}
										]
									},
									"id": 2648,
									"name": "onlyOwner",
									"nameLocation": "1740:9:23",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1749:2:23"
									},
									"src": "1731:105:23",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2675,
										"nodeType": "Block",
										"src": "1944:200:23",
										"statements": [
											{
												"expression": {
													"id": 2663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2659,
														"name": "gainOfUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2655,
														"src": "2044:10:23",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 2662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2660,
															"name": "balanceOfETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2650,
															"src": "2057:12:23",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "33303339",
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2072:4:23",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3039_by_1",
																"typeString": "int_const 3039"
															},
															"value": "3039"
														},
														"src": "2057:19:23",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2044:32:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2664,
												"nodeType": "ExpressionStatement",
												"src": "2044:32:23"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2665,
															"name": "gainOfUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2655,
															"src": "2095:10:23",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2670,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2130:4:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Transaction_$2677",
																				"typeString": "contract Transaction"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Transaction_$2677",
																				"typeString": "contract Transaction"
																			}
																		],
																		"id": 2669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2122:7:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2668,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2122:7:23",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2122:13:23",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2666,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2595,
																	"src": "2107:4:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2112:9:23",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "2107:14:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2107:29:23",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2673,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2094:43:23",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint16_$_t_uint256_$",
														"typeString": "tuple(uint16,uint256)"
													}
												},
												"functionReturnParameters": 2658,
												"id": 2674,
												"nodeType": "Return",
												"src": "2087:50:23"
											}
										]
									},
									"functionSelector": "ca43b4fc",
									"id": 2676,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2653,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2652,
												"name": "onlyOwner",
												"nameLocations": [
													"1897:9:23"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2648,
												"src": "1897:9:23"
											},
											"nodeType": "ModifierInvocation",
											"src": "1897:9:23"
										}
									],
									"name": "executeSwap",
									"nameLocation": "1851:11:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "balanceOfETH",
												"nameLocation": "1871:12:23",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "1864:19:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2649,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1864:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:21:23"
									},
									"returnParameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "gainOfUSDC",
												"nameLocation": "1923:10:23",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "1916:17:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2654,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1916:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "1935:7:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:28:23"
									},
									"scope": 2677,
									"src": "1842:302:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2678,
							"src": "1085:1061:23",
							"usedErrors": [],
							"usedEvents": [
								2612
							]
						}
					],
					"src": "32:2114:23"
				},
				"id": 23
			},
			"https://github.com/Uniswap/v4-periphery/src/V4Router.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v4-periphery/src/V4Router.sol",
					"exportedSymbols": {
						"ActionConstants": [
							4148
						],
						"Actions": [
							4227
						],
						"BalanceDelta": [
							2000
						],
						"BaseActionsRouter": [
							3623
						],
						"BipsLibrary": [
							4262
						],
						"CalldataDecoder": [
							4600
						],
						"Currency": [
							2214
						],
						"DeltaResolver": [
							3928
						],
						"IPoolManager": [
							614
						],
						"IV4Router": [
							4122
						],
						"PathKey": [
							4621
						],
						"PoolKey": [
							2560
						],
						"SafeCast": [
							1304
						],
						"SwapParams": [
							2587
						],
						"TickMath": [
							1858
						],
						"V4Router": [
							3431
						]
					},
					"id": 3432,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2679,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:24"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
							"file": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
							"id": 2681,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 615,
							"src": "57:78:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2680,
										"name": "IPoolManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 614,
										"src": "65:12:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/BalanceDelta.sol",
							"file": "@uniswap/v4-core/src/types/BalanceDelta.sol",
							"id": 2683,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 2159,
							"src": "136:73:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2682,
										"name": "BalanceDelta",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2000,
										"src": "144:12:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolKey.sol",
							"file": "@uniswap/v4-core/src/types/PoolKey.sol",
							"id": 2685,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 2561,
							"src": "210:63:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2684,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2560,
										"src": "218:7:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/Currency.sol",
							"file": "@uniswap/v4-core/src/types/Currency.sol",
							"id": 2687,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 2509,
							"src": "274:65:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2686,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2214,
										"src": "282:8:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/libraries/TickMath.sol",
							"file": "@uniswap/v4-core/src/libraries/TickMath.sol",
							"id": 2689,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 1859,
							"src": "340:69:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2688,
										"name": "TickMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1858,
										"src": "348:8:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/libraries/SafeCast.sol",
							"file": "@uniswap/v4-core/src/libraries/SafeCast.sol",
							"id": 2691,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 1305,
							"src": "410:69:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2690,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1304,
										"src": "418:8:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
							"file": "./libraries/PathKey.sol",
							"id": 2693,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 4686,
							"src": "481:48:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2692,
										"name": "PathKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4621,
										"src": "489:7:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
							"file": "./libraries/CalldataDecoder.sol",
							"id": 2695,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 4601,
							"src": "530:64:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2694,
										"name": "CalldataDecoder",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4600,
										"src": "538:15:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
							"file": "./interfaces/IV4Router.sol",
							"id": 2697,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 4123,
							"src": "595:53:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2696,
										"name": "IV4Router",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4122,
										"src": "603:9:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
							"file": "./base/BaseActionsRouter.sol",
							"id": 2699,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 3624,
							"src": "649:63:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2698,
										"name": "BaseActionsRouter",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3623,
										"src": "657:17:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
							"file": "./base/DeltaResolver.sol",
							"id": 2701,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 3929,
							"src": "713:55:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2700,
										"name": "DeltaResolver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3928,
										"src": "721:13:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
							"file": "./libraries/Actions.sol",
							"id": 2703,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 4228,
							"src": "769:48:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2702,
										"name": "Actions",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4227,
										"src": "777:7:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
							"file": "./libraries/ActionConstants.sol",
							"id": 2705,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 4149,
							"src": "818:64:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2704,
										"name": "ActionConstants",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4148,
										"src": "826:15:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
							"file": "./libraries/BipsLibrary.sol",
							"id": 2707,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 4263,
							"src": "883:56:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2706,
										"name": "BipsLibrary",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4262,
										"src": "891:11:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolOperation.sol",
							"file": "@uniswap/v4-core/src/types/PoolOperation.sol",
							"id": 2709,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3432,
							"sourceUnit": 2588,
							"src": "940:72:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2708,
										"name": "SwapParams",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2587,
										"src": "948:10:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2711,
										"name": "IV4Router",
										"nameLocations": [
											"1394:9:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4122,
										"src": "1394:9:24"
									},
									"id": 2712,
									"nodeType": "InheritanceSpecifier",
									"src": "1394:9:24"
								},
								{
									"baseName": {
										"id": 2713,
										"name": "BaseActionsRouter",
										"nameLocations": [
											"1405:17:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3623,
										"src": "1405:17:24"
									},
									"id": 2714,
									"nodeType": "InheritanceSpecifier",
									"src": "1405:17:24"
								},
								{
									"baseName": {
										"id": 2715,
										"name": "DeltaResolver",
										"nameLocations": [
											"1424:13:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3928,
										"src": "1424:13:24"
									},
									"id": 2716,
									"nodeType": "InheritanceSpecifier",
									"src": "1424:13:24"
								}
							],
							"canonicalName": "V4Router",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2710,
								"nodeType": "StructuredDocumentation",
								"src": "1014:350:24",
								"text": "@title UniswapV4Router\n @notice Abstract contract that contains all internal logic needed for routing through Uniswap v4 pools\n @dev the entry point to executing actions in this contract is calling `BaseActionsRouter._executeActions`\n An inheriting contract should call _executeActions at the point that they wish actions to be executed"
							},
							"fullyImplemented": false,
							"id": 3431,
							"linearizedBaseContracts": [
								3431,
								3928,
								3623,
								4019,
								703,
								3972,
								4122,
								4032,
								4042
							],
							"name": "V4Router",
							"nameLocation": "1382:8:24",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2718,
									"libraryName": {
										"id": 2717,
										"name": "SafeCast",
										"nameLocations": [
											"1450:8:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1304,
										"src": "1450:8:24"
									},
									"nodeType": "UsingForDirective",
									"src": "1444:21:24"
								},
								{
									"global": false,
									"id": 2721,
									"libraryName": {
										"id": 2719,
										"name": "CalldataDecoder",
										"nameLocations": [
											"1476:15:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4600,
										"src": "1476:15:24"
									},
									"nodeType": "UsingForDirective",
									"src": "1470:32:24",
									"typeName": {
										"id": 2720,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1496:5:24",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"global": false,
									"id": 2724,
									"libraryName": {
										"id": 2722,
										"name": "BipsLibrary",
										"nameLocations": [
											"1513:11:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4262,
										"src": "1513:11:24"
									},
									"nodeType": "UsingForDirective",
									"src": "1507:30:24",
									"typeName": {
										"id": 2723,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1529:7:24",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 2733,
										"nodeType": "Block",
										"src": "1614:2:24",
										"statements": []
									},
									"id": 2734,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2730,
													"name": "_poolManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2727,
													"src": "1600:12:24",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												}
											],
											"id": 2731,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2729,
												"name": "BaseActionsRouter",
												"nameLocations": [
													"1582:17:24"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3623,
												"src": "1582:17:24"
											},
											"nodeType": "ModifierInvocation",
											"src": "1582:31:24"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "_poolManager",
												"nameLocation": "1568:12:24",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "1555:25:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolManager_$614",
													"typeString": "contract IPoolManager"
												},
												"typeName": {
													"id": 2726,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2725,
														"name": "IPoolManager",
														"nameLocations": [
															"1555:12:24"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "1555:12:24"
													},
													"referencedDeclaration": 614,
													"src": "1555:12:24",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:27:24"
									},
									"returnParameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1614:0:24"
									},
									"scope": 3431,
									"src": "1543:73:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										3566
									],
									"body": {
										"id": 2998,
										"nodeType": "Block",
										"src": "1702:2777:24",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2742,
														"name": "action",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2736,
														"src": "1799:6:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2743,
															"name": "Actions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4227,
															"src": "1808:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Actions_$4227_$",
																"typeString": "type(library Actions)"
															}
														},
														"id": 2744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1816:6:24",
														"memberName": "SETTLE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4187,
														"src": "1808:14:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1799:23:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2992,
													"nodeType": "Block",
													"src": "2810:1621:24",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2827,
																	"name": "action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2736,
																	"src": "2828:6:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2828,
																		"name": "Actions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4227,
																		"src": "2838:7:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Actions_$4227_$",
																			"typeString": "type(library Actions)"
																		}
																	},
																	"id": 2829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2846:10:24",
																	"memberName": "SETTLE_ALL",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4190,
																	"src": "2838:18:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2828:28:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2864,
																		"name": "action",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2736,
																		"src": "3198:6:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 2865,
																			"name": "Actions",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4227,
																			"src": "3208:7:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Actions_$4227_$",
																				"typeString": "type(library Actions)"
																			}
																		},
																		"id": 2866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3216:8:24",
																		"memberName": "TAKE_ALL",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4199,
																		"src": "3208:16:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3198:26:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2901,
																			"name": "action",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2736,
																			"src": "3567:6:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 2902,
																				"name": "Actions",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4227,
																				"src": "3577:7:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Actions_$4227_$",
																					"typeString": "type(library Actions)"
																				}
																			},
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3585:6:24",
																			"memberName": "SETTLE",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4187,
																			"src": "3577:14:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3567:24:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2929,
																				"name": "action",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2736,
																				"src": "3848:6:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"expression": {
																					"id": 2930,
																					"name": "Actions",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4227,
																					"src": "3858:7:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Actions_$4227_$",
																						"typeString": "type(library Actions)"
																					}
																				},
																				"id": 2931,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "3866:4:24",
																				"memberName": "TAKE",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4196,
																				"src": "3858:12:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3848:22:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2960,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2957,
																					"name": "action",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2736,
																					"src": "4129:6:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2958,
																						"name": "Actions",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4227,
																						"src": "4139:7:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_Actions_$4227_$",
																							"typeString": "type(library Actions)"
																						}
																					},
																					"id": 2959,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4147:12:24",
																					"memberName": "TAKE_PORTION",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 4202,
																					"src": "4139:20:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4129:30:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 2987,
																			"nodeType": "IfStatement",
																			"src": "4125:296:24",
																			"trueBody": {
																				"id": 2986,
																				"nodeType": "Block",
																				"src": "4161:260:24",
																				"statements": [
																					{
																						"assignments": [
																							2963,
																							2965,
																							2967
																						],
																						"declarations": [
																							{
																								"constant": false,
																								"id": 2963,
																								"mutability": "mutable",
																								"name": "currency",
																								"nameLocation": "4189:8:24",
																								"nodeType": "VariableDeclaration",
																								"scope": 2986,
																								"src": "4180:17:24",
																								"stateVariable": false,
																								"storageLocation": "default",
																								"typeDescriptions": {
																									"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																									"typeString": "Currency"
																								},
																								"typeName": {
																									"id": 2962,
																									"nodeType": "UserDefinedTypeName",
																									"pathNode": {
																										"id": 2961,
																										"name": "Currency",
																										"nameLocations": [
																											"4180:8:24"
																										],
																										"nodeType": "IdentifierPath",
																										"referencedDeclaration": 2214,
																										"src": "4180:8:24"
																									},
																									"referencedDeclaration": 2214,
																									"src": "4180:8:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																										"typeString": "Currency"
																									}
																								},
																								"visibility": "internal"
																							},
																							{
																								"constant": false,
																								"id": 2965,
																								"mutability": "mutable",
																								"name": "recipient",
																								"nameLocation": "4207:9:24",
																								"nodeType": "VariableDeclaration",
																								"scope": 2986,
																								"src": "4199:17:24",
																								"stateVariable": false,
																								"storageLocation": "default",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								"typeName": {
																									"id": 2964,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "4199:7:24",
																									"stateMutability": "nonpayable",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"visibility": "internal"
																							},
																							{
																								"constant": false,
																								"id": 2967,
																								"mutability": "mutable",
																								"name": "bips",
																								"nameLocation": "4226:4:24",
																								"nodeType": "VariableDeclaration",
																								"scope": 2986,
																								"src": "4218:12:24",
																								"stateVariable": false,
																								"storageLocation": "default",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"typeName": {
																									"id": 2966,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "4218:7:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"visibility": "internal"
																							}
																						],
																						"id": 2971,
																						"initialValue": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"expression": {
																									"id": 2968,
																									"name": "params",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2738,
																									"src": "4234:6:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes_calldata_ptr",
																										"typeString": "bytes calldata"
																									}
																								},
																								"id": 2969,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "4241:31:24",
																								"memberName": "decodeCurrencyAddressAndUint256",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 4546,
																								"src": "4234:38:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_userDefinedValueType$_Currency_$2214_$_t_address_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																									"typeString": "function (bytes calldata) pure returns (Currency,address,uint256)"
																								}
																							},
																							"id": 2970,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4234:40:24",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$_t_userDefinedValueType$_Currency_$2214_$_t_address_$_t_uint256_$",
																								"typeString": "tuple(Currency,address,uint256)"
																							}
																						},
																						"nodeType": "VariableDeclarationStatement",
																						"src": "4179:95:24"
																					},
																					{
																						"expression": {
																							"arguments": [
																								{
																									"id": 2973,
																									"name": "currency",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2963,
																									"src": "4298:8:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																										"typeString": "Currency"
																									}
																								},
																								{
																									"arguments": [
																										{
																											"id": 2975,
																											"name": "recipient",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2965,
																											"src": "4322:9:24",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"id": 2974,
																										"name": "_mapRecipient",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3604,
																										"src": "4308:13:24",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
																											"typeString": "function (address) view returns (address)"
																										}
																									},
																									"id": 2976,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "4308:24:24",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"arguments": [
																										{
																											"id": 2981,
																											"name": "bips",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2967,
																											"src": "4376:4:24",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"arguments": [
																												{
																													"id": 2978,
																													"name": "currency",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2963,
																													"src": "4349:8:24",
																													"typeDescriptions": {
																														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																														"typeString": "Currency"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																														"typeString": "Currency"
																													}
																												],
																												"id": 2977,
																												"name": "_getFullCredit",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 3813,
																												"src": "4334:14:24",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Currency_$2214_$returns$_t_uint256_$",
																													"typeString": "function (Currency) view returns (uint256)"
																												}
																											},
																											"id": 2979,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "4334:24:24",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2980,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "4359:16:24",
																										"memberName": "calculatePortion",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 4261,
																										"src": "4334:41:24",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2982,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "4334:47:24",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																										"typeString": "Currency"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 2972,
																								"name": "_take",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3682,
																								"src": "4292:5:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_userDefinedValueType$_Currency_$2214_$_t_address_$_t_uint256_$returns$__$",
																									"typeString": "function (Currency,address,uint256)"
																								}
																							},
																							"id": 2983,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4292:90:24",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 2984,
																						"nodeType": "ExpressionStatement",
																						"src": "4292:90:24"
																					},
																					{
																						"functionReturnParameters": 2741,
																						"id": 2985,
																						"nodeType": "Return",
																						"src": "4400:7:24"
																					}
																				]
																			}
																		},
																		"id": 2988,
																		"nodeType": "IfStatement",
																		"src": "3844:577:24",
																		"trueBody": {
																			"id": 2956,
																			"nodeType": "Block",
																			"src": "3872:247:24",
																			"statements": [
																				{
																					"assignments": [
																						2935,
																						2937,
																						2939
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 2935,
																							"mutability": "mutable",
																							"name": "currency",
																							"nameLocation": "3900:8:24",
																							"nodeType": "VariableDeclaration",
																							"scope": 2956,
																							"src": "3891:17:24",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																								"typeString": "Currency"
																							},
																							"typeName": {
																								"id": 2934,
																								"nodeType": "UserDefinedTypeName",
																								"pathNode": {
																									"id": 2933,
																									"name": "Currency",
																									"nameLocations": [
																										"3891:8:24"
																									],
																									"nodeType": "IdentifierPath",
																									"referencedDeclaration": 2214,
																									"src": "3891:8:24"
																								},
																								"referencedDeclaration": 2214,
																								"src": "3891:8:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																									"typeString": "Currency"
																								}
																							},
																							"visibility": "internal"
																						},
																						{
																							"constant": false,
																							"id": 2937,
																							"mutability": "mutable",
																							"name": "recipient",
																							"nameLocation": "3918:9:24",
																							"nodeType": "VariableDeclaration",
																							"scope": 2956,
																							"src": "3910:17:24",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							"typeName": {
																								"id": 2936,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3910:7:24",
																								"stateMutability": "nonpayable",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"visibility": "internal"
																						},
																						{
																							"constant": false,
																							"id": 2939,
																							"mutability": "mutable",
																							"name": "amount",
																							"nameLocation": "3937:6:24",
																							"nodeType": "VariableDeclaration",
																							"scope": 2956,
																							"src": "3929:14:24",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 2938,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "3929:7:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 2943,
																					"initialValue": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"id": 2940,
																								"name": "params",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2738,
																								"src": "3947:6:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"id": 2941,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3954:31:24",
																							"memberName": "decodeCurrencyAddressAndUint256",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 4546,
																							"src": "3947:38:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_userDefinedValueType$_Currency_$2214_$_t_address_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																								"typeString": "function (bytes calldata) pure returns (Currency,address,uint256)"
																							}
																						},
																						"id": 2942,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3947:40:24",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_userDefinedValueType$_Currency_$2214_$_t_address_$_t_uint256_$",
																							"typeString": "tuple(Currency,address,uint256)"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "3890:97:24"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 2945,
																								"name": "currency",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2935,
																								"src": "4011:8:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																									"typeString": "Currency"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"id": 2947,
																										"name": "recipient",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2937,
																										"src": "4035:9:24",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2946,
																									"name": "_mapRecipient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3604,
																									"src": "4021:13:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
																										"typeString": "function (address) view returns (address)"
																									}
																								},
																								"id": 2948,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4021:24:24",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"id": 2950,
																										"name": "amount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2939,
																										"src": "4062:6:24",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 2951,
																										"name": "currency",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2935,
																										"src": "4070:8:24",
																										"typeDescriptions": {
																											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																											"typeString": "Currency"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																											"typeString": "Currency"
																										}
																									],
																									"id": 2949,
																									"name": "_mapTakeAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3873,
																									"src": "4047:14:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_userDefinedValueType$_Currency_$2214_$returns$_t_uint256_$",
																										"typeString": "function (uint256,Currency) view returns (uint256)"
																									}
																								},
																								"id": 2952,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4047:32:24",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																									"typeString": "Currency"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2944,
																							"name": "_take",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3682,
																							"src": "4005:5:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_userDefinedValueType$_Currency_$2214_$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (Currency,address,uint256)"
																							}
																						},
																						"id": 2953,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4005:75:24",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2954,
																					"nodeType": "ExpressionStatement",
																					"src": "4005:75:24"
																				},
																				{
																					"functionReturnParameters": 2741,
																					"id": 2955,
																					"nodeType": "Return",
																					"src": "4098:7:24"
																				}
																			]
																		}
																	},
																	"id": 2989,
																	"nodeType": "IfStatement",
																	"src": "3563:858:24",
																	"trueBody": {
																		"id": 2928,
																		"nodeType": "Block",
																		"src": "3593:245:24",
																		"statements": [
																			{
																				"assignments": [
																					2907,
																					2909,
																					2911
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 2907,
																						"mutability": "mutable",
																						"name": "currency",
																						"nameLocation": "3621:8:24",
																						"nodeType": "VariableDeclaration",
																						"scope": 2928,
																						"src": "3612:17:24",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						},
																						"typeName": {
																							"id": 2906,
																							"nodeType": "UserDefinedTypeName",
																							"pathNode": {
																								"id": 2905,
																								"name": "Currency",
																								"nameLocations": [
																									"3612:8:24"
																								],
																								"nodeType": "IdentifierPath",
																								"referencedDeclaration": 2214,
																								"src": "3612:8:24"
																							},
																							"referencedDeclaration": 2214,
																							"src": "3612:8:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																								"typeString": "Currency"
																							}
																						},
																						"visibility": "internal"
																					},
																					{
																						"constant": false,
																						"id": 2909,
																						"mutability": "mutable",
																						"name": "amount",
																						"nameLocation": "3639:6:24",
																						"nodeType": "VariableDeclaration",
																						"scope": 2928,
																						"src": "3631:14:24",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 2908,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "3631:7:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					},
																					{
																						"constant": false,
																						"id": 2911,
																						"mutability": "mutable",
																						"name": "payerIsUser",
																						"nameLocation": "3652:11:24",
																						"nodeType": "VariableDeclaration",
																						"scope": 2928,
																						"src": "3647:16:24",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"typeName": {
																							"id": 2910,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3647:4:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 2915,
																				"initialValue": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 2912,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2738,
																							"src": "3667:6:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_calldata_ptr",
																								"typeString": "bytes calldata"
																							}
																						},
																						"id": 2913,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3674:28:24",
																						"memberName": "decodeCurrencyUint256AndBool",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 4584,
																						"src": "3667:35:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_userDefinedValueType$_Currency_$2214_$_t_uint256_$_t_bool_$attached_to$_t_bytes_calldata_ptr_$",
																							"typeString": "function (bytes calldata) pure returns (Currency,uint256,bool)"
																						}
																					},
																					"id": 2914,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3667:37:24",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$_t_userDefinedValueType$_Currency_$2214_$_t_uint256_$_t_bool_$",
																						"typeString": "tuple(Currency,uint256,bool)"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "3611:93:24"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 2917,
																							"name": "currency",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2907,
																							"src": "3730:8:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																								"typeString": "Currency"
																							}
																						},
																						{
																							"arguments": [
																								{
																									"id": 2919,
																									"name": "payerIsUser",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2911,
																									"src": "3750:11:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								],
																								"id": 2918,
																								"name": "_mapPayer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3622,
																								"src": "3740:9:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_address_$",
																									"typeString": "function (bool) view returns (address)"
																								}
																							},
																							"id": 2920,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3740:22:24",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"arguments": [
																								{
																									"id": 2922,
																									"name": "amount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2909,
																									"src": "3781:6:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 2923,
																									"name": "currency",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2907,
																									"src": "3789:8:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																										"typeString": "Currency"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																										"typeString": "Currency"
																									}
																								],
																								"id": 2921,
																								"name": "_mapSettleAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3848,
																								"src": "3764:16:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_userDefinedValueType$_Currency_$2214_$returns$_t_uint256_$",
																									"typeString": "function (uint256,Currency) view returns (uint256)"
																								}
																							},
																							"id": 2924,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3764:34:24",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																								"typeString": "Currency"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2916,
																						"name": "_settle",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3729,
																						"src": "3722:7:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_userDefinedValueType$_Currency_$2214_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (Currency,address,uint256)"
																						}
																					},
																					"id": 2925,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3722:77:24",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2926,
																				"nodeType": "ExpressionStatement",
																				"src": "3722:77:24"
																			},
																			{
																				"functionReturnParameters": 2741,
																				"id": 2927,
																				"nodeType": "Return",
																				"src": "3817:7:24"
																			}
																		]
																	}
																},
																"id": 2990,
																"nodeType": "IfStatement",
																"src": "3194:1227:24",
																"trueBody": {
																	"id": 2900,
																	"nodeType": "Block",
																	"src": "3226:331:24",
																	"statements": [
																		{
																			"assignments": [
																				2870,
																				2872
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 2870,
																					"mutability": "mutable",
																					"name": "currency",
																					"nameLocation": "3254:8:24",
																					"nodeType": "VariableDeclaration",
																					"scope": 2900,
																					"src": "3245:17:24",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																						"typeString": "Currency"
																					},
																					"typeName": {
																						"id": 2869,
																						"nodeType": "UserDefinedTypeName",
																						"pathNode": {
																							"id": 2868,
																							"name": "Currency",
																							"nameLocations": [
																								"3245:8:24"
																							],
																							"nodeType": "IdentifierPath",
																							"referencedDeclaration": 2214,
																							"src": "3245:8:24"
																						},
																						"referencedDeclaration": 2214,
																						"src": "3245:8:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						}
																					},
																					"visibility": "internal"
																				},
																				{
																					"constant": false,
																					"id": 2872,
																					"mutability": "mutable",
																					"name": "minAmount",
																					"nameLocation": "3272:9:24",
																					"nodeType": "VariableDeclaration",
																					"scope": 2900,
																					"src": "3264:17:24",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 2871,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "3264:7:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 2876,
																			"initialValue": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 2873,
																						"name": "params",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2738,
																						"src": "3285:6:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_calldata_ptr",
																							"typeString": "bytes calldata"
																						}
																					},
																					"id": 2874,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3292:24:24",
																					"memberName": "decodeCurrencyAndUint256",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 4559,
																					"src": "3285:31:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_userDefinedValueType$_Currency_$2214_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																						"typeString": "function (bytes calldata) pure returns (Currency,uint256)"
																					}
																				},
																				"id": 2875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3285:33:24",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_userDefinedValueType$_Currency_$2214_$_t_uint256_$",
																					"typeString": "tuple(Currency,uint256)"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "3244:74:24"
																		},
																		{
																			"assignments": [
																				2878
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 2878,
																					"mutability": "mutable",
																					"name": "amount",
																					"nameLocation": "3344:6:24",
																					"nodeType": "VariableDeclaration",
																					"scope": 2900,
																					"src": "3336:14:24",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 2877,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "3336:7:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 2882,
																			"initialValue": {
																				"arguments": [
																					{
																						"id": 2880,
																						"name": "currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2870,
																						"src": "3368:8:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						}
																					],
																					"id": 2879,
																					"name": "_getFullCredit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3813,
																					"src": "3353:14:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Currency_$2214_$returns$_t_uint256_$",
																						"typeString": "function (Currency) view returns (uint256)"
																					}
																				},
																				"id": 2881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3353:24:24",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "3336:41:24"
																		},
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2883,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2878,
																					"src": "3399:6:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2884,
																					"name": "minAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2872,
																					"src": "3408:9:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3399:18:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 2891,
																			"nodeType": "IfStatement",
																			"src": "3395:69:24",
																			"trueBody": {
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 2887,
																							"name": "minAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2872,
																							"src": "3446:9:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 2888,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2878,
																							"src": "3457:6:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2886,
																						"name": "V4TooLittleReceived",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4062,
																						"src": "3426:19:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																							"typeString": "function (uint256,uint256) pure returns (error)"
																						}
																					},
																					"id": 2889,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3426:38:24",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 2890,
																				"nodeType": "RevertStatement",
																				"src": "3419:45:24"
																			}
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 2893,
																						"name": "currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2870,
																						"src": "3488:8:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						}
																					},
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2894,
																							"name": "msgSender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3572,
																							"src": "3498:9:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 2895,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3498:11:24",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 2896,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2878,
																						"src": "3511:6:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2892,
																					"name": "_take",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3682,
																					"src": "3482:5:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_nonpayable$_t_userDefinedValueType$_Currency_$2214_$_t_address_$_t_uint256_$returns$__$",
																						"typeString": "function (Currency,address,uint256)"
																					}
																				},
																				"id": 2897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3482:36:24",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2898,
																			"nodeType": "ExpressionStatement",
																			"src": "3482:36:24"
																		},
																		{
																			"functionReturnParameters": 2741,
																			"id": 2899,
																			"nodeType": "Return",
																			"src": "3536:7:24"
																		}
																	]
																}
															},
															"id": 2991,
															"nodeType": "IfStatement",
															"src": "2824:1597:24",
															"trueBody": {
																"id": 2863,
																"nodeType": "Block",
																"src": "2858:330:24",
																"statements": [
																	{
																		"assignments": [
																			2833,
																			2835
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2833,
																				"mutability": "mutable",
																				"name": "currency",
																				"nameLocation": "2886:8:24",
																				"nodeType": "VariableDeclaration",
																				"scope": 2863,
																				"src": "2877:17:24",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																					"typeString": "Currency"
																				},
																				"typeName": {
																					"id": 2832,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 2831,
																						"name": "Currency",
																						"nameLocations": [
																							"2877:8:24"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 2214,
																						"src": "2877:8:24"
																					},
																					"referencedDeclaration": 2214,
																					"src": "2877:8:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																						"typeString": "Currency"
																					}
																				},
																				"visibility": "internal"
																			},
																			{
																				"constant": false,
																				"id": 2835,
																				"mutability": "mutable",
																				"name": "maxAmount",
																				"nameLocation": "2904:9:24",
																				"nodeType": "VariableDeclaration",
																				"scope": 2863,
																				"src": "2896:17:24",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2834,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2896:7:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2839,
																		"initialValue": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2836,
																					"name": "params",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2738,
																					"src": "2917:6:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_calldata_ptr",
																						"typeString": "bytes calldata"
																					}
																				},
																				"id": 2837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2924:24:24",
																				"memberName": "decodeCurrencyAndUint256",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4559,
																				"src": "2917:31:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_userDefinedValueType$_Currency_$2214_$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$",
																					"typeString": "function (bytes calldata) pure returns (Currency,uint256)"
																				}
																			},
																			"id": 2838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2917:33:24",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_userDefinedValueType$_Currency_$2214_$_t_uint256_$",
																				"typeString": "tuple(Currency,uint256)"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2876:74:24"
																	},
																	{
																		"assignments": [
																			2841
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2841,
																				"mutability": "mutable",
																				"name": "amount",
																				"nameLocation": "2976:6:24",
																				"nodeType": "VariableDeclaration",
																				"scope": 2863,
																				"src": "2968:14:24",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2840,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2968:7:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2845,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2843,
																					"name": "currency",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2833,
																					"src": "2998:8:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																						"typeString": "Currency"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																						"typeString": "Currency"
																					}
																				],
																				"id": 2842,
																				"name": "_getFullDebt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3777,
																				"src": "2985:12:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Currency_$2214_$returns$_t_uint256_$",
																					"typeString": "function (Currency) view returns (uint256)"
																				}
																			},
																			"id": 2844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2985:22:24",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2968:39:24"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2846,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2841,
																				"src": "3029:6:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 2847,
																				"name": "maxAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2835,
																				"src": "3038:9:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3029:18:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2854,
																		"nodeType": "IfStatement",
																		"src": "3025:68:24",
																		"trueBody": {
																			"errorCall": {
																				"arguments": [
																					{
																						"id": 2850,
																						"name": "maxAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2835,
																						"src": "3075:9:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 2851,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2841,
																						"src": "3086:6:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2849,
																					"name": "V4TooMuchRequested",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4069,
																					"src": "3056:18:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																						"typeString": "function (uint256,uint256) pure returns (error)"
																					}
																				},
																				"id": 2852,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3056:37:24",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_error",
																					"typeString": "error"
																				}
																			},
																			"id": 2853,
																			"nodeType": "RevertStatement",
																			"src": "3049:44:24"
																		}
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2856,
																					"name": "currency",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2833,
																					"src": "3119:8:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																						"typeString": "Currency"
																					}
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2857,
																						"name": "msgSender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3572,
																						"src": "3129:9:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 2858,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3129:11:24",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2859,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2841,
																					"src": "3142:6:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																						"typeString": "Currency"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2855,
																				"name": "_settle",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3729,
																				"src": "3111:7:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_userDefinedValueType$_Currency_$2214_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (Currency,address,uint256)"
																				}
																			},
																			"id": 2860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3111:38:24",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2861,
																		"nodeType": "ExpressionStatement",
																		"src": "3111:38:24"
																	},
																	{
																		"functionReturnParameters": 2741,
																		"id": 2862,
																		"nodeType": "Return",
																		"src": "3167:7:24"
																	}
																]
															}
														}
													]
												},
												"id": 2993,
												"nodeType": "IfStatement",
												"src": "1795:2636:24",
												"trueBody": {
													"id": 2826,
													"nodeType": "Block",
													"src": "1824:980:24",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2746,
																	"name": "action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2736,
																	"src": "1842:6:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2747,
																		"name": "Actions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4227,
																		"src": "1852:7:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Actions_$4227_$",
																			"typeString": "type(library Actions)"
																		}
																	},
																	"id": 2748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1860:13:24",
																	"memberName": "SWAP_EXACT_IN",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4175,
																	"src": "1852:21:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1842:31:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2765,
																		"name": "action",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2736,
																		"src": "2068:6:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 2766,
																			"name": "Actions",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4227,
																			"src": "2078:7:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Actions_$4227_$",
																				"typeString": "type(library Actions)"
																			}
																		},
																		"id": 2767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2086:20:24",
																		"memberName": "SWAP_EXACT_IN_SINGLE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4172,
																		"src": "2078:28:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2068:38:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2784,
																			"name": "action",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2736,
																			"src": "2319:6:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 2785,
																				"name": "Actions",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4227,
																				"src": "2329:7:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Actions_$4227_$",
																					"typeString": "type(library Actions)"
																				}
																			},
																			"id": 2786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2337:14:24",
																			"memberName": "SWAP_EXACT_OUT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4181,
																			"src": "2329:22:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2319:32:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2803,
																				"name": "action",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2736,
																				"src": "2549:6:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"expression": {
																					"id": 2804,
																					"name": "Actions",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4227,
																					"src": "2559:7:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Actions_$4227_$",
																						"typeString": "type(library Actions)"
																					}
																				},
																				"id": 2805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2567:21:24",
																				"memberName": "SWAP_EXACT_OUT_SINGLE",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4178,
																				"src": "2559:29:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2549:39:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2822,
																		"nodeType": "IfStatement",
																		"src": "2545:249:24",
																		"trueBody": {
																			"id": 2821,
																			"nodeType": "Block",
																			"src": "2590:204:24",
																			"statements": [
																				{
																					"assignments": [
																						2811
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 2811,
																							"mutability": "mutable",
																							"name": "swapParams",
																							"nameLocation": "2651:10:24",
																							"nodeType": "VariableDeclaration",
																							"scope": 2821,
																							"src": "2608:53:24",
																							"stateVariable": false,
																							"storageLocation": "calldata",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
																								"typeString": "struct IV4Router.ExactOutputSingleParams"
																							},
																							"typeName": {
																								"id": 2810,
																								"nodeType": "UserDefinedTypeName",
																								"pathNode": {
																									"id": 2809,
																									"name": "IV4Router.ExactOutputSingleParams",
																									"nameLocations": [
																										"2608:9:24",
																										"2618:23:24"
																									],
																									"nodeType": "IdentifierPath",
																									"referencedDeclaration": 4108,
																									"src": "2608:33:24"
																								},
																								"referencedDeclaration": 4108,
																								"src": "2608:33:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_storage_ptr",
																									"typeString": "struct IV4Router.ExactOutputSingleParams"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 2815,
																					"initialValue": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"id": 2812,
																								"name": "params",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2738,
																								"src": "2664:6:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							},
																							"id": 2813,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2671:30:24",
																							"memberName": "decodeSwapExactOutSingleParams",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 4477,
																							"src": "2664:37:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_struct$_ExactOutputSingleParams_$4108_calldata_ptr_$attached_to$_t_bytes_calldata_ptr_$",
																								"typeString": "function (bytes calldata) pure returns (struct IV4Router.ExactOutputSingleParams calldata)"
																							}
																						},
																						"id": 2814,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2664:39:24",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
																							"typeString": "struct IV4Router.ExactOutputSingleParams calldata"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "2608:95:24"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 2817,
																								"name": "swapParams",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2811,
																								"src": "2744:10:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
																									"typeString": "struct IV4Router.ExactOutputSingleParams calldata"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
																									"typeString": "struct IV4Router.ExactOutputSingleParams calldata"
																								}
																							],
																							"id": 2816,
																							"name": "_swapExactOutputSingle",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3251,
																							"src": "2721:22:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ExactOutputSingleParams_$4108_calldata_ptr_$returns$__$",
																								"typeString": "function (struct IV4Router.ExactOutputSingleParams calldata)"
																							}
																						},
																						"id": 2818,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2721:34:24",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2819,
																					"nodeType": "ExpressionStatement",
																					"src": "2721:34:24"
																				},
																				{
																					"functionReturnParameters": 2741,
																					"id": 2820,
																					"nodeType": "Return",
																					"src": "2773:7:24"
																				}
																			]
																		}
																	},
																	"id": 2823,
																	"nodeType": "IfStatement",
																	"src": "2315:479:24",
																	"trueBody": {
																		"id": 2802,
																		"nodeType": "Block",
																		"src": "2353:186:24",
																		"statements": [
																			{
																				"assignments": [
																					2792
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 2792,
																						"mutability": "mutable",
																						"name": "swapParams",
																						"nameLocation": "2408:10:24",
																						"nodeType": "VariableDeclaration",
																						"scope": 2802,
																						"src": "2371:47:24",
																						"stateVariable": false,
																						"storageLocation": "calldata",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ExactOutputParams_$4121_calldata_ptr",
																							"typeString": "struct IV4Router.ExactOutputParams"
																						},
																						"typeName": {
																							"id": 2791,
																							"nodeType": "UserDefinedTypeName",
																							"pathNode": {
																								"id": 2790,
																								"name": "IV4Router.ExactOutputParams",
																								"nameLocations": [
																									"2371:9:24",
																									"2381:17:24"
																								],
																								"nodeType": "IdentifierPath",
																								"referencedDeclaration": 4121,
																								"src": "2371:27:24"
																							},
																							"referencedDeclaration": 4121,
																							"src": "2371:27:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ExactOutputParams_$4121_storage_ptr",
																								"typeString": "struct IV4Router.ExactOutputParams"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 2796,
																				"initialValue": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 2793,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2738,
																							"src": "2421:6:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_calldata_ptr",
																								"typeString": "bytes calldata"
																							}
																						},
																						"id": 2794,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2428:24:24",
																						"memberName": "decodeSwapExactOutParams",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 4466,
																						"src": "2421:31:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_struct$_ExactOutputParams_$4121_calldata_ptr_$attached_to$_t_bytes_calldata_ptr_$",
																							"typeString": "function (bytes calldata) pure returns (struct IV4Router.ExactOutputParams calldata)"
																						}
																					},
																					"id": 2795,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2421:33:24",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ExactOutputParams_$4121_calldata_ptr",
																						"typeString": "struct IV4Router.ExactOutputParams calldata"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "2371:83:24"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 2798,
																							"name": "swapParams",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2792,
																							"src": "2489:10:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ExactOutputParams_$4121_calldata_ptr",
																								"typeString": "struct IV4Router.ExactOutputParams calldata"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_struct$_ExactOutputParams_$4121_calldata_ptr",
																								"typeString": "struct IV4Router.ExactOutputParams calldata"
																							}
																						],
																						"id": 2797,
																						"name": "_swapExactOutput",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3375,
																						"src": "2472:16:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ExactOutputParams_$4121_calldata_ptr_$returns$__$",
																							"typeString": "function (struct IV4Router.ExactOutputParams calldata)"
																						}
																					},
																					"id": 2799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2472:28:24",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2800,
																				"nodeType": "ExpressionStatement",
																				"src": "2472:28:24"
																			},
																			{
																				"functionReturnParameters": 2741,
																				"id": 2801,
																				"nodeType": "Return",
																				"src": "2518:7:24"
																			}
																		]
																	}
																},
																"id": 2824,
																"nodeType": "IfStatement",
																"src": "2064:730:24",
																"trueBody": {
																	"id": 2783,
																	"nodeType": "Block",
																	"src": "2108:201:24",
																	"statements": [
																		{
																			"assignments": [
																				2773
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 2773,
																					"mutability": "mutable",
																					"name": "swapParams",
																					"nameLocation": "2168:10:24",
																					"nodeType": "VariableDeclaration",
																					"scope": 2783,
																					"src": "2126:52:24",
																					"stateVariable": false,
																					"storageLocation": "calldata",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
																						"typeString": "struct IV4Router.ExactInputSingleParams"
																					},
																					"typeName": {
																						"id": 2772,
																						"nodeType": "UserDefinedTypeName",
																						"pathNode": {
																							"id": 2771,
																							"name": "IV4Router.ExactInputSingleParams",
																							"nameLocations": [
																								"2126:9:24",
																								"2136:22:24"
																							],
																							"nodeType": "IdentifierPath",
																							"referencedDeclaration": 4082,
																							"src": "2126:32:24"
																						},
																						"referencedDeclaration": 4082,
																						"src": "2126:32:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_storage_ptr",
																							"typeString": "struct IV4Router.ExactInputSingleParams"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 2777,
																			"initialValue": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 2774,
																						"name": "params",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2738,
																						"src": "2181:6:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_calldata_ptr",
																							"typeString": "bytes calldata"
																						}
																					},
																					"id": 2775,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2188:29:24",
																					"memberName": "decodeSwapExactInSingleParams",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 4455,
																					"src": "2181:36:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_struct$_ExactInputSingleParams_$4082_calldata_ptr_$attached_to$_t_bytes_calldata_ptr_$",
																						"typeString": "function (bytes calldata) pure returns (struct IV4Router.ExactInputSingleParams calldata)"
																					}
																				},
																				"id": 2776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2181:38:24",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
																					"typeString": "struct IV4Router.ExactInputSingleParams calldata"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "2126:93:24"
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 2779,
																						"name": "swapParams",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2773,
																						"src": "2259:10:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
																							"typeString": "struct IV4Router.ExactInputSingleParams calldata"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
																							"typeString": "struct IV4Router.ExactInputSingleParams calldata"
																						}
																					],
																					"id": 2778,
																					"name": "_swapExactInputSingle",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3065,
																					"src": "2237:21:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ExactInputSingleParams_$4082_calldata_ptr_$returns$__$",
																						"typeString": "function (struct IV4Router.ExactInputSingleParams calldata)"
																					}
																				},
																				"id": 2780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2237:33:24",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2781,
																			"nodeType": "ExpressionStatement",
																			"src": "2237:33:24"
																		},
																		{
																			"functionReturnParameters": 2741,
																			"id": 2782,
																			"nodeType": "Return",
																			"src": "2288:7:24"
																		}
																	]
																}
															},
															"id": 2825,
															"nodeType": "IfStatement",
															"src": "1838:956:24",
															"trueBody": {
																"id": 2764,
																"nodeType": "Block",
																"src": "1875:183:24",
																"statements": [
																	{
																		"assignments": [
																			2754
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2754,
																				"mutability": "mutable",
																				"name": "swapParams",
																				"nameLocation": "1929:10:24",
																				"nodeType": "VariableDeclaration",
																				"scope": 2764,
																				"src": "1893:46:24",
																				"stateVariable": false,
																				"storageLocation": "calldata",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ExactInputParams_$4095_calldata_ptr",
																					"typeString": "struct IV4Router.ExactInputParams"
																				},
																				"typeName": {
																					"id": 2753,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 2752,
																						"name": "IV4Router.ExactInputParams",
																						"nameLocations": [
																							"1893:9:24",
																							"1903:16:24"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 4095,
																						"src": "1893:26:24"
																					},
																					"referencedDeclaration": 4095,
																					"src": "1893:26:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ExactInputParams_$4095_storage_ptr",
																						"typeString": "struct IV4Router.ExactInputParams"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2758,
																		"initialValue": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2755,
																					"name": "params",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2738,
																					"src": "1942:6:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_calldata_ptr",
																						"typeString": "bytes calldata"
																					}
																				},
																				"id": 2756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1949:23:24",
																				"memberName": "decodeSwapExactInParams",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4444,
																				"src": "1942:30:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_struct$_ExactInputParams_$4095_calldata_ptr_$attached_to$_t_bytes_calldata_ptr_$",
																					"typeString": "function (bytes calldata) pure returns (struct IV4Router.ExactInputParams calldata)"
																				}
																			},
																			"id": 2757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1942:32:24",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ExactInputParams_$4095_calldata_ptr",
																				"typeString": "struct IV4Router.ExactInputParams calldata"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1893:81:24"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2760,
																					"name": "swapParams",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2754,
																					"src": "2008:10:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ExactInputParams_$4095_calldata_ptr",
																						"typeString": "struct IV4Router.ExactInputParams calldata"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_ExactInputParams_$4095_calldata_ptr",
																						"typeString": "struct IV4Router.ExactInputParams calldata"
																					}
																				],
																				"id": 2759,
																				"name": "_swapExactInput",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3178,
																				"src": "1992:15:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ExactInputParams_$4095_calldata_ptr_$returns$__$",
																					"typeString": "function (struct IV4Router.ExactInputParams calldata)"
																				}
																			},
																			"id": 2761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1992:27:24",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2762,
																		"nodeType": "ExpressionStatement",
																		"src": "1992:27:24"
																	},
																	{
																		"functionReturnParameters": 2741,
																		"id": 2763,
																		"nodeType": "Return",
																		"src": "2037:7:24"
																	}
																]
															}
														}
													]
												}
											},
											{
												"errorCall": {
													"arguments": [
														{
															"id": 2995,
															"name": "action",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2736,
															"src": "4465:6:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2994,
														"name": "UnsupportedAction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3459,
														"src": "4447:17:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
															"typeString": "function (uint256) pure returns (error)"
														}
													},
													"id": 2996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4447:25:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 2997,
												"nodeType": "RevertStatement",
												"src": "4440:32:24"
											}
										]
									},
									"id": 2999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_handleAction",
									"nameLocation": "1631:13:24",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2740,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1693:8:24"
									},
									"parameters": {
										"id": 2739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "action",
												"nameLocation": "1653:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "1645:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1676:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "1661:21:24",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2737,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1661:5:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1644:39:24"
									},
									"returnParameters": {
										"id": 2741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1702:0:24"
									},
									"scope": 3431,
									"src": "1622:2857:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3064,
										"nodeType": "Block",
										"src": "4574:507:24",
										"statements": [
											{
												"assignments": [
													3006
												],
												"declarations": [
													{
														"constant": false,
														"id": 3006,
														"mutability": "mutable",
														"name": "amountIn",
														"nameLocation": "4592:8:24",
														"nodeType": "VariableDeclaration",
														"scope": 3064,
														"src": "4584:16:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 3005,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "4584:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3009,
												"initialValue": {
													"expression": {
														"id": 3007,
														"name": "params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3002,
														"src": "4603:6:24",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
															"typeString": "struct IV4Router.ExactInputSingleParams calldata"
														}
													},
													"id": 3008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4610:8:24",
													"memberName": "amountIn",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4077,
													"src": "4603:15:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4584:34:24"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 3013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3010,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3006,
														"src": "4632:8:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3011,
															"name": "ActionConstants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4148,
															"src": "4644:15:24",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ActionConstants_$4148_$",
																"typeString": "type(library ActionConstants)"
															}
														},
														"id": 3012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4660:10:24",
														"memberName": "OPEN_DELTA",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4129,
														"src": "4644:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "4632:38:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3031,
												"nodeType": "IfStatement",
												"src": "4628:195:24",
												"trueBody": {
													"id": 3030,
													"nodeType": "Block",
													"src": "4672:151:24",
													"statements": [
														{
															"expression": {
																"id": 3028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3014,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3006,
																	"src": "4686:8:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"condition": {
																						"expression": {
																							"id": 3016,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3002,
																							"src": "4728:6:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
																								"typeString": "struct IV4Router.ExactInputSingleParams calldata"
																							}
																						},
																						"id": 3017,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4735:10:24",
																						"memberName": "zeroForOne",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 4075,
																						"src": "4728:17:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseExpression": {
																						"expression": {
																							"expression": {
																								"id": 3021,
																								"name": "params",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3002,
																								"src": "4775:6:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
																									"typeString": "struct IV4Router.ExactInputSingleParams calldata"
																								}
																							},
																							"id": 3022,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4782:7:24",
																							"memberName": "poolKey",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 4073,
																							"src": "4775:14:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
																								"typeString": "struct PoolKey calldata"
																							}
																						},
																						"id": 3023,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4790:9:24",
																						"memberName": "currency1",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2549,
																						"src": "4775:24:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						}
																					},
																					"id": 3024,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "Conditional",
																					"src": "4728:71:24",
																					"trueExpression": {
																						"expression": {
																							"expression": {
																								"id": 3018,
																								"name": "params",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3002,
																								"src": "4748:6:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
																									"typeString": "struct IV4Router.ExactInputSingleParams calldata"
																								}
																							},
																							"id": 3019,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4755:7:24",
																							"memberName": "poolKey",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 4073,
																							"src": "4748:14:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
																								"typeString": "struct PoolKey calldata"
																							}
																						},
																						"id": 3020,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4763:9:24",
																						"memberName": "currency0",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2545,
																						"src": "4748:24:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																						"typeString": "Currency"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																						"typeString": "Currency"
																					}
																				],
																				"id": 3015,
																				"name": "_getFullCredit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3813,
																				"src": "4713:14:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Currency_$2214_$returns$_t_uint256_$",
																					"typeString": "function (Currency) view returns (uint256)"
																				}
																			},
																			"id": 3025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4713:87:24",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4801:9:24",
																		"memberName": "toUint128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1192,
																		"src": "4713:97:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint128)"
																		}
																	},
																	"id": 3027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4713:99:24",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "4686:126:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3029,
															"nodeType": "ExpressionStatement",
															"src": "4686:126:24"
														}
													]
												}
											},
											{
												"assignments": [
													3033
												],
												"declarations": [
													{
														"constant": false,
														"id": 3033,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "4840:9:24",
														"nodeType": "VariableDeclaration",
														"scope": 3064,
														"src": "4832:17:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 3032,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "4832:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3052,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3035,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3002,
																		"src": "4870:6:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
																			"typeString": "struct IV4Router.ExactInputSingleParams calldata"
																		}
																	},
																	"id": 3036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4877:7:24",
																	"memberName": "poolKey",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4073,
																	"src": "4870:14:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
																		"typeString": "struct PoolKey calldata"
																	}
																},
																{
																	"expression": {
																		"id": 3037,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3002,
																		"src": "4886:6:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
																			"typeString": "struct IV4Router.ExactInputSingleParams calldata"
																		}
																	},
																	"id": 3038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4893:10:24",
																	"memberName": "zeroForOne",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4075,
																	"src": "4886:17:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 3046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "4905:26:24",
																	"subExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 3043,
																						"name": "amountIn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3006,
																						"src": "4921:8:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					],
																					"id": 3042,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4913:7:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3041,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "4913:7:24",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4913:17:24",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 3040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4906:6:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 3039,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "4906:6:24",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4906:25:24",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"expression": {
																		"id": 3047,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3002,
																		"src": "4933:6:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
																			"typeString": "struct IV4Router.ExactInputSingleParams calldata"
																		}
																	},
																	"id": 3048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4940:8:24",
																	"memberName": "hookData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4081,
																	"src": "4933:15:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
																		"typeString": "struct PoolKey calldata"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 3034,
																"name": "_swap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3430,
																"src": "4864:5:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PoolKey_$2560_memory_ptr_$_t_bool_$_t_int256_$_t_bytes_calldata_ptr_$returns$_t_int128_$",
																	"typeString": "function (struct PoolKey memory,bool,int256,bytes calldata) returns (int128)"
																}
															},
															"id": 3049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4864:85:24",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"id": 3050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4950:9:24",
														"memberName": "toUint128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1219,
														"src": "4864:95:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int128_$returns$_t_uint128_$attached_to$_t_int128_$",
															"typeString": "function (int128) pure returns (uint128)"
														}
													},
													"id": 3051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4864:97:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4832:129:24"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3053,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3033,
														"src": "4975:9:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3054,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3002,
															"src": "4987:6:24",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
																"typeString": "struct IV4Router.ExactInputSingleParams calldata"
															}
														},
														"id": 3055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4994:16:24",
														"memberName": "amountOutMinimum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4079,
														"src": "4987:23:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "4975:35:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3063,
												"nodeType": "IfStatement",
												"src": "4971:103:24",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 3058,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3002,
																	"src": "5039:6:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
																		"typeString": "struct IV4Router.ExactInputSingleParams calldata"
																	}
																},
																"id": 3059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5046:16:24",
																"memberName": "amountOutMinimum",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4079,
																"src": "5039:23:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 3060,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3033,
																"src": "5064:9:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 3057,
															"name": "V4TooLittleReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4062,
															"src": "5019:19:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256,uint256) pure returns (error)"
															}
														},
														"id": 3061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5019:55:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 3062,
													"nodeType": "RevertStatement",
													"src": "5012:62:24"
												}
											}
										]
									},
									"id": 3065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_swapExactInputSingle",
									"nameLocation": "4494:21:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "4558:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 3065,
												"src": "4516:48:24",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
													"typeString": "struct IV4Router.ExactInputSingleParams"
												},
												"typeName": {
													"id": 3001,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3000,
														"name": "IV4Router.ExactInputSingleParams",
														"nameLocations": [
															"4516:9:24",
															"4526:22:24"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4082,
														"src": "4516:32:24"
													},
													"referencedDeclaration": 4082,
													"src": "4516:32:24",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_storage_ptr",
														"typeString": "struct IV4Router.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:50:24"
									},
									"returnParameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4574:0:24"
									},
									"scope": 3431,
									"src": "4485:596:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3177,
										"nodeType": "Block",
										"src": "5164:1066:24",
										"statements": [
											{
												"id": 3176,
												"nodeType": "UncheckedBlock",
												"src": "5174:1050:24",
												"statements": [
													{
														"assignments": [
															3072
														],
														"declarations": [
															{
																"constant": false,
																"id": 3072,
																"mutability": "mutable",
																"name": "pathLength",
																"nameLocation": "5245:10:24",
																"nodeType": "VariableDeclaration",
																"scope": 3176,
																"src": "5237:18:24",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3071,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5237:7:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3076,
														"initialValue": {
															"expression": {
																"expression": {
																	"id": 3073,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3068,
																	"src": "5258:6:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ExactInputParams_$4095_calldata_ptr",
																		"typeString": "struct IV4Router.ExactInputParams calldata"
																	}
																},
																"id": 3074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5265:4:24",
																"memberName": "path",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4090,
																"src": "5258:11:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PathKey_$4621_calldata_ptr_$dyn_calldata_ptr",
																	"typeString": "struct PathKey calldata[] calldata"
																}
															},
															"id": 3075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5270:6:24",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5258:18:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5237:39:24"
													},
													{
														"assignments": [
															3078
														],
														"declarations": [
															{
																"constant": false,
																"id": 3078,
																"mutability": "mutable",
																"name": "amountOut",
																"nameLocation": "5298:9:24",
																"nodeType": "VariableDeclaration",
																"scope": 3176,
																"src": "5290:17:24",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"typeName": {
																	"id": 3077,
																	"name": "uint128",
																	"nodeType": "ElementaryTypeName",
																	"src": "5290:7:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3079,
														"nodeType": "VariableDeclarationStatement",
														"src": "5290:17:24"
													},
													{
														"assignments": [
															3082
														],
														"declarations": [
															{
																"constant": false,
																"id": 3082,
																"mutability": "mutable",
																"name": "currencyIn",
																"nameLocation": "5330:10:24",
																"nodeType": "VariableDeclaration",
																"scope": 3176,
																"src": "5321:19:24",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																},
																"typeName": {
																	"id": 3081,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 3080,
																		"name": "Currency",
																		"nameLocations": [
																			"5321:8:24"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2214,
																		"src": "5321:8:24"
																	},
																	"referencedDeclaration": 2214,
																	"src": "5321:8:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																		"typeString": "Currency"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3085,
														"initialValue": {
															"expression": {
																"id": 3083,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3068,
																"src": "5343:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputParams_$4095_calldata_ptr",
																	"typeString": "struct IV4Router.ExactInputParams calldata"
																}
															},
															"id": 3084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5350:10:24",
															"memberName": "currencyIn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4086,
															"src": "5343:17:24",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5321:39:24"
													},
													{
														"assignments": [
															3087
														],
														"declarations": [
															{
																"constant": false,
																"id": 3087,
																"mutability": "mutable",
																"name": "amountIn",
																"nameLocation": "5382:8:24",
																"nodeType": "VariableDeclaration",
																"scope": 3176,
																"src": "5374:16:24",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"typeName": {
																	"id": 3086,
																	"name": "uint128",
																	"nodeType": "ElementaryTypeName",
																	"src": "5374:7:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3090,
														"initialValue": {
															"expression": {
																"id": 3088,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3068,
																"src": "5393:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputParams_$4095_calldata_ptr",
																	"typeString": "struct IV4Router.ExactInputParams calldata"
																}
															},
															"id": 3089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5400:8:24",
															"memberName": "amountIn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4092,
															"src": "5393:15:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5374:34:24"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 3094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3091,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3087,
																"src": "5426:8:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3092,
																	"name": "ActionConstants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4148,
																	"src": "5438:15:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ActionConstants_$4148_$",
																		"typeString": "type(library ActionConstants)"
																	}
																},
																"id": 3093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5454:10:24",
																"memberName": "OPEN_DELTA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4129,
																"src": "5438:26:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "5426:38:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3103,
														"nodeType": "IfStatement",
														"src": "5422:93:24",
														"trueBody": {
															"expression": {
																"id": 3101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3095,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3087,
																	"src": "5466:8:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 3097,
																					"name": "currencyIn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3082,
																					"src": "5492:10:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																						"typeString": "Currency"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																						"typeString": "Currency"
																					}
																				],
																				"id": 3096,
																				"name": "_getFullCredit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3813,
																				"src": "5477:14:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Currency_$2214_$returns$_t_uint256_$",
																					"typeString": "function (Currency) view returns (uint256)"
																				}
																			},
																			"id": 3098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5477:26:24",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5504:9:24",
																		"memberName": "toUint128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1192,
																		"src": "5477:36:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint128)"
																		}
																	},
																	"id": 3100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5477:38:24",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "5466:49:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3102,
															"nodeType": "ExpressionStatement",
															"src": "5466:49:24"
														}
													},
													{
														"assignments": [
															3106
														],
														"declarations": [
															{
																"constant": false,
																"id": 3106,
																"mutability": "mutable",
																"name": "pathKey",
																"nameLocation": "5546:7:24",
																"nodeType": "VariableDeclaration",
																"scope": 3176,
																"src": "5529:24:24",
																"stateVariable": false,
																"storageLocation": "calldata",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																	"typeString": "struct PathKey"
																},
																"typeName": {
																	"id": 3105,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 3104,
																		"name": "PathKey",
																		"nameLocations": [
																			"5529:7:24"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 4621,
																		"src": "5529:7:24"
																	},
																	"referencedDeclaration": 4621,
																	"src": "5529:7:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PathKey_$4621_storage_ptr",
																		"typeString": "struct PathKey"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3107,
														"nodeType": "VariableDeclarationStatement",
														"src": "5529:24:24"
													},
													{
														"body": {
															"id": 3163,
															"nodeType": "Block",
															"src": "5609:487:24",
															"statements": [
																{
																	"expression": {
																		"id": 3123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3118,
																			"name": "pathKey",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3106,
																			"src": "5627:7:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																				"typeString": "struct PathKey calldata"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 3119,
																					"name": "params",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3068,
																					"src": "5637:6:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ExactInputParams_$4095_calldata_ptr",
																						"typeString": "struct IV4Router.ExactInputParams calldata"
																					}
																				},
																				"id": 3120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5644:4:24",
																				"memberName": "path",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4090,
																				"src": "5637:11:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PathKey_$4621_calldata_ptr_$dyn_calldata_ptr",
																					"typeString": "struct PathKey calldata[] calldata"
																				}
																			},
																			"id": 3122,
																			"indexExpression": {
																				"id": 3121,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3109,
																				"src": "5649:1:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5637:14:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																				"typeString": "struct PathKey calldata"
																			}
																		},
																		"src": "5627:24:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																			"typeString": "struct PathKey calldata"
																		}
																	},
																	"id": 3124,
																	"nodeType": "ExpressionStatement",
																	"src": "5627:24:24"
																},
																{
																	"assignments": [
																		3127,
																		3129
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 3127,
																			"mutability": "mutable",
																			"name": "poolKey",
																			"nameLocation": "5685:7:24",
																			"nodeType": "VariableDeclaration",
																			"scope": 3163,
																			"src": "5670:22:24",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
																				"typeString": "struct PoolKey"
																			},
																			"typeName": {
																				"id": 3126,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 3125,
																					"name": "PoolKey",
																					"nameLocations": [
																						"5670:7:24"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 2560,
																					"src": "5670:7:24"
																				},
																				"referencedDeclaration": 2560,
																				"src": "5670:7:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
																					"typeString": "struct PoolKey"
																				}
																			},
																			"visibility": "internal"
																		},
																		{
																			"constant": false,
																			"id": 3129,
																			"mutability": "mutable",
																			"name": "zeroForOne",
																			"nameLocation": "5699:10:24",
																			"nodeType": "VariableDeclaration",
																			"scope": 3163,
																			"src": "5694:15:24",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"typeName": {
																				"id": 3128,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "5694:4:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 3134,
																	"initialValue": {
																		"arguments": [
																			{
																				"id": 3132,
																				"name": "currencyIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3082,
																				"src": "5745:10:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																					"typeString": "Currency"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																					"typeString": "Currency"
																				}
																			],
																			"expression": {
																				"id": 3130,
																				"name": "pathKey",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3106,
																				"src": "5713:7:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																					"typeString": "struct PathKey calldata"
																				}
																			},
																			"id": 3131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5721:23:24",
																			"memberName": "getPoolAndSwapDirection",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4684,
																			"src": "5713:31:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_PathKey_$4621_calldata_ptr_$_t_userDefinedValueType$_Currency_$2214_$returns$_t_struct$_PoolKey_$2560_memory_ptr_$_t_bool_$attached_to$_t_struct$_PathKey_$4621_calldata_ptr_$",
																				"typeString": "function (struct PathKey calldata,Currency) pure returns (struct PoolKey memory,bool)"
																			}
																		},
																		"id": 3133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5713:43:24",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_struct$_PoolKey_$2560_memory_ptr_$_t_bool_$",
																			"typeString": "tuple(struct PoolKey memory,bool)"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5669:87:24"
																},
																{
																	"expression": {
																		"id": 3152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3135,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3078,
																			"src": "5887:9:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"id": 3137,
																							"name": "poolKey",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3127,
																							"src": "5905:7:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
																								"typeString": "struct PoolKey memory"
																							}
																						},
																						{
																							"id": 3138,
																							"name": "zeroForOne",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3129,
																							"src": "5914:10:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"id": 3146,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "-",
																							"prefix": true,
																							"src": "5926:26:24",
																							"subExpression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"id": 3143,
																												"name": "amountIn",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 3087,
																												"src": "5942:8:24",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint128",
																													"typeString": "uint128"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint128",
																													"typeString": "uint128"
																												}
																											],
																											"id": 3142,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "5934:7:24",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_uint256_$",
																												"typeString": "type(uint256)"
																											},
																											"typeName": {
																												"id": 3141,
																												"name": "uint256",
																												"nodeType": "ElementaryTypeName",
																												"src": "5934:7:24",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 3144,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "5934:17:24",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 3140,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "5927:6:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_int256_$",
																										"typeString": "type(int256)"
																									},
																									"typeName": {
																										"id": 3139,
																										"name": "int256",
																										"nodeType": "ElementaryTypeName",
																										"src": "5927:6:24",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 3145,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5927:25:24",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						{
																							"expression": {
																								"id": 3147,
																								"name": "pathKey",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3106,
																								"src": "5954:7:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																									"typeString": "struct PathKey calldata"
																								}
																							},
																							"id": 3148,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5962:8:24",
																							"memberName": "hookData",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 4620,
																							"src": "5954:16:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_calldata_ptr",
																								"typeString": "bytes calldata"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
																								"typeString": "struct PoolKey memory"
																							},
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							},
																							{
																								"typeIdentifier": "t_bytes_calldata_ptr",
																								"typeString": "bytes calldata"
																							}
																						],
																						"id": 3136,
																						"name": "_swap",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3430,
																						"src": "5899:5:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PoolKey_$2560_memory_ptr_$_t_bool_$_t_int256_$_t_bytes_calldata_ptr_$returns$_t_int128_$",
																							"typeString": "function (struct PoolKey memory,bool,int256,bytes calldata) returns (int128)"
																						}
																					},
																					"id": 3149,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5899:72:24",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				},
																				"id": 3150,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5972:9:24",
																				"memberName": "toUint128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1219,
																				"src": "5899:82:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int128_$returns$_t_uint128_$attached_to$_t_int128_$",
																					"typeString": "function (int128) pure returns (uint128)"
																				}
																			},
																			"id": 3151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5899:84:24",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "5887:96:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"id": 3153,
																	"nodeType": "ExpressionStatement",
																	"src": "5887:96:24"
																},
																{
																	"expression": {
																		"id": 3156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3154,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3087,
																			"src": "6002:8:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 3155,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3078,
																			"src": "6013:9:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "6002:20:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"id": 3157,
																	"nodeType": "ExpressionStatement",
																	"src": "6002:20:24"
																},
																{
																	"expression": {
																		"id": 3161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3158,
																			"name": "currencyIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3082,
																			"src": "6040:10:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																				"typeString": "Currency"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"id": 3159,
																				"name": "pathKey",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3106,
																				"src": "6053:7:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																					"typeString": "struct PathKey calldata"
																				}
																			},
																			"id": 3160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6061:20:24",
																			"memberName": "intermediateCurrency",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4611,
																			"src": "6053:28:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																				"typeString": "Currency"
																			}
																		},
																		"src": "6040:41:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																			"typeString": "Currency"
																		}
																	},
																	"id": 3162,
																	"nodeType": "ExpressionStatement",
																	"src": "6040:41:24"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3112,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3109,
																"src": "5588:1:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 3113,
																"name": "pathLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3072,
																"src": "5592:10:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5588:14:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3164,
														"initializationExpression": {
															"assignments": [
																3109
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3109,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "5581:1:24",
																	"nodeType": "VariableDeclaration",
																	"scope": 3164,
																	"src": "5573:9:24",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3108,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5573:7:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3111,
															"initialValue": {
																"hexValue": "30",
																"id": 3110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5573:13:24"
														},
														"isSimpleCounterLoop": true,
														"loopExpression": {
															"expression": {
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5604:3:24",
																"subExpression": {
																	"id": 3115,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3109,
																	"src": "5604:1:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3117,
															"nodeType": "ExpressionStatement",
															"src": "5604:3:24"
														},
														"nodeType": "ForStatement",
														"src": "5568:528:24"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 3168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3165,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3078,
																"src": "6114:9:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 3166,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3068,
																	"src": "6126:6:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ExactInputParams_$4095_calldata_ptr",
																		"typeString": "struct IV4Router.ExactInputParams calldata"
																	}
																},
																"id": 3167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6133:16:24",
																"memberName": "amountOutMinimum",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4094,
																"src": "6126:23:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "6114:35:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3175,
														"nodeType": "IfStatement",
														"src": "6110:103:24",
														"trueBody": {
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3170,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3068,
																			"src": "6178:6:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ExactInputParams_$4095_calldata_ptr",
																				"typeString": "struct IV4Router.ExactInputParams calldata"
																			}
																		},
																		"id": 3171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6185:16:24",
																		"memberName": "amountOutMinimum",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4094,
																		"src": "6178:23:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	{
																		"id": 3172,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3078,
																		"src": "6203:9:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 3169,
																	"name": "V4TooLittleReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4062,
																	"src": "6158:19:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 3173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6158:55:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3174,
															"nodeType": "RevertStatement",
															"src": "6151:62:24"
														}
													}
												]
											}
										]
									},
									"id": 3178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_swapExactInput",
									"nameLocation": "5096:15:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3068,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "5148:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "5112:42:24",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$4095_calldata_ptr",
													"typeString": "struct IV4Router.ExactInputParams"
												},
												"typeName": {
													"id": 3067,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3066,
														"name": "IV4Router.ExactInputParams",
														"nameLocations": [
															"5112:9:24",
															"5122:16:24"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4095,
														"src": "5112:26:24"
													},
													"referencedDeclaration": 4095,
													"src": "5112:26:24",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$4095_storage_ptr",
														"typeString": "struct IV4Router.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5111:44:24"
									},
									"returnParameters": {
										"id": 3070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5164:0:24"
									},
									"scope": 3431,
									"src": "5087:1143:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3250,
										"nodeType": "Block",
										"src": "6327:533:24",
										"statements": [
											{
												"assignments": [
													3185
												],
												"declarations": [
													{
														"constant": false,
														"id": 3185,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "6345:9:24",
														"nodeType": "VariableDeclaration",
														"scope": 3250,
														"src": "6337:17:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 3184,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "6337:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3188,
												"initialValue": {
													"expression": {
														"id": 3186,
														"name": "params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3181,
														"src": "6357:6:24",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
															"typeString": "struct IV4Router.ExactOutputSingleParams calldata"
														}
													},
													"id": 3187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6364:9:24",
													"memberName": "amountOut",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4103,
													"src": "6357:16:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:36:24"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3189,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3185,
														"src": "6387:9:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3190,
															"name": "ActionConstants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4148,
															"src": "6400:15:24",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ActionConstants_$4148_$",
																"typeString": "type(library ActionConstants)"
															}
														},
														"id": 3191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6416:10:24",
														"memberName": "OPEN_DELTA",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4129,
														"src": "6400:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "6387:39:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3210,
												"nodeType": "IfStatement",
												"src": "6383:195:24",
												"trueBody": {
													"id": 3209,
													"nodeType": "Block",
													"src": "6428:150:24",
													"statements": [
														{
															"expression": {
																"id": 3207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3193,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3185,
																	"src": "6442:9:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"condition": {
																						"expression": {
																							"id": 3195,
																							"name": "params",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3181,
																							"src": "6483:6:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
																								"typeString": "struct IV4Router.ExactOutputSingleParams calldata"
																							}
																						},
																						"id": 3196,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6490:10:24",
																						"memberName": "zeroForOne",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 4101,
																						"src": "6483:17:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseExpression": {
																						"expression": {
																							"expression": {
																								"id": 3200,
																								"name": "params",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3181,
																								"src": "6530:6:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
																									"typeString": "struct IV4Router.ExactOutputSingleParams calldata"
																								}
																							},
																							"id": 3201,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6537:7:24",
																							"memberName": "poolKey",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 4099,
																							"src": "6530:14:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
																								"typeString": "struct PoolKey calldata"
																							}
																						},
																						"id": 3202,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6545:9:24",
																						"memberName": "currency0",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2545,
																						"src": "6530:24:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						}
																					},
																					"id": 3203,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "Conditional",
																					"src": "6483:71:24",
																					"trueExpression": {
																						"expression": {
																							"expression": {
																								"id": 3197,
																								"name": "params",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3181,
																								"src": "6503:6:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
																									"typeString": "struct IV4Router.ExactOutputSingleParams calldata"
																								}
																							},
																							"id": 3198,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6510:7:24",
																							"memberName": "poolKey",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 4099,
																							"src": "6503:14:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
																								"typeString": "struct PoolKey calldata"
																							}
																						},
																						"id": 3199,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6518:9:24",
																						"memberName": "currency1",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2549,
																						"src": "6503:24:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																							"typeString": "Currency"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																						"typeString": "Currency"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																						"typeString": "Currency"
																					}
																				],
																				"id": 3194,
																				"name": "_getFullDebt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3777,
																				"src": "6470:12:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Currency_$2214_$returns$_t_uint256_$",
																					"typeString": "function (Currency) view returns (uint256)"
																				}
																			},
																			"id": 3204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6470:85:24",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6556:9:24",
																		"memberName": "toUint128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1192,
																		"src": "6470:95:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint128)"
																		}
																	},
																	"id": 3206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6470:97:24",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "6442:125:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3208,
															"nodeType": "ExpressionStatement",
															"src": "6442:125:24"
														}
													]
												}
											},
											{
												"assignments": [
													3212
												],
												"declarations": [
													{
														"constant": false,
														"id": 3212,
														"mutability": "mutable",
														"name": "amountIn",
														"nameLocation": "6595:8:24",
														"nodeType": "VariableDeclaration",
														"scope": 3250,
														"src": "6587:16:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 3211,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "6587:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3238,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"id": 3233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "6628:94:24",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"expression": {
																									"id": 3218,
																									"name": "params",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3181,
																									"src": "6642:6:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
																										"typeString": "struct IV4Router.ExactOutputSingleParams calldata"
																									}
																								},
																								"id": 3219,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "6649:7:24",
																								"memberName": "poolKey",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 4099,
																								"src": "6642:14:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
																									"typeString": "struct PoolKey calldata"
																								}
																							},
																							{
																								"expression": {
																									"id": 3220,
																									"name": "params",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3181,
																									"src": "6658:6:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
																										"typeString": "struct IV4Router.ExactOutputSingleParams calldata"
																									}
																								},
																								"id": 3221,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "6665:10:24",
																								"memberName": "zeroForOne",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 4101,
																								"src": "6658:17:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"id": 3226,
																												"name": "amountOut",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 3185,
																												"src": "6692:9:24",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint128",
																													"typeString": "uint128"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint128",
																													"typeString": "uint128"
																												}
																											],
																											"id": 3225,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "6684:7:24",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_uint256_$",
																												"typeString": "type(uint256)"
																											},
																											"typeName": {
																												"id": 3224,
																												"name": "uint256",
																												"nodeType": "ElementaryTypeName",
																												"src": "6684:7:24",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 3227,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "6684:18:24",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 3223,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "6677:6:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_int256_$",
																										"typeString": "type(int256)"
																									},
																									"typeName": {
																										"id": 3222,
																										"name": "int256",
																										"nodeType": "ElementaryTypeName",
																										"src": "6677:6:24",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 3228,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "6677:26:24",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							},
																							{
																								"expression": {
																									"id": 3229,
																									"name": "params",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3181,
																									"src": "6705:6:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
																										"typeString": "struct IV4Router.ExactOutputSingleParams calldata"
																									}
																								},
																								"id": 3230,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "6712:8:24",
																								"memberName": "hookData",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 4107,
																								"src": "6705:15:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
																									"typeString": "struct PoolKey calldata"
																								},
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								},
																								{
																									"typeIdentifier": "t_bytes_calldata_ptr",
																									"typeString": "bytes calldata"
																								}
																							],
																							"id": 3217,
																							"name": "_swap",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3430,
																							"src": "6636:5:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PoolKey_$2560_memory_ptr_$_t_bool_$_t_int256_$_t_bytes_calldata_ptr_$returns$_t_int128_$",
																								"typeString": "function (struct PoolKey memory,bool,int256,bytes calldata) returns (int128)"
																							}
																						},
																						"id": 3231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6636:85:24",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					],
																					"id": 3216,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6629:6:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 3215,
																						"name": "int256",
																						"nodeType": "ElementaryTypeName",
																						"src": "6629:6:24",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6629:93:24",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 3214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6620:7:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3213,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6620:7:24",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6620:103:24",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3235,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6606:127:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6734:9:24",
														"memberName": "toUint128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1192,
														"src": "6606:137:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$attached_to$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint128)"
														}
													},
													"id": 3237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6606:139:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6587:158:24"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 3242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3239,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3212,
														"src": "6759:8:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 3240,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3181,
															"src": "6770:6:24",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
																"typeString": "struct IV4Router.ExactOutputSingleParams calldata"
															}
														},
														"id": 3241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6777:15:24",
														"memberName": "amountInMaximum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4105,
														"src": "6770:22:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "6759:33:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3249,
												"nodeType": "IfStatement",
												"src": "6755:98:24",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 3244,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3181,
																	"src": "6820:6:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
																		"typeString": "struct IV4Router.ExactOutputSingleParams calldata"
																	}
																},
																"id": 3245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6827:15:24",
																"memberName": "amountInMaximum",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4105,
																"src": "6820:22:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 3246,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3212,
																"src": "6844:8:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 3243,
															"name": "V4TooMuchRequested",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4069,
															"src": "6801:18:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256,uint256) pure returns (error)"
															}
														},
														"id": 3247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6801:52:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 3248,
													"nodeType": "RevertStatement",
													"src": "6794:59:24"
												}
											}
										]
									},
									"id": 3251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_swapExactOutputSingle",
									"nameLocation": "6245:22:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3181,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6311:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "6268:49:24",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
													"typeString": "struct IV4Router.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 3180,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3179,
														"name": "IV4Router.ExactOutputSingleParams",
														"nameLocations": [
															"6268:9:24",
															"6278:23:24"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4108,
														"src": "6268:33:24"
													},
													"referencedDeclaration": 4108,
													"src": "6268:33:24",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_storage_ptr",
														"typeString": "struct IV4Router.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6267:51:24"
									},
									"returnParameters": {
										"id": 3183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6327:0:24"
									},
									"scope": 3431,
									"src": "6236:624:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3374,
										"nodeType": "Block",
										"src": "6945:1144:24",
										"statements": [
											{
												"id": 3373,
												"nodeType": "UncheckedBlock",
												"src": "6955:1128:24",
												"statements": [
													{
														"assignments": [
															3258
														],
														"declarations": [
															{
																"constant": false,
																"id": 3258,
																"mutability": "mutable",
																"name": "pathLength",
																"nameLocation": "7026:10:24",
																"nodeType": "VariableDeclaration",
																"scope": 3373,
																"src": "7018:18:24",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3257,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7018:7:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3262,
														"initialValue": {
															"expression": {
																"expression": {
																	"id": 3259,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3254,
																	"src": "7039:6:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ExactOutputParams_$4121_calldata_ptr",
																		"typeString": "struct IV4Router.ExactOutputParams calldata"
																	}
																},
																"id": 3260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7046:4:24",
																"memberName": "path",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4116,
																"src": "7039:11:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PathKey_$4621_calldata_ptr_$dyn_calldata_ptr",
																	"typeString": "struct PathKey calldata[] calldata"
																}
															},
															"id": 3261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7051:6:24",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7039:18:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7018:39:24"
													},
													{
														"assignments": [
															3264
														],
														"declarations": [
															{
																"constant": false,
																"id": 3264,
																"mutability": "mutable",
																"name": "amountIn",
																"nameLocation": "7079:8:24",
																"nodeType": "VariableDeclaration",
																"scope": 3373,
																"src": "7071:16:24",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"typeName": {
																	"id": 3263,
																	"name": "uint128",
																	"nodeType": "ElementaryTypeName",
																	"src": "7071:7:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3265,
														"nodeType": "VariableDeclarationStatement",
														"src": "7071:16:24"
													},
													{
														"assignments": [
															3267
														],
														"declarations": [
															{
																"constant": false,
																"id": 3267,
																"mutability": "mutable",
																"name": "amountOut",
																"nameLocation": "7109:9:24",
																"nodeType": "VariableDeclaration",
																"scope": 3373,
																"src": "7101:17:24",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"typeName": {
																	"id": 3266,
																	"name": "uint128",
																	"nodeType": "ElementaryTypeName",
																	"src": "7101:7:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3270,
														"initialValue": {
															"expression": {
																"id": 3268,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3254,
																"src": "7121:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputParams_$4121_calldata_ptr",
																	"typeString": "struct IV4Router.ExactOutputParams calldata"
																}
															},
															"id": 3269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7128:9:24",
															"memberName": "amountOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4118,
															"src": "7121:16:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7101:36:24"
													},
													{
														"assignments": [
															3273
														],
														"declarations": [
															{
																"constant": false,
																"id": 3273,
																"mutability": "mutable",
																"name": "currencyOut",
																"nameLocation": "7160:11:24",
																"nodeType": "VariableDeclaration",
																"scope": 3373,
																"src": "7151:20:24",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																},
																"typeName": {
																	"id": 3272,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 3271,
																		"name": "Currency",
																		"nameLocations": [
																			"7151:8:24"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2214,
																		"src": "7151:8:24"
																	},
																	"referencedDeclaration": 2214,
																	"src": "7151:8:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																		"typeString": "Currency"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3276,
														"initialValue": {
															"expression": {
																"id": 3274,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3254,
																"src": "7174:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputParams_$4121_calldata_ptr",
																	"typeString": "struct IV4Router.ExactOutputParams calldata"
																}
															},
															"id": 3275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7181:11:24",
															"memberName": "currencyOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4112,
															"src": "7174:18:24",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7151:41:24"
													},
													{
														"assignments": [
															3279
														],
														"declarations": [
															{
																"constant": false,
																"id": 3279,
																"mutability": "mutable",
																"name": "pathKey",
																"nameLocation": "7223:7:24",
																"nodeType": "VariableDeclaration",
																"scope": 3373,
																"src": "7206:24:24",
																"stateVariable": false,
																"storageLocation": "calldata",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																	"typeString": "struct PathKey"
																},
																"typeName": {
																	"id": 3278,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 3277,
																		"name": "PathKey",
																		"nameLocations": [
																			"7206:7:24"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 4621,
																		"src": "7206:7:24"
																	},
																	"referencedDeclaration": 4621,
																	"src": "7206:7:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PathKey_$4621_storage_ptr",
																		"typeString": "struct PathKey"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3280,
														"nodeType": "VariableDeclarationStatement",
														"src": "7206:24:24"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 3284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3281,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3267,
																"src": "7249:9:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3282,
																	"name": "ActionConstants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4148,
																	"src": "7262:15:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ActionConstants_$4148_$",
																		"typeString": "type(library ActionConstants)"
																	}
																},
																"id": 3283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7278:10:24",
																"memberName": "OPEN_DELTA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4129,
																"src": "7262:26:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "7249:39:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3294,
														"nodeType": "IfStatement",
														"src": "7245:127:24",
														"trueBody": {
															"id": 3293,
															"nodeType": "Block",
															"src": "7290:82:24",
															"statements": [
																{
																	"expression": {
																		"id": 3291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3285,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3267,
																			"src": "7308:9:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"id": 3287,
																							"name": "currencyOut",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3273,
																							"src": "7333:11:24",
																							"typeDescriptions": {
																								"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																								"typeString": "Currency"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																								"typeString": "Currency"
																							}
																						],
																						"id": 3286,
																						"name": "_getFullDebt",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3777,
																						"src": "7320:12:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Currency_$2214_$returns$_t_uint256_$",
																							"typeString": "function (Currency) view returns (uint256)"
																						}
																					},
																					"id": 3288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7320:25:24",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7346:9:24",
																				"memberName": "toUint128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1192,
																				"src": "7320:35:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint128)"
																				}
																			},
																			"id": 3290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7320:37:24",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "7308:49:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"id": 3292,
																	"nodeType": "ExpressionStatement",
																	"src": "7308:49:24"
																}
															]
														}
													},
													{
														"body": {
															"id": 3360,
															"nodeType": "Block",
															"src": "7427:534:24",
															"statements": [
																{
																	"expression": {
																		"id": 3312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3305,
																			"name": "pathKey",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3279,
																			"src": "7445:7:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																				"typeString": "struct PathKey calldata"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 3306,
																					"name": "params",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3254,
																					"src": "7455:6:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ExactOutputParams_$4121_calldata_ptr",
																						"typeString": "struct IV4Router.ExactOutputParams calldata"
																					}
																				},
																				"id": 3307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7462:4:24",
																				"memberName": "path",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4116,
																				"src": "7455:11:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PathKey_$4621_calldata_ptr_$dyn_calldata_ptr",
																					"typeString": "struct PathKey calldata[] calldata"
																				}
																			},
																			"id": 3311,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3310,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3308,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3296,
																					"src": "7467:1:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7471:1:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "7467:5:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7455:18:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																				"typeString": "struct PathKey calldata"
																			}
																		},
																		"src": "7445:28:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																			"typeString": "struct PathKey calldata"
																		}
																	},
																	"id": 3313,
																	"nodeType": "ExpressionStatement",
																	"src": "7445:28:24"
																},
																{
																	"assignments": [
																		3316,
																		3318
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 3316,
																			"mutability": "mutable",
																			"name": "poolKey",
																			"nameLocation": "7507:7:24",
																			"nodeType": "VariableDeclaration",
																			"scope": 3360,
																			"src": "7492:22:24",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
																				"typeString": "struct PoolKey"
																			},
																			"typeName": {
																				"id": 3315,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 3314,
																					"name": "PoolKey",
																					"nameLocations": [
																						"7492:7:24"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 2560,
																					"src": "7492:7:24"
																				},
																				"referencedDeclaration": 2560,
																				"src": "7492:7:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
																					"typeString": "struct PoolKey"
																				}
																			},
																			"visibility": "internal"
																		},
																		{
																			"constant": false,
																			"id": 3318,
																			"mutability": "mutable",
																			"name": "oneForZero",
																			"nameLocation": "7521:10:24",
																			"nodeType": "VariableDeclaration",
																			"scope": 3360,
																			"src": "7516:15:24",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"typeName": {
																				"id": 3317,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "7516:4:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 3323,
																	"initialValue": {
																		"arguments": [
																			{
																				"id": 3321,
																				"name": "currencyOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3273,
																				"src": "7567:11:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																					"typeString": "Currency"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																					"typeString": "Currency"
																				}
																			],
																			"expression": {
																				"id": 3319,
																				"name": "pathKey",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3279,
																				"src": "7535:7:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																					"typeString": "struct PathKey calldata"
																				}
																			},
																			"id": 3320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7543:23:24",
																			"memberName": "getPoolAndSwapDirection",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4684,
																			"src": "7535:31:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_PathKey_$4621_calldata_ptr_$_t_userDefinedValueType$_Currency_$2214_$returns$_t_struct$_PoolKey_$2560_memory_ptr_$_t_bool_$attached_to$_t_struct$_PathKey_$4621_calldata_ptr_$",
																				"typeString": "function (struct PathKey calldata,Currency) pure returns (struct PoolKey memory,bool)"
																			}
																		},
																		"id": 3322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7535:44:24",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_struct$_PoolKey_$2560_memory_ptr_$_t_bool_$",
																			"typeString": "tuple(struct PoolKey memory,bool)"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "7491:88:24"
																},
																{
																	"expression": {
																		"id": 3349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3324,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3264,
																			"src": "7710:8:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"id": 3344,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "-",
																									"prefix": true,
																									"src": "7730:82:24",
																									"subExpression": {
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"id": 3330,
																														"name": "poolKey",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 3316,
																														"src": "7744:7:24",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
																															"typeString": "struct PoolKey memory"
																														}
																													},
																													{
																														"id": 3332,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "UnaryOperation",
																														"operator": "!",
																														"prefix": true,
																														"src": "7753:11:24",
																														"subExpression": {
																															"id": 3331,
																															"name": "oneForZero",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 3318,
																															"src": "7754:10:24",
																															"typeDescriptions": {
																																"typeIdentifier": "t_bool",
																																"typeString": "bool"
																															}
																														},
																														"typeDescriptions": {
																															"typeIdentifier": "t_bool",
																															"typeString": "bool"
																														}
																													},
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"id": 3337,
																																		"name": "amountOut",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 3267,
																																		"src": "7781:9:24",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint128",
																																			"typeString": "uint128"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint128",
																																			"typeString": "uint128"
																																		}
																																	],
																																	"id": 3336,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": true,
																																	"lValueRequested": false,
																																	"nodeType": "ElementaryTypeNameExpression",
																																	"src": "7773:7:24",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_type$_t_uint256_$",
																																		"typeString": "type(uint256)"
																																	},
																																	"typeName": {
																																		"id": 3335,
																																		"name": "uint256",
																																		"nodeType": "ElementaryTypeName",
																																		"src": "7773:7:24",
																																		"typeDescriptions": {}
																																	}
																																},
																																"id": 3338,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "typeConversion",
																																"lValueRequested": false,
																																"nameLocations": [],
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "7773:18:24",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"id": 3334,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"lValueRequested": false,
																															"nodeType": "ElementaryTypeNameExpression",
																															"src": "7766:6:24",
																															"typeDescriptions": {
																																"typeIdentifier": "t_type$_t_int256_$",
																																"typeString": "type(int256)"
																															},
																															"typeName": {
																																"id": 3333,
																																"name": "int256",
																																"nodeType": "ElementaryTypeName",
																																"src": "7766:6:24",
																																"typeDescriptions": {}
																															}
																														},
																														"id": 3339,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "typeConversion",
																														"lValueRequested": false,
																														"nameLocations": [],
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "7766:26:24",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_int256",
																															"typeString": "int256"
																														}
																													},
																													{
																														"expression": {
																															"id": 3340,
																															"name": "pathKey",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 3279,
																															"src": "7794:7:24",
																															"typeDescriptions": {
																																"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																																"typeString": "struct PathKey calldata"
																															}
																														},
																														"id": 3341,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"memberLocation": "7802:8:24",
																														"memberName": "hookData",
																														"nodeType": "MemberAccess",
																														"referencedDeclaration": 4620,
																														"src": "7794:16:24",
																														"typeDescriptions": {
																															"typeIdentifier": "t_bytes_calldata_ptr",
																															"typeString": "bytes calldata"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
																															"typeString": "struct PoolKey memory"
																														},
																														{
																															"typeIdentifier": "t_bool",
																															"typeString": "bool"
																														},
																														{
																															"typeIdentifier": "t_int256",
																															"typeString": "int256"
																														},
																														{
																															"typeIdentifier": "t_bytes_calldata_ptr",
																															"typeString": "bytes calldata"
																														}
																													],
																													"id": 3329,
																													"name": "_swap",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 3430,
																													"src": "7738:5:24",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PoolKey_$2560_memory_ptr_$_t_bool_$_t_int256_$_t_bytes_calldata_ptr_$returns$_t_int128_$",
																														"typeString": "function (struct PoolKey memory,bool,int256,bytes calldata) returns (int128)"
																													}
																												},
																												"id": 3342,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"nameLocations": [],
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "7738:73:24",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_int128",
																													"typeString": "int128"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_int128",
																													"typeString": "int128"
																												}
																											],
																											"id": 3328,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "7731:6:24",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_int256_$",
																												"typeString": "type(int256)"
																											},
																											"typeName": {
																												"id": 3327,
																												"name": "int256",
																												"nodeType": "ElementaryTypeName",
																												"src": "7731:6:24",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 3343,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "7731:81:24",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_int256",
																											"typeString": "int256"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_int256",
																										"typeString": "int256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int256",
																										"typeString": "int256"
																									}
																								],
																								"id": 3326,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "7722:7:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": {
																									"id": 3325,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "7722:7:24",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 3345,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "7722:91:24",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 3346,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7721:93:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7836:9:24",
																				"memberName": "toUint128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1192,
																				"src": "7721:124:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint128)"
																				}
																			},
																			"id": 3348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7721:126:24",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "7710:137:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"id": 3350,
																	"nodeType": "ExpressionStatement",
																	"src": "7710:137:24"
																},
																{
																	"expression": {
																		"id": 3353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3351,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3267,
																			"src": "7866:9:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 3352,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3264,
																			"src": "7878:8:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "7866:20:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"id": 3354,
																	"nodeType": "ExpressionStatement",
																	"src": "7866:20:24"
																},
																{
																	"expression": {
																		"id": 3358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3355,
																			"name": "currencyOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3273,
																			"src": "7904:11:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																				"typeString": "Currency"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"id": 3356,
																				"name": "pathKey",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3279,
																				"src": "7918:7:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																					"typeString": "struct PathKey calldata"
																				}
																			},
																			"id": 3357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7926:20:24",
																			"memberName": "intermediateCurrency",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4611,
																			"src": "7918:28:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																				"typeString": "Currency"
																			}
																		},
																		"src": "7904:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																			"typeString": "Currency"
																		}
																	},
																	"id": 3359,
																	"nodeType": "ExpressionStatement",
																	"src": "7904:42:24"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3299,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3296,
																"src": "7415:1:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7419:1:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7415:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3361,
														"initializationExpression": {
															"assignments": [
																3296
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3296,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "7399:1:24",
																	"nodeType": "VariableDeclaration",
																	"scope": 3361,
																	"src": "7391:9:24",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3295,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7391:7:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3298,
															"initialValue": {
																"id": 3297,
																"name": "pathLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3258,
																"src": "7403:10:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7391:22:24"
														},
														"isSimpleCounterLoop": false,
														"loopExpression": {
															"expression": {
																"id": 3303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "7422:3:24",
																"subExpression": {
																	"id": 3302,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3296,
																	"src": "7422:1:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3304,
															"nodeType": "ExpressionStatement",
															"src": "7422:3:24"
														},
														"nodeType": "ForStatement",
														"src": "7386:575:24"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 3365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3362,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3264,
																"src": "7978:8:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 3363,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3254,
																	"src": "7989:6:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ExactOutputParams_$4121_calldata_ptr",
																		"typeString": "struct IV4Router.ExactOutputParams calldata"
																	}
																},
																"id": 3364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7996:15:24",
																"memberName": "amountInMaximum",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4120,
																"src": "7989:22:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "7978:33:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3372,
														"nodeType": "IfStatement",
														"src": "7974:98:24",
														"trueBody": {
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3367,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3254,
																			"src": "8039:6:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ExactOutputParams_$4121_calldata_ptr",
																				"typeString": "struct IV4Router.ExactOutputParams calldata"
																			}
																		},
																		"id": 3368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8046:15:24",
																		"memberName": "amountInMaximum",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4120,
																		"src": "8039:22:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	{
																		"id": 3369,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3264,
																		"src": "8063:8:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 3366,
																	"name": "V4TooMuchRequested",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4069,
																	"src": "8020:18:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 3370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8020:52:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3371,
															"nodeType": "RevertStatement",
															"src": "8013:59:24"
														}
													}
												]
											}
										]
									},
									"id": 3375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_swapExactOutput",
									"nameLocation": "6875:16:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6929:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 3375,
												"src": "6892:43:24",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$4121_calldata_ptr",
													"typeString": "struct IV4Router.ExactOutputParams"
												},
												"typeName": {
													"id": 3253,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3252,
														"name": "IV4Router.ExactOutputParams",
														"nameLocations": [
															"6892:9:24",
															"6902:17:24"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4121,
														"src": "6892:27:24"
													},
													"referencedDeclaration": 4121,
													"src": "6892:27:24",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$4121_storage_ptr",
														"typeString": "struct IV4Router.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6891:45:24"
									},
									"returnParameters": {
										"id": 3256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6945:0:24"
									},
									"scope": 3431,
									"src": "6866:1223:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3429,
										"nodeType": "Block",
										"src": "8262:530:24",
										"statements": [
											{
												"id": 3428,
												"nodeType": "UncheckedBlock",
												"src": "8377:409:24",
												"statements": [
													{
														"assignments": [
															3391
														],
														"declarations": [
															{
																"constant": false,
																"id": 3391,
																"mutability": "mutable",
																"name": "delta",
																"nameLocation": "8414:5:24",
																"nodeType": "VariableDeclaration",
																"scope": 3428,
																"src": "8401:18:24",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
																	"typeString": "BalanceDelta"
																},
																"typeName": {
																	"id": 3390,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 3389,
																		"name": "BalanceDelta",
																		"nameLocations": [
																			"8401:12:24"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2000,
																		"src": "8401:12:24"
																	},
																	"referencedDeclaration": 2000,
																	"src": "8401:12:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
																		"typeString": "BalanceDelta"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3411,
														"initialValue": {
															"arguments": [
																{
																	"id": 3394,
																	"name": "poolKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3378,
																	"src": "8456:7:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
																		"typeString": "struct PoolKey memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3396,
																			"name": "zeroForOne",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3380,
																			"src": "8513:10:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 3397,
																			"name": "amountSpecified",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3382,
																			"src": "8525:15:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"condition": {
																				"id": 3398,
																				"name": "zeroForOne",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3380,
																				"src": "8542:10:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 3406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 3403,
																						"name": "TickMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1858,
																						"src": "8585:8:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_TickMath_$1858_$",
																							"typeString": "type(library TickMath)"
																						}
																					},
																					"id": 3404,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8594:14:24",
																					"memberName": "MAX_SQRT_PRICE",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1353,
																					"src": "8585:23:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3405,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8611:1:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "8585:27:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"id": 3407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "8542:70:24",
																			"trueExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 3402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 3399,
																						"name": "TickMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1858,
																						"src": "8555:8:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_TickMath_$1858_$",
																							"typeString": "type(library TickMath)"
																						}
																					},
																					"id": 3400,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8564:14:24",
																					"memberName": "MIN_SQRT_PRICE",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1349,
																					"src": "8555:23:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3401,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8581:1:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "8555:27:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3395,
																		"name": "SwapParams",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2587,
																		"src": "8481:10:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_SwapParams_$2587_storage_ptr_$",
																			"typeString": "type(struct SwapParams storage pointer)"
																		}
																	},
																	"id": 3408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8481:149:24",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SwapParams_$2587_memory_ptr",
																		"typeString": "struct SwapParams memory"
																	}
																},
																{
																	"id": 3409,
																	"name": "hookData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3384,
																	"src": "8648:8:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
																		"typeString": "struct PoolKey memory"
																	},
																	{
																		"typeIdentifier": "t_struct$_SwapParams_$2587_memory_ptr",
																		"typeString": "struct SwapParams memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"expression": {
																	"id": 3392,
																	"name": "poolManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3941,
																	"src": "8422:11:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IPoolManager_$614",
																		"typeString": "contract IPoolManager"
																	}
																},
																"id": 3393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8434:4:24",
																"memberName": "swap",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 527,
																"src": "8422:16:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_struct$_PoolKey_$2560_memory_ptr_$_t_struct$_SwapParams_$2587_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_BalanceDelta_$2000_$",
																	"typeString": "function (struct PoolKey memory,struct SwapParams memory,bytes memory) external returns (BalanceDelta)"
																}
															},
															"id": 3410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8422:248:24",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
																"typeString": "BalanceDelta"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8401:269:24"
													},
													{
														"expression": {
															"id": 3426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3412,
																"name": "reciprocalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3387,
																"src": "8685:16:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"condition": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3413,
																				"name": "zeroForOne",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3380,
																				"src": "8705:10:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3414,
																					"name": "amountSpecified",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3382,
																					"src": "8719:15:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 3415,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8737:1:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "8719:19:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8705:33:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 3418,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8704:35:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 3422,
																			"name": "delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3391,
																			"src": "8760:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
																				"typeString": "BalanceDelta"
																			}
																		},
																		"id": 3423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8766:7:24",
																		"memberName": "amount0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2147,
																		"src": "8760:13:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_BalanceDelta_$2000_$returns$_t_int128_$attached_to$_t_userDefinedValueType$_BalanceDelta_$2000_$",
																			"typeString": "function (BalanceDelta) pure returns (int128)"
																		}
																	},
																	"id": 3424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8760:15:24",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"id": 3425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "8704:71:24",
																"trueExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 3419,
																			"name": "delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3391,
																			"src": "8742:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$2000",
																				"typeString": "BalanceDelta"
																			}
																		},
																		"id": 3420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8748:7:24",
																		"memberName": "amount1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2157,
																		"src": "8742:13:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_BalanceDelta_$2000_$returns$_t_int128_$attached_to$_t_userDefinedValueType$_BalanceDelta_$2000_$",
																			"typeString": "function (BalanceDelta) pure returns (int128)"
																		}
																	},
																	"id": 3421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8742:15:24",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"src": "8685:90:24",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"id": 3427,
														"nodeType": "ExpressionStatement",
														"src": "8685:90:24"
													}
												]
											}
										]
									},
									"id": 3430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_swap",
									"nameLocation": "8104:5:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3378,
												"mutability": "mutable",
												"name": "poolKey",
												"nameLocation": "8125:7:24",
												"nodeType": "VariableDeclaration",
												"scope": 3430,
												"src": "8110:22:24",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 3377,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3376,
														"name": "PoolKey",
														"nameLocations": [
															"8110:7:24"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "8110:7:24"
													},
													"referencedDeclaration": 2560,
													"src": "8110:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "8139:10:24",
												"nodeType": "VariableDeclaration",
												"scope": 3430,
												"src": "8134:15:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8134:4:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3382,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "8158:15:24",
												"nodeType": "VariableDeclaration",
												"scope": 3430,
												"src": "8151:22:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3381,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8151:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3384,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "8190:8:24",
												"nodeType": "VariableDeclaration",
												"scope": 3430,
												"src": "8175:23:24",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8175:5:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8109:90:24"
									},
									"returnParameters": {
										"id": 3388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3387,
												"mutability": "mutable",
												"name": "reciprocalAmount",
												"nameLocation": "8240:16:24",
												"nodeType": "VariableDeclaration",
												"scope": 3430,
												"src": "8233:23:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3386,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "8233:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8232:25:24"
									},
									"scope": 3431,
									"src": "8095:697:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3432,
							"src": "1364:7430:24",
							"usedErrors": [
								3454,
								3459,
								3648,
								3654,
								3657,
								3944,
								4062,
								4069,
								4236
							],
							"usedEvents": []
						}
					],
					"src": "32:8763:24"
				},
				"id": 24
			},
			"https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v4-periphery/src/base/BaseActionsRouter.sol",
					"exportedSymbols": {
						"ActionConstants": [
							4148
						],
						"BaseActionsRouter": [
							3623
						],
						"CalldataDecoder": [
							4600
						],
						"IMsgSender": [
							4042
						],
						"IPoolManager": [
							614
						],
						"SafeCallback": [
							4019
						]
					},
					"id": 3624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3433,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:25"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
							"file": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
							"id": 3435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3624,
							"sourceUnit": 615,
							"src": "57:78:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3434,
										"name": "IPoolManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 614,
										"src": "65:12:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
							"file": "./SafeCallback.sol",
							"id": 3437,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3624,
							"sourceUnit": 4020,
							"src": "136:48:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3436,
										"name": "SafeCallback",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4019,
										"src": "144:12:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
							"file": "../libraries/CalldataDecoder.sol",
							"id": 3439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3624,
							"sourceUnit": 4601,
							"src": "185:65:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3438,
										"name": "CalldataDecoder",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4600,
										"src": "193:15:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
							"file": "../libraries/ActionConstants.sol",
							"id": 3441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3624,
							"sourceUnit": 4149,
							"src": "251:65:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3440,
										"name": "ActionConstants",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4148,
										"src": "259:15:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
							"file": "../interfaces/IMsgSender.sol",
							"id": 3443,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3624,
							"sourceUnit": 4043,
							"src": "317:56:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3442,
										"name": "IMsgSender",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4042,
										"src": "325:10:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3445,
										"name": "IMsgSender",
										"nameLocations": [
											"603:10:25"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4042,
										"src": "603:10:25"
									},
									"id": 3446,
									"nodeType": "InheritanceSpecifier",
									"src": "603:10:25"
								},
								{
									"baseName": {
										"id": 3447,
										"name": "SafeCallback",
										"nameLocations": [
											"615:12:25"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4019,
										"src": "615:12:25"
									},
									"id": 3448,
									"nodeType": "InheritanceSpecifier",
									"src": "615:12:25"
								}
							],
							"canonicalName": "BaseActionsRouter",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3444,
								"nodeType": "StructuredDocumentation",
								"src": "375:189:25",
								"text": "@notice Abstract contract for performing a combination of actions on Uniswap v4.\n @dev Suggested uint256 action values are defined in Actions.sol, however any definition can be used"
							},
							"fullyImplemented": false,
							"id": 3623,
							"linearizedBaseContracts": [
								3623,
								4019,
								703,
								3972,
								4032,
								4042
							],
							"name": "BaseActionsRouter",
							"nameLocation": "582:17:25",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3451,
									"libraryName": {
										"id": 3449,
										"name": "CalldataDecoder",
										"nameLocations": [
											"640:15:25"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4600,
										"src": "640:15:25"
									},
									"nodeType": "UsingForDirective",
									"src": "634:32:25",
									"typeName": {
										"id": 3450,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "660:5:25",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"documentation": {
										"id": 3452,
										"nodeType": "StructuredDocumentation",
										"src": "672:81:25",
										"text": "@notice emitted when different numbers of parameters and actions are provided"
									},
									"errorSelector": "aaad13f7",
									"id": 3454,
									"name": "InputLengthMismatch",
									"nameLocation": "764:19:25",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "783:2:25"
									},
									"src": "758:28:25"
								},
								{
									"documentation": {
										"id": 3455,
										"nodeType": "StructuredDocumentation",
										"src": "792:74:25",
										"text": "@notice emitted when an inheriting contract does not support an action"
									},
									"errorSelector": "5cda29d7",
									"id": 3459,
									"name": "UnsupportedAction",
									"nameLocation": "877:17:25",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3457,
												"mutability": "mutable",
												"name": "action",
												"nameLocation": "903:6:25",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "895:14:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "894:16:25"
									},
									"src": "871:40:25"
								},
								{
									"body": {
										"id": 3468,
										"nodeType": "Block",
										"src": "983:2:25",
										"statements": []
									},
									"id": 3469,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3465,
													"name": "_poolManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3462,
													"src": "969:12:25",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												}
											],
											"id": 3466,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3464,
												"name": "SafeCallback",
												"nameLocations": [
													"956:12:25"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4019,
												"src": "956:12:25"
											},
											"nodeType": "ModifierInvocation",
											"src": "956:26:25"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3462,
												"mutability": "mutable",
												"name": "_poolManager",
												"nameLocation": "942:12:25",
												"nodeType": "VariableDeclaration",
												"scope": 3469,
												"src": "929:25:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolManager_$614",
													"typeString": "contract IPoolManager"
												},
												"typeName": {
													"id": 3461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3460,
														"name": "IPoolManager",
														"nameLocations": [
															"929:12:25"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "929:12:25"
													},
													"referencedDeclaration": 614,
													"src": "929:12:25",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:27:25"
									},
									"returnParameters": {
										"id": 3467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:0:25"
									},
									"scope": 3623,
									"src": "917:68:25",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3481,
										"nodeType": "Block",
										"src": "1221:47:25",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3478,
															"name": "unlockData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3472,
															"src": "1250:10:25",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"id": 3475,
															"name": "poolManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3941,
															"src": "1231:11:25",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPoolManager_$614",
																"typeString": "contract IPoolManager"
															}
														},
														"id": 3477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1243:6:25",
														"memberName": "unlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 483,
														"src": "1231:18:25",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) external returns (bytes memory)"
														}
													},
													"id": 3479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1231:30:25",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 3480,
												"nodeType": "ExpressionStatement",
												"src": "1231:30:25"
											}
										]
									},
									"documentation": {
										"id": 3470,
										"nodeType": "StructuredDocumentation",
										"src": "991:164:25",
										"text": "@notice internal function that triggers the execution of a set of actions on v4\n @dev inheriting contracts should call this function to trigger execution"
									},
									"id": 3482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executeActions",
									"nameLocation": "1169:15:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3472,
												"mutability": "mutable",
												"name": "unlockData",
												"nameLocation": "1200:10:25",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "1185:25:25",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3471,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1185:5:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:27:25"
									},
									"returnParameters": {
										"id": 3474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:25"
									},
									"scope": 3623,
									"src": "1160:108:25",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										4018
									],
									"body": {
										"id": 3507,
										"nodeType": "Block",
										"src": "1593:222:25",
										"statements": [
											{
												"assignments": [
													3492,
													3495
												],
												"declarations": [
													{
														"constant": false,
														"id": 3492,
														"mutability": "mutable",
														"name": "actions",
														"nameLocation": "1666:7:25",
														"nodeType": "VariableDeclaration",
														"scope": 3507,
														"src": "1651:22:25",
														"stateVariable": false,
														"storageLocation": "calldata",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3491,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1651:5:25",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3495,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1692:6:25",
														"nodeType": "VariableDeclaration",
														"scope": 3507,
														"src": "1675:23:25",
														"stateVariable": false,
														"storageLocation": "calldata",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
															"typeString": "bytes[]"
														},
														"typeName": {
															"baseType": {
																"id": 3493,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "1675:5:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage_ptr",
																	"typeString": "bytes"
																}
															},
															"id": 3494,
															"nodeType": "ArrayTypeName",
															"src": "1675:7:25",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
																"typeString": "bytes[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3499,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3496,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3485,
															"src": "1702:4:25",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 3497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1707:25:25",
														"memberName": "decodeActionsRouterParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4300,
														"src": "1702:30:25",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes_calldata_ptr_$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$attached_to$_t_bytes_calldata_ptr_$",
															"typeString": "function (bytes calldata) pure returns (bytes calldata,bytes calldata[] calldata)"
														}
													},
													"id": 3498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1702:32:25",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes_calldata_ptr_$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$",
														"typeString": "tuple(bytes calldata,bytes calldata[] calldata)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1650:84:25"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3501,
															"name": "actions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3492,
															"src": "1773:7:25",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 3502,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3495,
															"src": "1782:6:25",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "bytes calldata[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "bytes calldata[] calldata"
															}
														],
														"id": 3500,
														"name": "_executeActionsWithoutUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3558,
														"src": "1744:28:25",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_calldata_ptr_$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
															"typeString": "function (bytes calldata,bytes calldata[] calldata)"
														}
													},
													"id": 3503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1744:45:25",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3504,
												"nodeType": "ExpressionStatement",
												"src": "1744:45:25"
											},
											{
												"expression": {
													"hexValue": "",
													"id": 3505,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1806:2:25",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 3490,
												"id": 3506,
												"nodeType": "Return",
												"src": "1799:9:25"
											}
										]
									},
									"documentation": {
										"id": 3483,
										"nodeType": "StructuredDocumentation",
										"src": "1274:227:25",
										"text": "@notice function that is called by the PoolManager through the SafeCallback.unlockCallback\n @param data Abi encoding of (bytes actions, bytes[] params)\n where params[i] is the encoded parameters for actions[i]"
									},
									"id": 3508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unlockCallback",
									"nameLocation": "1515:15:25",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3487,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1561:8:25"
									},
									"parameters": {
										"id": 3486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3485,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1546:4:25",
												"nodeType": "VariableDeclaration",
												"scope": 3508,
												"src": "1531:19:25",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1531:5:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:21:25"
									},
									"returnParameters": {
										"id": 3490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3508,
												"src": "1579:12:25",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1579:5:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1578:14:25"
									},
									"scope": 3623,
									"src": "1506:309:25",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3557,
										"nodeType": "Block",
										"src": "1917:330:25",
										"statements": [
											{
												"assignments": [
													3517
												],
												"declarations": [
													{
														"constant": false,
														"id": 3517,
														"mutability": "mutable",
														"name": "numActions",
														"nameLocation": "1935:10:25",
														"nodeType": "VariableDeclaration",
														"scope": 3557,
														"src": "1927:18:25",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1927:7:25",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3520,
												"initialValue": {
													"expression": {
														"id": 3518,
														"name": "actions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3510,
														"src": "1948:7:25",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"id": 3519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1956:6:25",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1948:14:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1927:35:25"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3521,
														"name": "numActions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3517,
														"src": "1976:10:25",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 3522,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3513,
															"src": "1990:6:25",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "bytes calldata[] calldata"
															}
														},
														"id": 3523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1997:6:25",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1990:13:25",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1976:27:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3528,
												"nodeType": "IfStatement",
												"src": "1972:61:25",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3525,
															"name": "InputLengthMismatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3454,
															"src": "2012:19:25",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 3526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2012:21:25",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 3527,
													"nodeType": "RevertStatement",
													"src": "2005:28:25"
												}
											},
											{
												"body": {
													"id": 3555,
													"nodeType": "Block",
													"src": "2115:126:25",
													"statements": [
														{
															"assignments": [
																3540
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3540,
																	"mutability": "mutable",
																	"name": "action",
																	"nameLocation": "2137:6:25",
																	"nodeType": "VariableDeclaration",
																	"scope": 3555,
																	"src": "2129:14:25",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3539,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2129:7:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3547,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3543,
																			"name": "actions",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3510,
																			"src": "2152:7:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		},
																		"id": 3545,
																		"indexExpression": {
																			"id": 3544,
																			"name": "actionIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3530,
																			"src": "2160:11:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2152:20:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	],
																	"id": 3542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2146:5:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3541,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2146:5:25",
																		"typeDescriptions": {}
																	}
																},
																"id": 3546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2146:27:25",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2129:44:25"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3549,
																		"name": "action",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3540,
																		"src": "2202:6:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3550,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3513,
																			"src": "2210:6:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "bytes calldata[] calldata"
																			}
																		},
																		"id": 3552,
																		"indexExpression": {
																			"id": 3551,
																			"name": "actionIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3530,
																			"src": "2217:11:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2210:19:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 3548,
																	"name": "_handleAction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3566,
																	"src": "2188:13:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
																		"typeString": "function (uint256,bytes calldata)"
																	}
																},
																"id": 3553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2188:42:25",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3554,
															"nodeType": "ExpressionStatement",
															"src": "2188:42:25"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3533,
														"name": "actionIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3530,
														"src": "2074:11:25",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3534,
														"name": "numActions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3517,
														"src": "2088:10:25",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2074:24:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3556,
												"initializationExpression": {
													"assignments": [
														3530
													],
													"declarations": [
														{
															"constant": false,
															"id": 3530,
															"mutability": "mutable",
															"name": "actionIndex",
															"nameLocation": "2057:11:25",
															"nodeType": "VariableDeclaration",
															"scope": 3556,
															"src": "2049:19:25",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3529,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2049:7:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3532,
													"initialValue": {
														"hexValue": "30",
														"id": 3531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2071:1:25",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2049:23:25"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2100:13:25",
														"subExpression": {
															"id": 3536,
															"name": "actionIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3530,
															"src": "2100:11:25",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3538,
													"nodeType": "ExpressionStatement",
													"src": "2100:13:25"
												},
												"nodeType": "ForStatement",
												"src": "2044:197:25"
											}
										]
									},
									"id": 3558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executeActionsWithoutUnlock",
									"nameLocation": "1830:28:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3510,
												"mutability": "mutable",
												"name": "actions",
												"nameLocation": "1874:7:25",
												"nodeType": "VariableDeclaration",
												"scope": 3558,
												"src": "1859:22:25",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1859:5:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3513,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1900:6:25",
												"nodeType": "VariableDeclaration",
												"scope": 3558,
												"src": "1883:23:25",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 3511,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "1883:5:25",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 3512,
													"nodeType": "ArrayTypeName",
													"src": "1883:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1858:49:25"
									},
									"returnParameters": {
										"id": 3515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1917:0:25"
									},
									"scope": 3623,
									"src": "1821:426:25",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 3559,
										"nodeType": "StructuredDocumentation",
										"src": "2253:88:25",
										"text": "@notice function to handle the parsing and execution of an action and its parameters"
									},
									"id": 3566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_handleAction",
									"nameLocation": "2355:13:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3561,
												"mutability": "mutable",
												"name": "action",
												"nameLocation": "2377:6:25",
												"nodeType": "VariableDeclaration",
												"scope": 3566,
												"src": "2369:14:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2369:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3563,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2400:6:25",
												"nodeType": "VariableDeclaration",
												"scope": 3566,
												"src": "2385:21:25",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2385:5:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:39:25"
									},
									"returnParameters": {
										"id": 3565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2424:0:25"
									},
									"scope": 3623,
									"src": "2346:79:25",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										4041
									],
									"documentation": {
										"id": 3567,
										"nodeType": "StructuredDocumentation",
										"src": "2431:480:25",
										"text": "@notice function that returns address considered executor of the actions\n @dev The other context functions, _msgData and _msgValue, are not supported by this contract\n In many contracts this will be the address that calls the initial entry point that calls `_executeActions`\n `msg.sender` shouldn't be used, as this will be the v4 pool manager contract that calls `unlockCallback`\n If using ReentrancyLock.sol, this function can return _getLocker()"
									},
									"functionSelector": "d737d0c7",
									"id": 3572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "msgSender",
									"nameLocation": "2925:9:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2934:2:25"
									},
									"returnParameters": {
										"id": 3571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3572,
												"src": "2966:7:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2966:7:25",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2965:9:25"
									},
									"scope": 3623,
									"src": "2916:59:25",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3603,
										"nodeType": "Block",
										"src": "3107:249:25",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3580,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3575,
														"src": "3121:9:25",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3581,
															"name": "ActionConstants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4148,
															"src": "3134:15:25",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ActionConstants_$4148_$",
																"typeString": "type(library ActionConstants)"
															}
														},
														"id": 3582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3150:10:25",
														"memberName": "MSG_SENDER",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4140,
														"src": "3134:26:25",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3121:39:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3588,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3575,
															"src": "3215:9:25",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 3589,
																"name": "ActionConstants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4148,
																"src": "3228:15:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ActionConstants_$4148_$",
																	"typeString": "type(library ActionConstants)"
																}
															},
															"id": 3590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3244:12:25",
															"memberName": "ADDRESS_THIS",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4147,
															"src": "3228:28:25",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3215:41:25",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 3600,
														"nodeType": "Block",
														"src": "3309:41:25",
														"statements": [
															{
																"expression": {
																	"id": 3598,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3575,
																	"src": "3330:9:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"functionReturnParameters": 3579,
																"id": 3599,
																"nodeType": "Return",
																"src": "3323:16:25"
															}
														]
													},
													"id": 3601,
													"nodeType": "IfStatement",
													"src": "3211:139:25",
													"trueBody": {
														"id": 3597,
														"nodeType": "Block",
														"src": "3258:45:25",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 3594,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3287:4:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BaseActionsRouter_$3623",
																				"typeString": "contract BaseActionsRouter"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BaseActionsRouter_$3623",
																				"typeString": "contract BaseActionsRouter"
																			}
																		],
																		"id": 3593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3279:7:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3592,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3279:7:25",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3279:13:25",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"functionReturnParameters": 3579,
																"id": 3596,
																"nodeType": "Return",
																"src": "3272:20:25"
															}
														]
													}
												},
												"id": 3602,
												"nodeType": "IfStatement",
												"src": "3117:233:25",
												"trueBody": {
													"id": 3587,
													"nodeType": "Block",
													"src": "3162:43:25",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3584,
																	"name": "msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3572,
																	"src": "3183:9:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 3585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3183:11:25",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"functionReturnParameters": 3579,
															"id": 3586,
															"nodeType": "Return",
															"src": "3176:18:25"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3573,
										"nodeType": "StructuredDocumentation",
										"src": "2981:47:25",
										"text": "@notice Calculates the address for a action"
									},
									"id": 3604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mapRecipient",
									"nameLocation": "3042:13:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3575,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3064:9:25",
												"nodeType": "VariableDeclaration",
												"scope": 3604,
												"src": "3056:17:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3056:7:25",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:19:25"
									},
									"returnParameters": {
										"id": 3579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3604,
												"src": "3098:7:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:25",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3097:9:25"
									},
									"scope": 3623,
									"src": "3033:323:25",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3621,
										"nodeType": "Block",
										"src": "3482:65:25",
										"statements": [
											{
												"expression": {
													"condition": {
														"id": 3612,
														"name": "payerIsUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3607,
														"src": "3499:11:25",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 3617,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3535:4:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_BaseActionsRouter_$3623",
																	"typeString": "contract BaseActionsRouter"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_BaseActionsRouter_$3623",
																	"typeString": "contract BaseActionsRouter"
																}
															],
															"id": 3616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3527:7:25",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3527:7:25",
																"typeDescriptions": {}
															}
														},
														"id": 3618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3527:13:25",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3499:41:25",
													"trueExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3613,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3572,
															"src": "3513:9:25",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 3614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3513:11:25",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3611,
												"id": 3620,
												"nodeType": "Return",
												"src": "3492:48:25"
											}
										]
									},
									"documentation": {
										"id": 3605,
										"nodeType": "StructuredDocumentation",
										"src": "3362:46:25",
										"text": "@notice Calculates the payer for an action"
									},
									"id": 3622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mapPayer",
									"nameLocation": "3422:9:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3607,
												"mutability": "mutable",
												"name": "payerIsUser",
												"nameLocation": "3437:11:25",
												"nodeType": "VariableDeclaration",
												"scope": 3622,
												"src": "3432:16:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3432:4:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:25"
									},
									"returnParameters": {
										"id": 3611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3622,
												"src": "3473:7:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:25",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:9:25"
									},
									"scope": 3623,
									"src": "3413:134:25",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3624,
							"src": "564:2985:25",
							"usedErrors": [
								3454,
								3459,
								3944
							],
							"usedEvents": []
						}
					],
					"src": "32:3518:25"
				},
				"id": 25
			},
			"https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v4-periphery/src/base/DeltaResolver.sol",
					"exportedSymbols": {
						"ActionConstants": [
							4148
						],
						"Currency": [
							2214
						],
						"DeltaResolver": [
							3928
						],
						"IPoolManager": [
							614
						],
						"ImmutableState": [
							3972
						],
						"TransientStateLibrary": [
							1994
						]
					},
					"id": 3929,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:26"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/Currency.sol",
							"file": "@uniswap/v4-core/src/types/Currency.sol",
							"id": 3627,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3929,
							"sourceUnit": 2509,
							"src": "58:65:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3626,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2214,
										"src": "66:8:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
							"file": "@uniswap/v4-core/src/libraries/TransientStateLibrary.sol",
							"id": 3629,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3929,
							"sourceUnit": 1995,
							"src": "124:95:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3628,
										"name": "TransientStateLibrary",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1994,
										"src": "132:21:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
							"file": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
							"id": 3631,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3929,
							"sourceUnit": 615,
							"src": "220:78:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3630,
										"name": "IPoolManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 614,
										"src": "228:12:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
							"file": "./ImmutableState.sol",
							"id": 3633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3929,
							"sourceUnit": 3973,
							"src": "299:52:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3632,
										"name": "ImmutableState",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3972,
										"src": "307:14:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
							"file": "../libraries/ActionConstants.sol",
							"id": 3635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3929,
							"sourceUnit": 4149,
							"src": "352:65:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3634,
										"name": "ActionConstants",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4148,
										"src": "360:15:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3637,
										"name": "ImmutableState",
										"nameLocations": [
											"617:14:26"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3972,
										"src": "617:14:26"
									},
									"id": 3638,
									"nodeType": "InheritanceSpecifier",
									"src": "617:14:26"
								}
							],
							"canonicalName": "DeltaResolver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3636,
								"nodeType": "StructuredDocumentation",
								"src": "419:163:26",
								"text": "@notice Abstract contract used to sync, send, and settle funds to the pool manager\n @dev Note that sync() is called before any erc-20 transfer in `settle`."
							},
							"fullyImplemented": false,
							"id": 3928,
							"linearizedBaseContracts": [
								3928,
								3972,
								4032
							],
							"name": "DeltaResolver",
							"nameLocation": "600:13:26",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3642,
									"libraryName": {
										"id": 3639,
										"name": "TransientStateLibrary",
										"nameLocations": [
											"644:21:26"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1994,
										"src": "644:21:26"
									},
									"nodeType": "UsingForDirective",
									"src": "638:45:26",
									"typeName": {
										"id": 3641,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3640,
											"name": "IPoolManager",
											"nameLocations": [
												"670:12:26"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 614,
											"src": "670:12:26"
										},
										"referencedDeclaration": 614,
										"src": "670:12:26",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPoolManager_$614",
											"typeString": "contract IPoolManager"
										}
									}
								},
								{
									"documentation": {
										"id": 3643,
										"nodeType": "StructuredDocumentation",
										"src": "689:54:26",
										"text": "@notice Emitted trying to settle a positive delta."
									},
									"errorSelector": "4c085bf1",
									"id": 3648,
									"name": "DeltaNotPositive",
									"nameLocation": "754:16:26",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3646,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "780:8:26",
												"nodeType": "VariableDeclaration",
												"scope": 3648,
												"src": "771:17:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 3645,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3644,
														"name": "Currency",
														"nameLocations": [
															"771:8:26"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "771:8:26"
													},
													"referencedDeclaration": 2214,
													"src": "771:8:26",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:19:26"
									},
									"src": "748:42:26"
								},
								{
									"documentation": {
										"id": 3649,
										"nodeType": "StructuredDocumentation",
										"src": "795:52:26",
										"text": "@notice Emitted trying to take a negative delta."
									},
									"errorSelector": "3351b260",
									"id": 3654,
									"name": "DeltaNotNegative",
									"nameLocation": "858:16:26",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3652,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "884:8:26",
												"nodeType": "VariableDeclaration",
												"scope": 3654,
												"src": "875:17:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 3651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3650,
														"name": "Currency",
														"nameLocations": [
															"875:8:26"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "875:8:26"
													},
													"referencedDeclaration": 2214,
													"src": "875:8:26",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:19:26"
									},
									"src": "852:42:26"
								},
								{
									"documentation": {
										"id": 3655,
										"nodeType": "StructuredDocumentation",
										"src": "899:85:26",
										"text": "@notice Emitted when the contract does not have enough balance to wrap or unwrap."
									},
									"errorSelector": "f4d678b8",
									"id": 3657,
									"name": "InsufficientBalance",
									"nameLocation": "995:19:26",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:2:26"
									},
									"src": "989:28:26"
								},
								{
									"body": {
										"id": 3681,
										"nodeType": "Block",
										"src": "1348:95:26",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3668,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3665,
														"src": "1362:6:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1372:1:26",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1362:11:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3672,
												"nodeType": "IfStatement",
												"src": "1358:24:26",
												"trueBody": {
													"functionReturnParameters": 3667,
													"id": 3671,
													"nodeType": "Return",
													"src": "1375:7:26"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3676,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3661,
															"src": "1408:8:26",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														{
															"id": 3677,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3663,
															"src": "1418:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3678,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3665,
															"src": "1429:6:26",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3673,
															"name": "poolManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3941,
															"src": "1391:11:26",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPoolManager_$614",
																"typeString": "contract IPoolManager"
															}
														},
														"id": 3675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1403:4:26",
														"memberName": "take",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 561,
														"src": "1391:16:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_Currency_$2214_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (Currency,address,uint256) external"
														}
													},
													"id": 3679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1391:45:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3680,
												"nodeType": "ExpressionStatement",
												"src": "1391:45:26"
											}
										]
									},
									"documentation": {
										"id": 3658,
										"nodeType": "StructuredDocumentation",
										"src": "1023:242:26",
										"text": "@notice Take an amount of currency out of the PoolManager\n @param currency Currency to take\n @param recipient Address to receive the currency\n @param amount Amount to take\n @dev Returns early if the amount is 0"
									},
									"id": 3682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_take",
									"nameLocation": "1279:5:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3661,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "1294:8:26",
												"nodeType": "VariableDeclaration",
												"scope": 3682,
												"src": "1285:17:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 3660,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3659,
														"name": "Currency",
														"nameLocations": [
															"1285:8:26"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "1285:8:26"
													},
													"referencedDeclaration": 2214,
													"src": "1285:8:26",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3663,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1312:9:26",
												"nodeType": "VariableDeclaration",
												"scope": 3682,
												"src": "1304:17:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:26",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3665,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1331:6:26",
												"nodeType": "VariableDeclaration",
												"scope": 3682,
												"src": "1323:14:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:54:26"
									},
									"returnParameters": {
										"id": 3667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:0:26"
									},
									"scope": 3928,
									"src": "1270:173:26",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3728,
										"nodeType": "Block",
										"src": "1842:270:26",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3693,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3690,
														"src": "1856:6:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1866:1:26",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1856:11:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3697,
												"nodeType": "IfStatement",
												"src": "1852:24:26",
												"trueBody": {
													"functionReturnParameters": 3692,
													"id": 3696,
													"nodeType": "Return",
													"src": "1869:7:26"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3701,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3686,
															"src": "1903:8:26",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														],
														"expression": {
															"id": 3698,
															"name": "poolManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3941,
															"src": "1886:11:26",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPoolManager_$614",
																"typeString": "contract IPoolManager"
															}
														},
														"id": 3700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1898:4:26",
														"memberName": "sync",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 550,
														"src": "1886:16:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_Currency_$2214_$returns$__$",
															"typeString": "function (Currency) external"
														}
													},
													"id": 3702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1886:26:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3703,
												"nodeType": "ExpressionStatement",
												"src": "1886:26:26"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3704,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3686,
															"src": "1926:8:26",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"id": 3705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1935:13:26",
														"memberName": "isAddressZero",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2470,
														"src": "1926:22:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "function (Currency) pure returns (bool)"
														}
													},
													"id": 3706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:24:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3726,
													"nodeType": "Block",
													"src": "2018:88:26",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3716,
																		"name": "currency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3686,
																		"src": "2037:8:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																			"typeString": "Currency"
																		}
																	},
																	{
																		"id": 3717,
																		"name": "payer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3688,
																		"src": "2047:5:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3718,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3690,
																		"src": "2054:6:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																			"typeString": "Currency"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3715,
																	"name": "_pay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3740,
																	"src": "2032:4:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_userDefinedValueType$_Currency_$2214_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (Currency,address,uint256)"
																	}
																},
																"id": 3719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2032:29:26",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3720,
															"nodeType": "ExpressionStatement",
															"src": "2032:29:26"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3721,
																		"name": "poolManager",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3941,
																		"src": "2075:11:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPoolManager_$614",
																			"typeString": "contract IPoolManager"
																		}
																	},
																	"id": 3723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2087:6:26",
																	"memberName": "settle",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 567,
																	"src": "2075:18:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
																		"typeString": "function () payable external returns (uint256)"
																	}
																},
																"id": 3724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2075:20:26",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3725,
															"nodeType": "ExpressionStatement",
															"src": "2075:20:26"
														}
													]
												},
												"id": 3727,
												"nodeType": "IfStatement",
												"src": "1922:184:26",
												"trueBody": {
													"id": 3714,
													"nodeType": "Block",
													"src": "1952:60:26",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 3707,
																			"name": "poolManager",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3941,
																			"src": "1966:11:26",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IPoolManager_$614",
																				"typeString": "contract IPoolManager"
																			}
																		},
																		"id": 3709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1978:6:26",
																		"memberName": "settle",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 567,
																		"src": "1966:18:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
																			"typeString": "function () payable external returns (uint256)"
																		}
																	},
																	"id": 3711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 3710,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3690,
																			"src": "1992:6:26",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "1966:33:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
																		"typeString": "function () payable external returns (uint256)"
																	}
																},
																"id": 3712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1966:35:26",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3713,
															"nodeType": "ExpressionStatement",
															"src": "1966:35:26"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3683,
										"nodeType": "StructuredDocumentation",
										"src": "1449:312:26",
										"text": "@notice Pay and settle a currency to the PoolManager\n @dev The implementing contract must ensure that the `payer` is a secure address\n @param currency Currency to settle\n @param payer Address of the payer\n @param amount Amount to send\n @dev Returns early if the amount is 0"
									},
									"id": 3729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_settle",
									"nameLocation": "1775:7:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3686,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "1792:8:26",
												"nodeType": "VariableDeclaration",
												"scope": 3729,
												"src": "1783:17:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 3685,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3684,
														"name": "Currency",
														"nameLocations": [
															"1783:8:26"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "1783:8:26"
													},
													"referencedDeclaration": 2214,
													"src": "1783:8:26",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3688,
												"mutability": "mutable",
												"name": "payer",
												"nameLocation": "1810:5:26",
												"nodeType": "VariableDeclaration",
												"scope": 3729,
												"src": "1802:13:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:26",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3690,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1825:6:26",
												"nodeType": "VariableDeclaration",
												"scope": 3729,
												"src": "1817:14:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1817:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1782:50:26"
									},
									"returnParameters": {
										"id": 3692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1842:0:26"
									},
									"scope": 3928,
									"src": "1766:346:26",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 3730,
										"nodeType": "StructuredDocumentation",
										"src": "2118:349:26",
										"text": "@notice Abstract function for contracts to implement paying tokens to the poolManager\n @dev The recipient of the payment should be the poolManager\n @param token The token to settle. This is known not to be the native currency\n @param payer The address who should pay tokens\n @param amount The number of tokens to send"
									},
									"id": 3740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_pay",
									"nameLocation": "2481:4:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3733,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2495:5:26",
												"nodeType": "VariableDeclaration",
												"scope": 3740,
												"src": "2486:14:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 3732,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3731,
														"name": "Currency",
														"nameLocations": [
															"2486:8:26"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "2486:8:26"
													},
													"referencedDeclaration": 2214,
													"src": "2486:8:26",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3735,
												"mutability": "mutable",
												"name": "payer",
												"nameLocation": "2510:5:26",
												"nodeType": "VariableDeclaration",
												"scope": 3740,
												"src": "2502:13:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:26",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3737,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2525:6:26",
												"nodeType": "VariableDeclaration",
												"scope": 3740,
												"src": "2517:14:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:47:26"
									},
									"returnParameters": {
										"id": 3739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2549:0:26"
									},
									"scope": 3928,
									"src": "2472:78:26",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3776,
										"nodeType": "Block",
										"src": "2837:321:26",
										"statements": [
											{
												"assignments": [
													3750
												],
												"declarations": [
													{
														"constant": false,
														"id": 3750,
														"mutability": "mutable",
														"name": "_amount",
														"nameLocation": "2854:7:26",
														"nodeType": "VariableDeclaration",
														"scope": 3776,
														"src": "2847:14:26",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3749,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2847:6:26",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3759,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3755,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2898:4:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DeltaResolver_$3928",
																		"typeString": "contract DeltaResolver"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DeltaResolver_$3928",
																		"typeString": "contract DeltaResolver"
																	}
																],
																"id": 3754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2890:7:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3753,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2890:7:26",
																	"typeDescriptions": {}
																}
															},
															"id": 3756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2890:13:26",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3757,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3744,
															"src": "2905:8:26",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														],
														"expression": {
															"id": 3751,
															"name": "poolManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3941,
															"src": "2864:11:26",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPoolManager_$614",
																"typeString": "contract IPoolManager"
															}
														},
														"id": 3752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2876:13:26",
														"memberName": "currencyDelta",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1975,
														"src": "2864:25:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IPoolManager_$614_$_t_address_$_t_userDefinedValueType$_Currency_$2214_$returns$_t_int256_$attached_to$_t_contract$_IPoolManager_$614_$",
															"typeString": "function (contract IPoolManager,address,Currency) view returns (int256)"
														}
													},
													"id": 3758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2864:50:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2847:67:26"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3760,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3750,
														"src": "2998:7:26",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3008:1:26",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2998:11:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3767,
												"nodeType": "IfStatement",
												"src": "2994:50:26",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3764,
																"name": "currency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3744,
																"src": "3035:8:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															],
															"id": 3763,
															"name": "DeltaNotNegative",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3654,
															"src": "3018:16:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_error_$",
																"typeString": "function (Currency) pure returns (error)"
															}
														},
														"id": 3765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3018:26:26",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 3766,
													"nodeType": "RevertStatement",
													"src": "3011:33:26"
												}
											},
											{
												"expression": {
													"id": 3774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3768,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3747,
														"src": "3125:6:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "3142:8:26",
																"subExpression": {
																	"id": 3771,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3750,
																	"src": "3143:7:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3134:7:26",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3769,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3134:7:26",
																"typeDescriptions": {}
															}
														},
														"id": 3773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3134:17:26",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3125:26:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3775,
												"nodeType": "ExpressionStatement",
												"src": "3125:26:26"
											}
										]
									},
									"documentation": {
										"id": 3741,
										"nodeType": "StructuredDocumentation",
										"src": "2556:196:26",
										"text": "@notice Obtain the full amount owed by this contract (negative delta)\n @param currency Currency to get the delta for\n @return amount The amount owed by this contract as a uint256"
									},
									"id": 3777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getFullDebt",
									"nameLocation": "2766:12:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3744,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "2788:8:26",
												"nodeType": "VariableDeclaration",
												"scope": 3777,
												"src": "2779:17:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 3743,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3742,
														"name": "Currency",
														"nameLocations": [
															"2779:8:26"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "2779:8:26"
													},
													"referencedDeclaration": 2214,
													"src": "2779:8:26",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2778:19:26"
									},
									"returnParameters": {
										"id": 3748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3747,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2829:6:26",
												"nodeType": "VariableDeclaration",
												"scope": 3777,
												"src": "2821:14:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:16:26"
									},
									"scope": 3928,
									"src": "2757:401:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3812,
										"nodeType": "Block",
										"src": "3447:249:26",
										"statements": [
											{
												"assignments": [
													3787
												],
												"declarations": [
													{
														"constant": false,
														"id": 3787,
														"mutability": "mutable",
														"name": "_amount",
														"nameLocation": "3464:7:26",
														"nodeType": "VariableDeclaration",
														"scope": 3812,
														"src": "3457:14:26",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3786,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3457:6:26",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3796,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3792,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3508:4:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DeltaResolver_$3928",
																		"typeString": "contract DeltaResolver"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DeltaResolver_$3928",
																		"typeString": "contract DeltaResolver"
																	}
																],
																"id": 3791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3500:7:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3790,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3500:7:26",
																	"typeDescriptions": {}
																}
															},
															"id": 3793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3500:13:26",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3794,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3781,
															"src": "3515:8:26",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														],
														"expression": {
															"id": 3788,
															"name": "poolManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3941,
															"src": "3474:11:26",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPoolManager_$614",
																"typeString": "contract IPoolManager"
															}
														},
														"id": 3789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3486:13:26",
														"memberName": "currencyDelta",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1975,
														"src": "3474:25:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IPoolManager_$614_$_t_address_$_t_userDefinedValueType$_Currency_$2214_$returns$_t_int256_$attached_to$_t_contract$_IPoolManager_$614_$",
															"typeString": "function (contract IPoolManager,address,Currency) view returns (int256)"
														}
													},
													"id": 3795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3474:50:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3457:67:26"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3797,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3787,
														"src": "3608:7:26",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 3798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3618:1:26",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3608:11:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3804,
												"nodeType": "IfStatement",
												"src": "3604:50:26",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3801,
																"name": "currency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3781,
																"src": "3645:8:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															],
															"id": 3800,
															"name": "DeltaNotPositive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3648,
															"src": "3628:16:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_userDefinedValueType$_Currency_$2214_$returns$_t_error_$",
																"typeString": "function (Currency) pure returns (error)"
															}
														},
														"id": 3802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3628:26:26",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 3803,
													"nodeType": "RevertStatement",
													"src": "3621:33:26"
												}
											},
											{
												"expression": {
													"id": 3810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3805,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3784,
														"src": "3664:6:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3808,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3787,
																"src": "3681:7:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3673:7:26",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3806,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3673:7:26",
																"typeDescriptions": {}
															}
														},
														"id": 3809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3673:16:26",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3664:25:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3811,
												"nodeType": "ExpressionStatement",
												"src": "3664:25:26"
											}
										]
									},
									"documentation": {
										"id": 3778,
										"nodeType": "StructuredDocumentation",
										"src": "3164:196:26",
										"text": "@notice Obtain the full credit owed to this contract (positive delta)\n @param currency Currency to get the delta for\n @return amount The amount owed to this contract as a uint256"
									},
									"id": 3813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getFullCredit",
									"nameLocation": "3374:14:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3781,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "3398:8:26",
												"nodeType": "VariableDeclaration",
												"scope": 3813,
												"src": "3389:17:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 3780,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3779,
														"name": "Currency",
														"nameLocations": [
															"3389:8:26"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "3389:8:26"
													},
													"referencedDeclaration": 2214,
													"src": "3389:8:26",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3388:19:26"
									},
									"returnParameters": {
										"id": 3785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3784,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3439:6:26",
												"nodeType": "VariableDeclaration",
												"scope": 3813,
												"src": "3431:14:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3431:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3430:16:26"
									},
									"scope": 3928,
									"src": "3365:331:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3847,
										"nodeType": "Block",
										"src": "3853:266:26",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3824,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3816,
														"src": "3867:6:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3825,
															"name": "ActionConstants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4148,
															"src": "3877:15:26",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ActionConstants_$4148_$",
																"typeString": "type(library ActionConstants)"
															}
														},
														"id": 3826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3893:16:26",
														"memberName": "CONTRACT_BALANCE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4133,
														"src": "3877:32:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3867:42:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3833,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3816,
															"src": "3977:6:26",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 3834,
																"name": "ActionConstants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4148,
																"src": "3987:15:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ActionConstants_$4148_$",
																	"typeString": "type(library ActionConstants)"
																}
															},
															"id": 3835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4003:10:26",
															"memberName": "OPEN_DELTA",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4129,
															"src": "3987:26:26",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "3977:36:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 3844,
														"nodeType": "Block",
														"src": "4075:38:26",
														"statements": [
															{
																"expression": {
																	"id": 3842,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3816,
																	"src": "4096:6:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 3823,
																"id": 3843,
																"nodeType": "Return",
																"src": "4089:13:26"
															}
														]
													},
													"id": 3845,
													"nodeType": "IfStatement",
													"src": "3973:140:26",
													"trueBody": {
														"id": 3841,
														"nodeType": "Block",
														"src": "4015:54:26",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 3838,
																			"name": "currency",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3819,
																			"src": "4049:8:26",
																			"typeDescriptions": {
																				"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																				"typeString": "Currency"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																				"typeString": "Currency"
																			}
																		],
																		"id": 3837,
																		"name": "_getFullDebt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3777,
																		"src": "4036:12:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Currency_$2214_$returns$_t_uint256_$",
																			"typeString": "function (Currency) view returns (uint256)"
																		}
																	},
																	"id": 3839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4036:22:26",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 3823,
																"id": 3840,
																"nodeType": "Return",
																"src": "4029:29:26"
															}
														]
													}
												},
												"id": 3846,
												"nodeType": "IfStatement",
												"src": "3863:250:26",
												"trueBody": {
													"id": 3832,
													"nodeType": "Block",
													"src": "3911:56:26",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3828,
																		"name": "currency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3819,
																		"src": "3932:8:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																			"typeString": "Currency"
																		}
																	},
																	"id": 3829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3941:13:26",
																	"memberName": "balanceOfSelf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2421,
																	"src": "3932:22:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Currency_$2214_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Currency_$2214_$",
																		"typeString": "function (Currency) view returns (uint256)"
																	}
																},
																"id": 3830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3932:24:26",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3823,
															"id": 3831,
															"nodeType": "Return",
															"src": "3925:31:26"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3814,
										"nodeType": "StructuredDocumentation",
										"src": "3702:53:26",
										"text": "@notice Calculates the amount for a settle action"
									},
									"id": 3848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mapSettleAmount",
									"nameLocation": "3769:16:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3816,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3794:6:26",
												"nodeType": "VariableDeclaration",
												"scope": 3848,
												"src": "3786:14:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3786:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3819,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "3811:8:26",
												"nodeType": "VariableDeclaration",
												"scope": 3848,
												"src": "3802:17:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 3818,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3817,
														"name": "Currency",
														"nameLocations": [
															"3802:8:26"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "3802:8:26"
													},
													"referencedDeclaration": 2214,
													"src": "3802:8:26",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3785:35:26"
									},
									"returnParameters": {
										"id": 3823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3848,
												"src": "3844:7:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3844:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3843:9:26"
									},
									"scope": 3928,
									"src": "3760:359:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3872,
										"nodeType": "Block",
										"src": "4272:158:26",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3859,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3851,
														"src": "4286:6:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3860,
															"name": "ActionConstants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4148,
															"src": "4296:15:26",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ActionConstants_$4148_$",
																"typeString": "type(library ActionConstants)"
															}
														},
														"id": 3861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4312:10:26",
														"memberName": "OPEN_DELTA",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4129,
														"src": "4296:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "4286:36:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3870,
													"nodeType": "Block",
													"src": "4386:38:26",
													"statements": [
														{
															"expression": {
																"id": 3868,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3851,
																"src": "4407:6:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3858,
															"id": 3869,
															"nodeType": "Return",
															"src": "4400:13:26"
														}
													]
												},
												"id": 3871,
												"nodeType": "IfStatement",
												"src": "4282:142:26",
												"trueBody": {
													"id": 3867,
													"nodeType": "Block",
													"src": "4324:56:26",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3864,
																		"name": "currency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3854,
																		"src": "4360:8:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																			"typeString": "Currency"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																			"typeString": "Currency"
																		}
																	],
																	"id": 3863,
																	"name": "_getFullCredit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3813,
																	"src": "4345:14:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Currency_$2214_$returns$_t_uint256_$",
																		"typeString": "function (Currency) view returns (uint256)"
																	}
																},
																"id": 3865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4345:24:26",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3858,
															"id": 3866,
															"nodeType": "Return",
															"src": "4338:31:26"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3849,
										"nodeType": "StructuredDocumentation",
										"src": "4125:51:26",
										"text": "@notice Calculates the amount for a take action"
									},
									"id": 3873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mapTakeAmount",
									"nameLocation": "4190:14:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3851,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4213:6:26",
												"nodeType": "VariableDeclaration",
												"scope": 3873,
												"src": "4205:14:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4205:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3854,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "4230:8:26",
												"nodeType": "VariableDeclaration",
												"scope": 3873,
												"src": "4221:17:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 3853,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3852,
														"name": "Currency",
														"nameLocations": [
															"4221:8:26"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "4221:8:26"
													},
													"referencedDeclaration": 2214,
													"src": "4221:8:26",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4204:35:26"
									},
									"returnParameters": {
										"id": 3858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3873,
												"src": "4263:7:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4263:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4262:9:26"
									},
									"scope": 3928,
									"src": "4181:249:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3926,
										"nodeType": "Block",
										"src": "4996:802:26",
										"statements": [
											{
												"assignments": [
													3888
												],
												"declarations": [
													{
														"constant": false,
														"id": 3888,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "5143:7:26",
														"nodeType": "VariableDeclaration",
														"scope": 3926,
														"src": "5135:15:26",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3887,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5135:7:26",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3896,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3893,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5185:4:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DeltaResolver_$3928",
																		"typeString": "contract DeltaResolver"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DeltaResolver_$3928",
																		"typeString": "contract DeltaResolver"
																	}
																],
																"id": 3892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5177:7:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3891,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5177:7:26",
																	"typeDescriptions": {}
																}
															},
															"id": 3894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5177:13:26",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3889,
															"name": "inputCurrency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3877,
															"src": "5153:13:26",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"id": 3890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5167:9:26",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2451,
														"src": "5153:23:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Currency_$2214_$_t_address_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "function (Currency,address) view returns (uint256)"
														}
													},
													"id": 3895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5153:38:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5135:56:26"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3897,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3879,
														"src": "5205:6:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3898,
															"name": "ActionConstants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4148,
															"src": "5215:15:26",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ActionConstants_$4148_$",
																"typeString": "type(library ActionConstants)"
															}
														},
														"id": 3899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5231:16:26",
														"memberName": "CONTRACT_BALANCE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4133,
														"src": "5215:32:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5205:42:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3904,
												"nodeType": "IfStatement",
												"src": "5201:150:26",
												"trueBody": {
													"id": 3903,
													"nodeType": "Block",
													"src": "5249:102:26",
													"statements": [
														{
															"expression": {
																"id": 3901,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3888,
																"src": "5333:7:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3886,
															"id": 3902,
															"nodeType": "Return",
															"src": "5326:14:26"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3905,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3879,
														"src": "5364:6:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3906,
															"name": "ActionConstants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4148,
															"src": "5374:15:26",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ActionConstants_$4148_$",
																"typeString": "type(library ActionConstants)"
															}
														},
														"id": 3907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5390:10:26",
														"memberName": "OPEN_DELTA",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4129,
														"src": "5374:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "5364:36:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3916,
												"nodeType": "IfStatement",
												"src": "5360:349:26",
												"trueBody": {
													"id": 3915,
													"nodeType": "Block",
													"src": "5402:307:26",
													"statements": [
														{
															"expression": {
																"id": 3913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3909,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3879,
																	"src": "5661:6:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3911,
																			"name": "outputCurrency",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3882,
																			"src": "5683:14:26",
																			"typeDescriptions": {
																				"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																				"typeString": "Currency"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																				"typeString": "Currency"
																			}
																		],
																		"id": 3910,
																		"name": "_getFullDebt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3777,
																		"src": "5670:12:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Currency_$2214_$returns$_t_uint256_$",
																			"typeString": "function (Currency) view returns (uint256)"
																		}
																	},
																	"id": 3912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5670:28:26",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5661:37:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3914,
															"nodeType": "ExpressionStatement",
															"src": "5661:37:26"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3917,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3879,
														"src": "5722:6:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3918,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3888,
														"src": "5731:7:26",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5722:16:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3923,
												"nodeType": "IfStatement",
												"src": "5718:50:26",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3920,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3657,
															"src": "5747:19:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 3921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:21:26",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 3922,
													"nodeType": "RevertStatement",
													"src": "5740:28:26"
												}
											},
											{
												"expression": {
													"id": 3924,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3879,
													"src": "5785:6:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3886,
												"id": 3925,
												"nodeType": "Return",
												"src": "5778:13:26"
											}
										]
									},
									"documentation": {
										"id": 3874,
										"nodeType": "StructuredDocumentation",
										"src": "4436:400:26",
										"text": "@notice Calculates the sanitized amount before wrapping/unwrapping.\n @param inputCurrency The currency, either native or wrapped native, that this contract holds\n @param amount The amount to wrap or unwrap. Can be CONTRACT_BALANCE, OPEN_DELTA or a specific amount\n @param outputCurrency The currency after the wrap/unwrap that the user may owe a balance in on the poolManager"
									},
									"id": 3927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mapWrapUnwrapAmount",
									"nameLocation": "4850:20:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3877,
												"mutability": "mutable",
												"name": "inputCurrency",
												"nameLocation": "4880:13:26",
												"nodeType": "VariableDeclaration",
												"scope": 3927,
												"src": "4871:22:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 3876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3875,
														"name": "Currency",
														"nameLocations": [
															"4871:8:26"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "4871:8:26"
													},
													"referencedDeclaration": 2214,
													"src": "4871:8:26",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3879,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4903:6:26",
												"nodeType": "VariableDeclaration",
												"scope": 3927,
												"src": "4895:14:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4895:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3882,
												"mutability": "mutable",
												"name": "outputCurrency",
												"nameLocation": "4920:14:26",
												"nodeType": "VariableDeclaration",
												"scope": 3927,
												"src": "4911:23:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 3881,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3880,
														"name": "Currency",
														"nameLocations": [
															"4911:8:26"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "4911:8:26"
													},
													"referencedDeclaration": 2214,
													"src": "4911:8:26",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4870:65:26"
									},
									"returnParameters": {
										"id": 3886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3927,
												"src": "4983:7:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4982:9:26"
									},
									"scope": 3928,
									"src": "4841:957:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3929,
							"src": "582:5218:26",
							"usedErrors": [
								3648,
								3654,
								3657,
								3944
							],
							"usedEvents": []
						}
					],
					"src": "32:5769:26"
				},
				"id": 26
			},
			"https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
					"exportedSymbols": {
						"IImmutableState": [
							4032
						],
						"IPoolManager": [
							614
						],
						"ImmutableState": [
							3972
						]
					},
					"id": 3973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3930,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:27"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
							"file": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
							"id": 3932,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3973,
							"sourceUnit": 615,
							"src": "57:78:27",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3931,
										"name": "IPoolManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 614,
										"src": "65:12:27",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
							"file": "../interfaces/IImmutableState.sol",
							"id": 3934,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3973,
							"sourceUnit": 4033,
							"src": "136:66:27",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3933,
										"name": "IImmutableState",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4032,
										"src": "144:15:27",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3936,
										"name": "IImmutableState",
										"nameLocations": [
											"353:15:27"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4032,
										"src": "353:15:27"
									},
									"id": 3937,
									"nodeType": "InheritanceSpecifier",
									"src": "353:15:27"
								}
							],
							"canonicalName": "ImmutableState",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3935,
								"nodeType": "StructuredDocumentation",
								"src": "204:122:27",
								"text": "@title Immutable State\n @notice A collection of immutable state variables, commonly used across multiple contracts"
							},
							"fullyImplemented": true,
							"id": 3972,
							"linearizedBaseContracts": [
								3972,
								4032
							],
							"name": "ImmutableState",
							"nameLocation": "335:14:27",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										4031
									],
									"constant": false,
									"documentation": {
										"id": 3938,
										"nodeType": "StructuredDocumentation",
										"src": "375:31:27",
										"text": "@inheritdoc IImmutableState"
									},
									"functionSelector": "dc4c90d3",
									"id": 3941,
									"mutability": "immutable",
									"name": "poolManager",
									"nameLocation": "441:11:27",
									"nodeType": "VariableDeclaration",
									"scope": 3972,
									"src": "411:41:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPoolManager_$614",
										"typeString": "contract IPoolManager"
									},
									"typeName": {
										"id": 3940,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3939,
											"name": "IPoolManager",
											"nameLocations": [
												"411:12:27"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 614,
											"src": "411:12:27"
										},
										"referencedDeclaration": 614,
										"src": "411:12:27",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPoolManager_$614",
											"typeString": "contract IPoolManager"
										}
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 3942,
										"nodeType": "StructuredDocumentation",
										"src": "459:53:27",
										"text": "@notice Thrown when the caller is not PoolManager"
									},
									"errorSelector": "ae18210a",
									"id": 3944,
									"name": "NotPoolManager",
									"nameLocation": "523:14:27",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "537:2:27"
									},
									"src": "517:23:27"
								},
								{
									"body": {
										"id": 3959,
										"nodeType": "Block",
										"src": "636:91:27",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3947,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "650:3:27",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "654:6:27",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "650:10:27",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 3951,
																"name": "poolManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3941,
																"src": "672:11:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPoolManager_$614",
																	"typeString": "contract IPoolManager"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IPoolManager_$614",
																	"typeString": "contract IPoolManager"
																}
															],
															"id": 3950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "664:7:27",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "664:7:27",
																"typeDescriptions": {}
															}
														},
														"id": 3952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "664:20:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "650:34:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3957,
												"nodeType": "IfStatement",
												"src": "646:63:27",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3954,
															"name": "NotPoolManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3944,
															"src": "693:14:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 3955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "693:16:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 3956,
													"nodeType": "RevertStatement",
													"src": "686:23:27"
												}
											},
											{
												"id": 3958,
												"nodeType": "PlaceholderStatement",
												"src": "719:1:27"
											}
										]
									},
									"documentation": {
										"id": 3945,
										"nodeType": "StructuredDocumentation",
										"src": "546:58:27",
										"text": "@notice Only allow calls from the PoolManager contract"
									},
									"id": 3960,
									"name": "onlyPoolManager",
									"nameLocation": "618:15:27",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "633:2:27"
									},
									"src": "609:118:27",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3970,
										"nodeType": "Block",
										"src": "772:43:27",
										"statements": [
											{
												"expression": {
													"id": 3968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3966,
														"name": "poolManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3941,
														"src": "782:11:27",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPoolManager_$614",
															"typeString": "contract IPoolManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3967,
														"name": "_poolManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3963,
														"src": "796:12:27",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPoolManager_$614",
															"typeString": "contract IPoolManager"
														}
													},
													"src": "782:26:27",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												},
												"id": 3969,
												"nodeType": "ExpressionStatement",
												"src": "782:26:27"
											}
										]
									},
									"id": 3971,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3963,
												"mutability": "mutable",
												"name": "_poolManager",
												"nameLocation": "758:12:27",
												"nodeType": "VariableDeclaration",
												"scope": 3971,
												"src": "745:25:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolManager_$614",
													"typeString": "contract IPoolManager"
												},
												"typeName": {
													"id": 3962,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3961,
														"name": "IPoolManager",
														"nameLocations": [
															"745:12:27"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "745:12:27"
													},
													"referencedDeclaration": 614,
													"src": "745:12:27",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:27:27"
									},
									"returnParameters": {
										"id": 3965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "772:0:27"
									},
									"scope": 3972,
									"src": "733:82:27",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3973,
							"src": "326:491:27",
							"usedErrors": [
								3944
							],
							"usedEvents": []
						}
					],
					"src": "32:786:27"
				},
				"id": 27
			},
			"https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v4-periphery/src/base/SafeCallback.sol",
					"exportedSymbols": {
						"IPoolManager": [
							614
						],
						"IUnlockCallback": [
							703
						],
						"ImmutableState": [
							3972
						],
						"SafeCallback": [
							4019
						]
					},
					"id": 4020,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:28"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
							"file": "@uniswap/v4-core/src/interfaces/callback/IUnlockCallback.sol",
							"id": 3976,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4020,
							"sourceUnit": 704,
							"src": "57:93:28",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3975,
										"name": "IUnlockCallback",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 703,
										"src": "65:15:28",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
							"file": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
							"id": 3978,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4020,
							"sourceUnit": 615,
							"src": "151:78:28",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3977,
										"name": "IPoolManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 614,
										"src": "159:12:28",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/base/ImmutableState.sol",
							"file": "./ImmutableState.sol",
							"id": 3980,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4020,
							"sourceUnit": 3973,
							"src": "230:52:28",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3979,
										"name": "ImmutableState",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3972,
										"src": "238:14:28",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3982,
										"name": "ImmutableState",
										"nameLocations": [
											"437:14:28"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3972,
										"src": "437:14:28"
									},
									"id": 3983,
									"nodeType": "InheritanceSpecifier",
									"src": "437:14:28"
								},
								{
									"baseName": {
										"id": 3984,
										"name": "IUnlockCallback",
										"nameLocations": [
											"453:15:28"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 703,
										"src": "453:15:28"
									},
									"id": 3985,
									"nodeType": "InheritanceSpecifier",
									"src": "453:15:28"
								}
							],
							"canonicalName": "SafeCallback",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3981,
								"nodeType": "StructuredDocumentation",
								"src": "284:119:28",
								"text": "@title Safe Callback\n @notice A contract that only allows the Uniswap v4 PoolManager to call the unlockCallback"
							},
							"fullyImplemented": false,
							"id": 4019,
							"linearizedBaseContracts": [
								4019,
								703,
								3972,
								4032
							],
							"name": "SafeCallback",
							"nameLocation": "421:12:28",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3994,
										"nodeType": "Block",
										"src": "543:2:28",
										"statements": []
									},
									"id": 3995,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3991,
													"name": "_poolManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3988,
													"src": "529:12:28",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												}
											],
											"id": 3992,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3990,
												"name": "ImmutableState",
												"nameLocations": [
													"514:14:28"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3972,
												"src": "514:14:28"
											},
											"nodeType": "ModifierInvocation",
											"src": "514:28:28"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3988,
												"mutability": "mutable",
												"name": "_poolManager",
												"nameLocation": "500:12:28",
												"nodeType": "VariableDeclaration",
												"scope": 3995,
												"src": "487:25:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolManager_$614",
													"typeString": "contract IPoolManager"
												},
												"typeName": {
													"id": 3987,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3986,
														"name": "IPoolManager",
														"nameLocations": [
															"487:12:28"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "487:12:28"
													},
													"referencedDeclaration": 614,
													"src": "487:12:28",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:27:28"
									},
									"returnParameters": {
										"id": 3993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:0:28"
									},
									"scope": 4019,
									"src": "475:70:28",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										702
									],
									"body": {
										"id": 4009,
										"nodeType": "Block",
										"src": "795:45:28",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4006,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3998,
															"src": "828:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 4005,
														"name": "_unlockCallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4018,
														"src": "812:15:28",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes calldata) returns (bytes memory)"
														}
													},
													"id": 4007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "812:21:28",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 4004,
												"id": 4008,
												"nodeType": "Return",
												"src": "805:28:28"
											}
										]
									},
									"documentation": {
										"id": 3996,
										"nodeType": "StructuredDocumentation",
										"src": "551:146:28",
										"text": "@inheritdoc IUnlockCallback\n @dev We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check."
									},
									"functionSelector": "91dd7346",
									"id": 4010,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4001,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4000,
												"name": "onlyPoolManager",
												"nameLocations": [
													"756:15:28"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3960,
												"src": "756:15:28"
											},
											"nodeType": "ModifierInvocation",
											"src": "756:15:28"
										}
									],
									"name": "unlockCallback",
									"nameLocation": "711:14:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3998,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "741:4:28",
												"nodeType": "VariableDeclaration",
												"scope": 4010,
												"src": "726:19:28",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3997,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "726:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:21:28"
									},
									"returnParameters": {
										"id": 4004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4010,
												"src": "781:12:28",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4002,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "781:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:14:28"
									},
									"scope": 4019,
									"src": "702:138:28",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 4011,
										"nodeType": "StructuredDocumentation",
										"src": "846:115:28",
										"text": "@dev to be implemented by the child contract, to safely guarantee the logic is only executed by the PoolManager"
									},
									"id": 4018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_unlockCallback",
									"nameLocation": "975:15:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4013,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1006:4:28",
												"nodeType": "VariableDeclaration",
												"scope": 4018,
												"src": "991:19:28",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "991:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:21:28"
									},
									"returnParameters": {
										"id": 4017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4018,
												"src": "1038:12:28",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4015,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1038:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1037:14:28"
									},
									"scope": 4019,
									"src": "966:86:28",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 4020,
							"src": "403:651:28",
							"usedErrors": [
								3944
							],
							"usedEvents": []
						}
					],
					"src": "32:1023:28"
				},
				"id": 28
			},
			"https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
					"exportedSymbols": {
						"IImmutableState": [
							4032
						],
						"IPoolManager": [
							614
						]
					},
					"id": 4033,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4021,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:29"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
							"file": "@uniswap/v4-core/src/interfaces/IPoolManager.sol",
							"id": 4023,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4033,
							"sourceUnit": 615,
							"src": "57:78:29",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4022,
										"name": "IPoolManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 614,
										"src": "65:12:29",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IImmutableState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4024,
								"nodeType": "StructuredDocumentation",
								"src": "137:81:29",
								"text": "@title IImmutableState\n @notice Interface for the ImmutableState contract"
							},
							"fullyImplemented": false,
							"id": 4032,
							"linearizedBaseContracts": [
								4032
							],
							"name": "IImmutableState",
							"nameLocation": "228:15:29",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 4025,
										"nodeType": "StructuredDocumentation",
										"src": "250:47:29",
										"text": "@notice The Uniswap v4 PoolManager contract"
									},
									"functionSelector": "dc4c90d3",
									"id": 4031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "poolManager",
									"nameLocation": "311:11:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:2:29"
									},
									"returnParameters": {
										"id": 4030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4031,
												"src": "348:12:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolManager_$614",
													"typeString": "contract IPoolManager"
												},
												"typeName": {
													"id": 4028,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4027,
														"name": "IPoolManager",
														"nameLocations": [
															"348:12:29"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 614,
														"src": "348:12:29"
													},
													"referencedDeclaration": 614,
													"src": "348:12:29",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$614",
														"typeString": "contract IPoolManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:14:29"
									},
									"scope": 4032,
									"src": "302:60:29",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4033,
							"src": "218:146:29",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:333:29"
				},
				"id": 29
			},
			"https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v4-periphery/src/interfaces/IMsgSender.sol",
					"exportedSymbols": {
						"IMsgSender": [
							4042
						]
					},
					"id": 4043,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4034,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:30"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMsgSender",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4035,
								"nodeType": "StructuredDocumentation",
								"src": "57:90:30",
								"text": "@title IMsgSender\n @notice Interface for contracts that expose the original caller"
							},
							"fullyImplemented": false,
							"id": 4042,
							"linearizedBaseContracts": [
								4042
							],
							"name": "IMsgSender",
							"nameLocation": "157:10:30",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 4036,
										"nodeType": "StructuredDocumentation",
										"src": "174:370:30",
										"text": "@notice Returns the address of the original caller (msg.sender)\n @dev Uniswap v4 periphery contracts implement a callback pattern which lose\n the original msg.sender caller context. This view function provides a way for\n integrating contracts (e.g. hooks) to access the original caller address.\n @return The address of the original caller"
									},
									"functionSelector": "d737d0c7",
									"id": 4041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "msgSender",
									"nameLocation": "558:9:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:2:30"
									},
									"returnParameters": {
										"id": 4040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4041,
												"src": "593:7:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:9:30"
									},
									"scope": 4042,
									"src": "549:53:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4043,
							"src": "147:457:30",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:573:30"
				},
				"id": 30
			},
			"https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
					"exportedSymbols": {
						"Currency": [
							2214
						],
						"IImmutableState": [
							4032
						],
						"IV4Router": [
							4122
						],
						"PathKey": [
							4621
						],
						"PoolKey": [
							2560
						]
					},
					"id": 4123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4044,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:31"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolKey.sol",
							"file": "@uniswap/v4-core/src/types/PoolKey.sol",
							"id": 4046,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4123,
							"sourceUnit": 2561,
							"src": "57:63:31",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4045,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2560,
										"src": "65:7:31",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/Currency.sol",
							"file": "@uniswap/v4-core/src/types/Currency.sol",
							"id": 4048,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4123,
							"sourceUnit": 2509,
							"src": "121:65:31",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4047,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2214,
										"src": "129:8:31",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
							"file": "../libraries/PathKey.sol",
							"id": 4050,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4123,
							"sourceUnit": 4686,
							"src": "187:49:31",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4049,
										"name": "PathKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4621,
										"src": "195:7:31",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/interfaces/IImmutableState.sol",
							"file": "./IImmutableState.sol",
							"id": 4052,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4123,
							"sourceUnit": 4033,
							"src": "237:54:31",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4051,
										"name": "IImmutableState",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4032,
										"src": "245:15:31",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4054,
										"name": "IImmutableState",
										"nameLocations": [
											"385:15:31"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4032,
										"src": "385:15:31"
									},
									"id": 4055,
									"nodeType": "InheritanceSpecifier",
									"src": "385:15:31"
								}
							],
							"canonicalName": "IV4Router",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4053,
								"nodeType": "StructuredDocumentation",
								"src": "293:69:31",
								"text": "@title IV4Router\n @notice Interface for the V4Router contract"
							},
							"fullyImplemented": false,
							"id": 4122,
							"linearizedBaseContracts": [
								4122,
								4032
							],
							"name": "IV4Router",
							"nameLocation": "372:9:31",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 4056,
										"nodeType": "StructuredDocumentation",
										"src": "407:77:31",
										"text": "@notice Emitted when an exactInput swap does not receive its minAmountOut"
									},
									"errorSelector": "8b063d73",
									"id": 4062,
									"name": "V4TooLittleReceived",
									"nameLocation": "495:19:31",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4058,
												"mutability": "mutable",
												"name": "minAmountOutReceived",
												"nameLocation": "523:20:31",
												"nodeType": "VariableDeclaration",
												"scope": 4062,
												"src": "515:28:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4060,
												"mutability": "mutable",
												"name": "amountReceived",
												"nameLocation": "553:14:31",
												"nodeType": "VariableDeclaration",
												"scope": 4062,
												"src": "545:22:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:54:31"
									},
									"src": "489:80:31"
								},
								{
									"documentation": {
										"id": 4063,
										"nodeType": "StructuredDocumentation",
										"src": "574:78:31",
										"text": "@notice Emitted when an exactOutput is asked for more than its maxAmountIn"
									},
									"errorSelector": "12bacdd3",
									"id": 4069,
									"name": "V4TooMuchRequested",
									"nameLocation": "663:18:31",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4065,
												"mutability": "mutable",
												"name": "maxAmountInRequested",
												"nameLocation": "690:20:31",
												"nodeType": "VariableDeclaration",
												"scope": 4069,
												"src": "682:28:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4067,
												"mutability": "mutable",
												"name": "amountRequested",
												"nameLocation": "720:15:31",
												"nodeType": "VariableDeclaration",
												"scope": 4069,
												"src": "712:23:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "681:55:31"
									},
									"src": "657:80:31"
								},
								{
									"canonicalName": "IV4Router.ExactInputSingleParams",
									"documentation": {
										"id": 4070,
										"nodeType": "StructuredDocumentation",
										"src": "743:56:31",
										"text": "@notice Parameters for a single-hop exact-input swap"
									},
									"id": 4082,
									"members": [
										{
											"constant": false,
											"id": 4073,
											"mutability": "mutable",
											"name": "poolKey",
											"nameLocation": "852:7:31",
											"nodeType": "VariableDeclaration",
											"scope": 4082,
											"src": "844:15:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
												"typeString": "struct PoolKey"
											},
											"typeName": {
												"id": 4072,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 4071,
													"name": "PoolKey",
													"nameLocations": [
														"844:7:31"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2560,
													"src": "844:7:31"
												},
												"referencedDeclaration": 2560,
												"src": "844:7:31",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
													"typeString": "struct PoolKey"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4075,
											"mutability": "mutable",
											"name": "zeroForOne",
											"nameLocation": "874:10:31",
											"nodeType": "VariableDeclaration",
											"scope": 4082,
											"src": "869:15:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4074,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "869:4:31",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4077,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "902:8:31",
											"nodeType": "VariableDeclaration",
											"scope": 4082,
											"src": "894:16:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 4076,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "894:7:31",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4079,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "928:16:31",
											"nodeType": "VariableDeclaration",
											"scope": 4082,
											"src": "920:24:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 4078,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:31",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4081,
											"mutability": "mutable",
											"name": "hookData",
											"nameLocation": "960:8:31",
											"nodeType": "VariableDeclaration",
											"scope": 4082,
											"src": "954:14:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 4080,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "954:5:31",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "811:22:31",
									"nodeType": "StructDefinition",
									"scope": 4122,
									"src": "804:171:31",
									"visibility": "public"
								},
								{
									"canonicalName": "IV4Router.ExactInputParams",
									"documentation": {
										"id": 4083,
										"nodeType": "StructuredDocumentation",
										"src": "981:55:31",
										"text": "@notice Parameters for a multi-hop exact-input swap"
									},
									"id": 4095,
									"members": [
										{
											"constant": false,
											"id": 4086,
											"mutability": "mutable",
											"name": "currencyIn",
											"nameLocation": "1084:10:31",
											"nodeType": "VariableDeclaration",
											"scope": 4095,
											"src": "1075:19:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
												"typeString": "Currency"
											},
											"typeName": {
												"id": 4085,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 4084,
													"name": "Currency",
													"nameLocations": [
														"1075:8:31"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2214,
													"src": "1075:8:31"
												},
												"referencedDeclaration": 2214,
												"src": "1075:8:31",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4090,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1114:4:31",
											"nodeType": "VariableDeclaration",
											"scope": 4095,
											"src": "1104:14:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_PathKey_$4621_storage_$dyn_storage_ptr",
												"typeString": "struct PathKey[]"
											},
											"typeName": {
												"baseType": {
													"id": 4088,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4087,
														"name": "PathKey",
														"nameLocations": [
															"1104:7:31"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4621,
														"src": "1104:7:31"
													},
													"referencedDeclaration": 4621,
													"src": "1104:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PathKey_$4621_storage_ptr",
														"typeString": "struct PathKey"
													}
												},
												"id": 4089,
												"nodeType": "ArrayTypeName",
												"src": "1104:9:31",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PathKey_$4621_storage_$dyn_storage_ptr",
													"typeString": "struct PathKey[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4092,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1136:8:31",
											"nodeType": "VariableDeclaration",
											"scope": 4095,
											"src": "1128:16:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 4091,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1128:7:31",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4094,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1162:16:31",
											"nodeType": "VariableDeclaration",
											"scope": 4095,
											"src": "1154:24:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 4093,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1154:7:31",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "1048:16:31",
									"nodeType": "StructDefinition",
									"scope": 4122,
									"src": "1041:144:31",
									"visibility": "public"
								},
								{
									"canonicalName": "IV4Router.ExactOutputSingleParams",
									"documentation": {
										"id": 4096,
										"nodeType": "StructuredDocumentation",
										"src": "1191:57:31",
										"text": "@notice Parameters for a single-hop exact-output swap"
									},
									"id": 4108,
									"members": [
										{
											"constant": false,
											"id": 4099,
											"mutability": "mutable",
											"name": "poolKey",
											"nameLocation": "1302:7:31",
											"nodeType": "VariableDeclaration",
											"scope": 4108,
											"src": "1294:15:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
												"typeString": "struct PoolKey"
											},
											"typeName": {
												"id": 4098,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 4097,
													"name": "PoolKey",
													"nameLocations": [
														"1294:7:31"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2560,
													"src": "1294:7:31"
												},
												"referencedDeclaration": 2560,
												"src": "1294:7:31",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
													"typeString": "struct PoolKey"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4101,
											"mutability": "mutable",
											"name": "zeroForOne",
											"nameLocation": "1324:10:31",
											"nodeType": "VariableDeclaration",
											"scope": 4108,
											"src": "1319:15:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4100,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1319:4:31",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4103,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1352:9:31",
											"nodeType": "VariableDeclaration",
											"scope": 4108,
											"src": "1344:17:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 4102,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1344:7:31",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4105,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1379:15:31",
											"nodeType": "VariableDeclaration",
											"scope": 4108,
											"src": "1371:23:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 4104,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1371:7:31",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4107,
											"mutability": "mutable",
											"name": "hookData",
											"nameLocation": "1410:8:31",
											"nodeType": "VariableDeclaration",
											"scope": 4108,
											"src": "1404:14:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 4106,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1404:5:31",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1260:23:31",
									"nodeType": "StructDefinition",
									"scope": 4122,
									"src": "1253:172:31",
									"visibility": "public"
								},
								{
									"canonicalName": "IV4Router.ExactOutputParams",
									"documentation": {
										"id": 4109,
										"nodeType": "StructuredDocumentation",
										"src": "1431:56:31",
										"text": "@notice Parameters for a multi-hop exact-output swap"
									},
									"id": 4121,
									"members": [
										{
											"constant": false,
											"id": 4112,
											"mutability": "mutable",
											"name": "currencyOut",
											"nameLocation": "1536:11:31",
											"nodeType": "VariableDeclaration",
											"scope": 4121,
											"src": "1527:20:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
												"typeString": "Currency"
											},
											"typeName": {
												"id": 4111,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 4110,
													"name": "Currency",
													"nameLocations": [
														"1527:8:31"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2214,
													"src": "1527:8:31"
												},
												"referencedDeclaration": 2214,
												"src": "1527:8:31",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4116,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1567:4:31",
											"nodeType": "VariableDeclaration",
											"scope": 4121,
											"src": "1557:14:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_PathKey_$4621_storage_$dyn_storage_ptr",
												"typeString": "struct PathKey[]"
											},
											"typeName": {
												"baseType": {
													"id": 4114,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4113,
														"name": "PathKey",
														"nameLocations": [
															"1557:7:31"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4621,
														"src": "1557:7:31"
													},
													"referencedDeclaration": 4621,
													"src": "1557:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PathKey_$4621_storage_ptr",
														"typeString": "struct PathKey"
													}
												},
												"id": 4115,
												"nodeType": "ArrayTypeName",
												"src": "1557:9:31",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PathKey_$4621_storage_$dyn_storage_ptr",
													"typeString": "struct PathKey[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4118,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1589:9:31",
											"nodeType": "VariableDeclaration",
											"scope": 4121,
											"src": "1581:17:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 4117,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1581:7:31",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4120,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1616:15:31",
											"nodeType": "VariableDeclaration",
											"scope": 4121,
											"src": "1608:23:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 4119,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1608:7:31",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "1499:17:31",
									"nodeType": "StructDefinition",
									"scope": 4122,
									"src": "1492:146:31",
									"visibility": "public"
								}
							],
							"scope": 4123,
							"src": "362:1278:31",
							"usedErrors": [
								4062,
								4069
							],
							"usedEvents": []
						}
					],
					"src": "32:1609:31"
				},
				"id": 31
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/ActionConstants.sol",
					"exportedSymbols": {
						"ActionConstants": [
							4148
						]
					},
					"id": 4149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:32"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ActionConstants",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4125,
								"nodeType": "StructuredDocumentation",
								"src": "57:147:32",
								"text": "@title Action Constants\n @notice Common constants used in actions\n @dev Constants are gas efficient alternatives to their literal values"
							},
							"fullyImplemented": true,
							"id": 4148,
							"linearizedBaseContracts": [
								4148
							],
							"name": "ActionConstants",
							"nameLocation": "212:15:32",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 4126,
										"nodeType": "StructuredDocumentation",
										"src": "234:156:32",
										"text": "@notice used to signal that an action should use the input value of the open delta on the pool manager\n or of the balance that the contract holds"
									},
									"id": 4129,
									"mutability": "constant",
									"name": "OPEN_DELTA",
									"nameLocation": "421:10:32",
									"nodeType": "VariableDeclaration",
									"scope": 4148,
									"src": "395:40:32",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 4127,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "395:7:32",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 4128,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "434:1:32",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 4130,
										"nodeType": "StructuredDocumentation",
										"src": "441:187:32",
										"text": "@notice used to signal that an action should use the contract's entire balance of a currency\n This value is equivalent to 1<<255, i.e. a singular 1 in the most significant bit."
									},
									"id": 4133,
									"mutability": "constant",
									"name": "CONTRACT_BALANCE",
									"nameLocation": "659:16:32",
									"nodeType": "VariableDeclaration",
									"scope": 4148,
									"src": "633:111:32",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4131,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "633:7:32",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307838303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 4132,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "678:66:32",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 4134,
										"nodeType": "StructuredDocumentation",
										"src": "751:82:32",
										"text": "@notice used to signal that the recipient of an action should be the msgSender"
									},
									"id": 4140,
									"mutability": "constant",
									"name": "MSG_SENDER",
									"nameLocation": "864:10:32",
									"nodeType": "VariableDeclaration",
									"scope": 4148,
									"src": "838:49:32",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4135,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "838:7:32",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "31",
												"id": 4138,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "885:1:32",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												}
											],
											"id": 4137,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "877:7:32",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 4136,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "877:7:32",
												"typeDescriptions": {}
											}
										},
										"id": 4139,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "877:10:32",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 4141,
										"nodeType": "StructuredDocumentation",
										"src": "894:86:32",
										"text": "@notice used to signal that the recipient of an action should be the address(this)"
									},
									"id": 4147,
									"mutability": "constant",
									"name": "ADDRESS_THIS",
									"nameLocation": "1011:12:32",
									"nodeType": "VariableDeclaration",
									"scope": 4148,
									"src": "985:51:32",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4142,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "985:7:32",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "32",
												"id": 4145,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1034:1:32",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												}
											],
											"id": 4144,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1026:7:32",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 4143,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1026:7:32",
												"typeDescriptions": {}
											}
										},
										"id": 4146,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1026:10:32",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 4149,
							"src": "204:835:32",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1008:32"
				},
				"id": 32
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/Actions.sol",
					"exportedSymbols": {
						"Actions": [
							4227
						]
					},
					"id": 4228,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4150,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:33"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Actions",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4151,
								"nodeType": "StructuredDocumentation",
								"src": "57:334:33",
								"text": "@notice Library to define different pool actions.\n @dev These are suggested common commands, however additional commands should be defined as required\n Some of these actions are not supported in the Router contracts or Position Manager contracts, but are left as they may be helpful commands for other peripheral contracts."
							},
							"fullyImplemented": true,
							"id": 4227,
							"linearizedBaseContracts": [
								4227
							],
							"name": "Actions",
							"nameLocation": "399:7:33",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4154,
									"mutability": "constant",
									"name": "INCREASE_LIQUIDITY",
									"nameLocation": "484:18:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "458:51:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4152,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "458:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 4153,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "505:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4157,
									"mutability": "constant",
									"name": "DECREASE_LIQUIDITY",
									"nameLocation": "541:18:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "515:51:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4155,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "515:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 4156,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "562:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4160,
									"mutability": "constant",
									"name": "MINT_POSITION",
									"nameLocation": "598:13:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "572:46:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4158,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "572:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783032",
										"id": 4159,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "614:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "0x02"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4163,
									"mutability": "constant",
									"name": "BURN_POSITION",
									"nameLocation": "650:13:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "624:46:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "624:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783033",
										"id": 4162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "666:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "0x03"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4166,
									"mutability": "constant",
									"name": "INCREASE_LIQUIDITY_FROM_DELTAS",
									"nameLocation": "702:30:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "676:63:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4164,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "676:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783034",
										"id": 4165,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "735:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "0x04"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4169,
									"mutability": "constant",
									"name": "MINT_POSITION_FROM_DELTAS",
									"nameLocation": "771:25:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "745:58:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4167,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "745:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783035",
										"id": 4168,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "799:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "0x05"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4172,
									"mutability": "constant",
									"name": "SWAP_EXACT_IN_SINGLE",
									"nameLocation": "852:20:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "826:53:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4170,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "826:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783036",
										"id": 4171,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "875:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "0x06"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4175,
									"mutability": "constant",
									"name": "SWAP_EXACT_IN",
									"nameLocation": "911:13:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "885:46:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4173,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783037",
										"id": 4174,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "927:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7_by_1",
											"typeString": "int_const 7"
										},
										"value": "0x07"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4178,
									"mutability": "constant",
									"name": "SWAP_EXACT_OUT_SINGLE",
									"nameLocation": "963:21:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "937:54:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4176,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "937:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783038",
										"id": 4177,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "987:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "0x08"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4181,
									"mutability": "constant",
									"name": "SWAP_EXACT_OUT",
									"nameLocation": "1023:14:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "997:47:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4179,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "997:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783039",
										"id": 4180,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1040:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9_by_1",
											"typeString": "int_const 9"
										},
										"value": "0x09"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4184,
									"mutability": "constant",
									"name": "DONATE",
									"nameLocation": "1159:6:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1133:39:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4182,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1133:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783061",
										"id": 4183,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1168:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "0x0a"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4187,
									"mutability": "constant",
									"name": "SETTLE",
									"nameLocation": "1263:6:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1237:39:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4185,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1237:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783062",
										"id": 4186,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1272:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_11_by_1",
											"typeString": "int_const 11"
										},
										"value": "0x0b"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4190,
									"mutability": "constant",
									"name": "SETTLE_ALL",
									"nameLocation": "1308:10:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1282:43:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4188,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1282:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783063",
										"id": 4189,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1321:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "0x0c"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4193,
									"mutability": "constant",
									"name": "SETTLE_PAIR",
									"nameLocation": "1357:11:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1331:44:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1331:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783064",
										"id": 4192,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1371:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_13_by_1",
											"typeString": "int_const 13"
										},
										"value": "0x0d"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4196,
									"mutability": "constant",
									"name": "TAKE",
									"nameLocation": "1421:4:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1395:37:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4194,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1395:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783065",
										"id": 4195,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1428:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_14_by_1",
											"typeString": "int_const 14"
										},
										"value": "0x0e"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4199,
									"mutability": "constant",
									"name": "TAKE_ALL",
									"nameLocation": "1464:8:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1438:41:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4197,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1438:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783066",
										"id": 4198,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1475:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "0x0f"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4202,
									"mutability": "constant",
									"name": "TAKE_PORTION",
									"nameLocation": "1511:12:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1485:45:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4200,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1485:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783130",
										"id": 4201,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1526:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16_by_1",
											"typeString": "int_const 16"
										},
										"value": "0x10"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4205,
									"mutability": "constant",
									"name": "TAKE_PAIR",
									"nameLocation": "1562:9:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1536:42:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4203,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1536:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 4204,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1574:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4208,
									"mutability": "constant",
									"name": "CLOSE_CURRENCY",
									"nameLocation": "1611:14:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1585:47:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4206,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 4207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1628:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4211,
									"mutability": "constant",
									"name": "CLEAR_OR_TAKE",
									"nameLocation": "1664:13:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1638:46:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1638:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783133",
										"id": 4210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1680:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_19_by_1",
											"typeString": "int_const 19"
										},
										"value": "0x13"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4214,
									"mutability": "constant",
									"name": "SWEEP",
									"nameLocation": "1716:5:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1690:38:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1690:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783134",
										"id": 4213,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1724:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "0x14"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4217,
									"mutability": "constant",
									"name": "WRAP",
									"nameLocation": "1761:4:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1735:37:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4215,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1735:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783135",
										"id": 4216,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1768:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_21_by_1",
											"typeString": "int_const 21"
										},
										"value": "0x15"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4220,
									"mutability": "constant",
									"name": "UNWRAP",
									"nameLocation": "1804:6:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1778:39:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4218,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1778:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783136",
										"id": 4219,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1813:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_22_by_1",
											"typeString": "int_const 22"
										},
										"value": "0x16"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4223,
									"mutability": "constant",
									"name": "MINT_6909",
									"nameLocation": "1963:9:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1937:42:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4221,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1937:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783137",
										"id": 4222,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1975:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_23_by_1",
											"typeString": "int_const 23"
										},
										"value": "0x17"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4226,
									"mutability": "constant",
									"name": "BURN_6909",
									"nameLocation": "2011:9:33",
									"nodeType": "VariableDeclaration",
									"scope": 4227,
									"src": "1985:42:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1985:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783138",
										"id": 4225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2023:4:33",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24_by_1",
											"typeString": "int_const 24"
										},
										"value": "0x18"
									},
									"visibility": "internal"
								}
							],
							"scope": 4228,
							"src": "391:1639:33",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1999:33"
				},
				"id": 33
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/BipsLibrary.sol",
					"exportedSymbols": {
						"BipsLibrary": [
							4262
						]
					},
					"id": 4263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4229,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:34"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BipsLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4230,
								"nodeType": "StructuredDocumentation",
								"src": "57:65:34",
								"text": "@title For calculating a percentage of an amount, using bips"
							},
							"fullyImplemented": true,
							"id": 4262,
							"linearizedBaseContracts": [
								4262
							],
							"name": "BipsLibrary",
							"nameLocation": "130:11:34",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4233,
									"mutability": "constant",
									"name": "BPS_DENOMINATOR",
									"nameLocation": "174:15:34",
									"nodeType": "VariableDeclaration",
									"scope": 4262,
									"src": "148:50:34",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4231,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "148:7:34",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31305f303030",
										"id": 4232,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "192:6:34",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10_000"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 4234,
										"nodeType": "StructuredDocumentation",
										"src": "205:58:34",
										"text": "@notice emitted when an invalid percentage is provided"
									},
									"errorSelector": "deaa01e6",
									"id": 4236,
									"name": "InvalidBips",
									"nameLocation": "274:11:34",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:2:34"
									},
									"src": "268:20:34"
								},
								{
									"body": {
										"id": 4260,
										"nodeType": "Block",
										"src": "507:115:34",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4246,
														"name": "bips",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4241,
														"src": "521:4:34",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 4247,
														"name": "BPS_DENOMINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4233,
														"src": "528:15:34",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "521:22:34",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4252,
												"nodeType": "IfStatement",
												"src": "517:48:34",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4249,
															"name": "InvalidBips",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4236,
															"src": "552:11:34",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "552:13:34",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4251,
													"nodeType": "RevertStatement",
													"src": "545:20:34"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4253,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4239,
																	"src": "583:6:34",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 4254,
																	"name": "bips",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4241,
																	"src": "592:4:34",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "583:13:34",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4256,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "582:15:34",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 4257,
														"name": "BPS_DENOMINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4233,
														"src": "600:15:34",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "582:33:34",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4245,
												"id": 4259,
												"nodeType": "Return",
												"src": "575:40:34"
											}
										]
									},
									"documentation": {
										"id": 4237,
										"nodeType": "StructuredDocumentation",
										"src": "294:120:34",
										"text": "@param amount The total amount to calculate a percentage of\n @param bips The percentage to calculate, in bips"
									},
									"id": 4261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePortion",
									"nameLocation": "428:16:34",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4239,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "453:6:34",
												"nodeType": "VariableDeclaration",
												"scope": 4261,
												"src": "445:14:34",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:34",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4241,
												"mutability": "mutable",
												"name": "bips",
												"nameLocation": "469:4:34",
												"nodeType": "VariableDeclaration",
												"scope": 4261,
												"src": "461:12:34",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:34",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:30:34"
									},
									"returnParameters": {
										"id": 4245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4261,
												"src": "498:7:34",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:34",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:9:34"
									},
									"scope": 4262,
									"src": "419:203:34",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4263,
							"src": "122:502:34",
							"usedErrors": [
								4236
							],
							"usedEvents": []
						}
					],
					"src": "32:593:34"
				},
				"id": 34
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/CalldataDecoder.sol",
					"exportedSymbols": {
						"CalldataDecoder": [
							4600
						],
						"Currency": [
							2214
						],
						"IV4Router": [
							4122
						],
						"PoolKey": [
							2560
						]
					},
					"id": 4601,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:35"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/Currency.sol",
							"file": "@uniswap/v4-core/src/types/Currency.sol",
							"id": 4266,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4601,
							"sourceUnit": 2509,
							"src": "57:65:35",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4265,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2214,
										"src": "65:8:35",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v4-periphery/src/interfaces/IV4Router.sol",
							"file": "../interfaces/IV4Router.sol",
							"id": 4268,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4601,
							"sourceUnit": 4123,
							"src": "123:54:35",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4267,
										"name": "IV4Router",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4122,
										"src": "131:9:35",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolKey.sol",
							"file": "@uniswap/v4-core/src/types/PoolKey.sol",
							"id": 4270,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4601,
							"sourceUnit": 2561,
							"src": "178:63:35",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4269,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2560,
										"src": "186:7:35",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CalldataDecoder",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4271,
								"nodeType": "StructuredDocumentation",
								"src": "243:48:35",
								"text": "@title Library for abi decoding in calldata"
							},
							"fullyImplemented": true,
							"id": 4600,
							"linearizedBaseContracts": [
								4600
							],
							"name": "CalldataDecoder",
							"nameLocation": "299:15:35",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 4274,
									"libraryName": {
										"id": 4272,
										"name": "CalldataDecoder",
										"nameLocations": [
											"327:15:35"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4600,
										"src": "327:15:35"
									},
									"nodeType": "UsingForDirective",
									"src": "321:32:35",
									"typeName": {
										"id": 4273,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "347:5:35",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"errorSelector": "3b99b53d",
									"id": 4276,
									"name": "SliceOutOfBounds",
									"nameLocation": "365:16:35",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:35"
									},
									"src": "359:25:35"
								},
								{
									"constant": true,
									"documentation": {
										"id": 4277,
										"nodeType": "StructuredDocumentation",
										"src": "390:363:35",
										"text": "@notice mask used for offsets and lengths to ensure no overflow\n @dev no sane abi encoding will pass in an offset or length greater than type(uint32).max\n      (note that this does deviate from standard solidity behavior and offsets/lengths will\n      be interpreted as mod type(uint32).max which will only impact malicious/buggy callers)"
									},
									"id": 4280,
									"mutability": "constant",
									"name": "OFFSET_OR_LENGTH_MASK",
									"nameLocation": "775:21:35",
									"nodeType": "VariableDeclaration",
									"scope": 4600,
									"src": "758:51:35",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4278,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "758:7:35",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30786666666666666666",
										"id": 4279,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "799:10:35",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4294967295_by_1",
											"typeString": "int_const 4294967295"
										},
										"value": "0xffffffff"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 4283,
									"mutability": "constant",
									"name": "OFFSET_OR_LENGTH_MASK_AND_WORD_ALIGN",
									"nameLocation": "832:36:35",
									"nodeType": "VariableDeclaration",
									"scope": 4600,
									"src": "815:66:35",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4281,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "815:7:35",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30786666666666666530",
										"id": 4282,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "871:10:35",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4294967264_by_1",
											"typeString": "int_const 4294967264"
										},
										"value": "0xffffffe0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 4284,
										"nodeType": "StructuredDocumentation",
										"src": "888:85:35",
										"text": "@notice equivalent to SliceOutOfBounds.selector, stored in least-significant bits"
									},
									"id": 4287,
									"mutability": "constant",
									"name": "SLICE_ERROR_SELECTOR",
									"nameLocation": "995:20:35",
									"nodeType": "VariableDeclaration",
									"scope": 4600,
									"src": "978:50:35",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4285,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "978:7:35",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783362393962353364",
										"id": 4286,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1018:10:35",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_999929149_by_1",
											"typeString": "int_const 999929149"
										},
										"value": "0x3b99b53d"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4299,
										"nodeType": "Block",
										"src": "1301:2473:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1336:2432:35",
													"nodeType": "YulBlock",
													"src": "1336:2432:35",
													"statements": [
														{
															"nativeSrc": "1684:57:35",
															"nodeType": "YulVariableDeclaration",
															"src": "1684:57:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_bytes.offset",
																				"nativeSrc": "1720:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "1720:13:35"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1707:12:35",
																			"nodeType": "YulIdentifier",
																			"src": "1707:12:35"
																		},
																		"nativeSrc": "1707:27:35",
																		"nodeType": "YulFunctionCall",
																		"src": "1707:27:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:4:35",
																		"nodeType": "YulLiteral",
																		"src": "1736:4:35",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "xor",
																	"nativeSrc": "1703:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:35"
																},
																"nativeSrc": "1703:38:35",
																"nodeType": "YulFunctionCall",
																"src": "1703:38:35"
															},
															"variables": [
																{
																	"name": "invalidData",
																	"nativeSrc": "1688:11:35",
																	"nodeType": "YulTypedName",
																	"src": "1688:11:35",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1754:42:35",
															"nodeType": "YulAssignment",
															"src": "1754:42:35",
															"value": {
																"arguments": [
																	{
																		"name": "_bytes.offset",
																		"nativeSrc": "1776:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "1776:13:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1791:4:35",
																		"nodeType": "YulLiteral",
																		"src": "1791:4:35",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:35"
																},
																"nativeSrc": "1772:24:35",
																"nodeType": "YulFunctionCall",
																"src": "1772:24:35"
															},
															"variableNames": [
																{
																	"name": "actions.offset",
																	"nativeSrc": "1754:14:35",
																	"nodeType": "YulIdentifier",
																	"src": "1754:14:35"
																}
															]
														},
														{
															"nativeSrc": "1809:84:35",
															"nodeType": "YulAssignment",
															"src": "1809:84:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes.offset",
																						"nativeSrc": "1848:13:35",
																						"nodeType": "YulIdentifier",
																						"src": "1848:13:35"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1863:4:35",
																						"nodeType": "YulLiteral",
																						"src": "1863:4:35",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1844:3:35",
																					"nodeType": "YulIdentifier",
																					"src": "1844:3:35"
																				},
																				"nativeSrc": "1844:24:35",
																				"nodeType": "YulFunctionCall",
																				"src": "1844:24:35"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1831:12:35",
																			"nodeType": "YulIdentifier",
																			"src": "1831:12:35"
																		},
																		"nativeSrc": "1831:38:35",
																		"nodeType": "YulFunctionCall",
																		"src": "1831:38:35"
																	},
																	{
																		"name": "OFFSET_OR_LENGTH_MASK",
																		"nativeSrc": "1871:21:35",
																		"nodeType": "YulIdentifier",
																		"src": "1871:21:35"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1827:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "1827:3:35"
																},
																"nativeSrc": "1827:66:35",
																"nodeType": "YulFunctionCall",
																"src": "1827:66:35"
															},
															"variableNames": [
																{
																	"name": "actions.length",
																	"nativeSrc": "1809:14:35",
																	"nodeType": "YulIdentifier",
																	"src": "1809:14:35"
																}
															]
														},
														{
															"nativeSrc": "2015:105:35",
															"nodeType": "YulVariableDeclaration",
															"src": "2015:105:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "actions.length",
																						"nativeSrc": "2053:14:35",
																						"nodeType": "YulIdentifier",
																						"src": "2053:14:35"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2069:4:35",
																						"nodeType": "YulLiteral",
																						"src": "2069:4:35",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2049:3:35",
																					"nodeType": "YulIdentifier",
																					"src": "2049:3:35"
																				},
																				"nativeSrc": "2049:25:35",
																				"nodeType": "YulFunctionCall",
																				"src": "2049:25:35"
																			},
																			{
																				"name": "OFFSET_OR_LENGTH_MASK_AND_WORD_ALIGN",
																				"nativeSrc": "2076:36:35",
																				"nodeType": "YulIdentifier",
																				"src": "2076:36:35"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2045:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "2045:3:35"
																		},
																		"nativeSrc": "2045:68:35",
																		"nodeType": "YulFunctionCall",
																		"src": "2045:68:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2115:4:35",
																		"nodeType": "YulLiteral",
																		"src": "2115:4:35",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2041:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "2041:3:35"
																},
																"nativeSrc": "2041:79:35",
																"nodeType": "YulFunctionCall",
																"src": "2041:79:35"
															},
															"variables": [
																{
																	"name": "paramsLengthOffset",
																	"nativeSrc": "2019:18:35",
																	"nodeType": "YulTypedName",
																	"src": "2019:18:35",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2193:95:35",
															"nodeType": "YulAssignment",
															"src": "2193:95:35",
															"value": {
																"arguments": [
																	{
																		"name": "invalidData",
																		"nativeSrc": "2211:11:35",
																		"nodeType": "YulIdentifier",
																		"src": "2211:11:35"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_bytes.offset",
																								"nativeSrc": "2245:13:35",
																								"nodeType": "YulIdentifier",
																								"src": "2245:13:35"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2260:4:35",
																								"nodeType": "YulLiteral",
																								"src": "2260:4:35",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2241:3:35",
																							"nodeType": "YulIdentifier",
																							"src": "2241:3:35"
																						},
																						"nativeSrc": "2241:24:35",
																						"nodeType": "YulFunctionCall",
																						"src": "2241:24:35"
																					}
																				],
																				"functionName": {
																					"name": "calldataload",
																					"nativeSrc": "2228:12:35",
																					"nodeType": "YulIdentifier",
																					"src": "2228:12:35"
																				},
																				"nativeSrc": "2228:38:35",
																				"nodeType": "YulFunctionCall",
																				"src": "2228:38:35"
																			},
																			{
																				"name": "paramsLengthOffset",
																				"nativeSrc": "2268:18:35",
																				"nodeType": "YulIdentifier",
																				"src": "2268:18:35"
																			}
																		],
																		"functionName": {
																			"name": "xor",
																			"nativeSrc": "2224:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "2224:3:35"
																		},
																		"nativeSrc": "2224:63:35",
																		"nodeType": "YulFunctionCall",
																		"src": "2224:63:35"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2208:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "2208:2:35"
																},
																"nativeSrc": "2208:80:35",
																"nodeType": "YulFunctionCall",
																"src": "2208:80:35"
															},
															"variableNames": [
																{
																	"name": "invalidData",
																	"nativeSrc": "2193:11:35",
																	"nodeType": "YulIdentifier",
																	"src": "2193:11:35"
																}
															]
														},
														{
															"nativeSrc": "2301:65:35",
															"nodeType": "YulVariableDeclaration",
															"src": "2301:65:35",
															"value": {
																"arguments": [
																	{
																		"name": "_bytes.offset",
																		"nativeSrc": "2332:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "2332:13:35"
																	},
																	{
																		"name": "paramsLengthOffset",
																		"nativeSrc": "2347:18:35",
																		"nodeType": "YulIdentifier",
																		"src": "2347:18:35"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2328:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "2328:3:35"
																},
																"nativeSrc": "2328:38:35",
																"nodeType": "YulFunctionCall",
																"src": "2328:38:35"
															},
															"variables": [
																{
																	"name": "paramsLengthPointer",
																	"nativeSrc": "2305:19:35",
																	"nodeType": "YulTypedName",
																	"src": "2305:19:35",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2379:78:35",
															"nodeType": "YulAssignment",
															"src": "2379:78:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "paramsLengthPointer",
																				"nativeSrc": "2413:19:35",
																				"nodeType": "YulIdentifier",
																				"src": "2413:19:35"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2400:12:35",
																			"nodeType": "YulIdentifier",
																			"src": "2400:12:35"
																		},
																		"nativeSrc": "2400:33:35",
																		"nodeType": "YulFunctionCall",
																		"src": "2400:33:35"
																	},
																	{
																		"name": "OFFSET_OR_LENGTH_MASK",
																		"nativeSrc": "2435:21:35",
																		"nodeType": "YulIdentifier",
																		"src": "2435:21:35"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2396:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "2396:3:35"
																},
																"nativeSrc": "2396:61:35",
																"nodeType": "YulFunctionCall",
																"src": "2396:61:35"
															},
															"variableNames": [
																{
																	"name": "params.length",
																	"nativeSrc": "2379:13:35",
																	"nodeType": "YulIdentifier",
																	"src": "2379:13:35"
																}
															]
														},
														{
															"nativeSrc": "2470:47:35",
															"nodeType": "YulAssignment",
															"src": "2470:47:35",
															"value": {
																"arguments": [
																	{
																		"name": "paramsLengthPointer",
																		"nativeSrc": "2491:19:35",
																		"nodeType": "YulIdentifier",
																		"src": "2491:19:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2512:4:35",
																		"nodeType": "YulLiteral",
																		"src": "2512:4:35",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2487:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "2487:3:35"
																},
																"nativeSrc": "2487:30:35",
																"nodeType": "YulFunctionCall",
																"src": "2487:30:35"
															},
															"variableNames": [
																{
																	"name": "params.offset",
																	"nativeSrc": "2470:13:35",
																	"nodeType": "YulIdentifier",
																	"src": "2470:13:35"
																}
															]
														},
														{
															"nativeSrc": "2700:39:35",
															"nodeType": "YulVariableDeclaration",
															"src": "2700:39:35",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2722:1:35",
																		"nodeType": "YulLiteral",
																		"src": "2722:1:35",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "params.length",
																		"nativeSrc": "2725:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "2725:13:35"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2718:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "2718:3:35"
																},
																"nativeSrc": "2718:21:35",
																"nodeType": "YulFunctionCall",
																"src": "2718:21:35"
															},
															"variables": [
																{
																	"name": "tailOffset",
																	"nativeSrc": "2704:10:35",
																	"nodeType": "YulTypedName",
																	"src": "2704:10:35",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2752:32:35",
															"nodeType": "YulVariableDeclaration",
															"src": "2752:32:35",
															"value": {
																"name": "tailOffset",
																"nativeSrc": "2774:10:35",
																"nodeType": "YulIdentifier",
																"src": "2774:10:35"
															},
															"variables": [
																{
																	"name": "expectedOffset",
																	"nativeSrc": "2756:14:35",
																	"nodeType": "YulTypedName",
																	"src": "2756:14:35",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2875:560:35",
																"nodeType": "YulBlock",
																"src": "2875:560:35",
																"statements": [
																	{
																		"nativeSrc": "2893:64:35",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2893:64:35",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "params.offset",
																							"nativeSrc": "2934:13:35",
																							"nodeType": "YulIdentifier",
																							"src": "2934:13:35"
																						},
																						{
																							"name": "offset",
																							"nativeSrc": "2949:6:35",
																							"nodeType": "YulIdentifier",
																							"src": "2949:6:35"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2930:3:35",
																						"nodeType": "YulIdentifier",
																						"src": "2930:3:35"
																					},
																					"nativeSrc": "2930:26:35",
																					"nodeType": "YulFunctionCall",
																					"src": "2930:26:35"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "2917:12:35",
																				"nodeType": "YulIdentifier",
																				"src": "2917:12:35"
																			},
																			"nativeSrc": "2917:40:35",
																			"nodeType": "YulFunctionCall",
																			"src": "2917:40:35"
																		},
																		"variables": [
																			{
																				"name": "itemLengthOffset",
																				"nativeSrc": "2897:16:35",
																				"nodeType": "YulTypedName",
																				"src": "2897:16:35",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3065:69:35",
																		"nodeType": "YulAssignment",
																		"src": "3065:69:35",
																		"value": {
																			"arguments": [
																				{
																					"name": "invalidData",
																					"nativeSrc": "3083:11:35",
																					"nodeType": "YulIdentifier",
																					"src": "3083:11:35"
																				},
																				{
																					"arguments": [
																						{
																							"name": "itemLengthOffset",
																							"nativeSrc": "3100:16:35",
																							"nodeType": "YulIdentifier",
																							"src": "3100:16:35"
																						},
																						{
																							"name": "expectedOffset",
																							"nativeSrc": "3118:14:35",
																							"nodeType": "YulIdentifier",
																							"src": "3118:14:35"
																						}
																					],
																					"functionName": {
																						"name": "xor",
																						"nativeSrc": "3096:3:35",
																						"nodeType": "YulIdentifier",
																						"src": "3096:3:35"
																					},
																					"nativeSrc": "3096:37:35",
																					"nodeType": "YulFunctionCall",
																					"src": "3096:37:35"
																				}
																			],
																			"functionName": {
																				"name": "or",
																				"nativeSrc": "3080:2:35",
																				"nodeType": "YulIdentifier",
																				"src": "3080:2:35"
																			},
																			"nativeSrc": "3080:54:35",
																			"nodeType": "YulFunctionCall",
																			"src": "3080:54:35"
																		},
																		"variableNames": [
																			{
																				"name": "invalidData",
																				"nativeSrc": "3065:11:35",
																				"nodeType": "YulIdentifier",
																				"src": "3065:11:35"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3151:61:35",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3151:61:35",
																		"value": {
																			"arguments": [
																				{
																					"name": "params.offset",
																					"nativeSrc": "3180:13:35",
																					"nodeType": "YulIdentifier",
																					"src": "3180:13:35"
																				},
																				{
																					"name": "itemLengthOffset",
																					"nativeSrc": "3195:16:35",
																					"nodeType": "YulIdentifier",
																					"src": "3195:16:35"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3176:3:35",
																				"nodeType": "YulIdentifier",
																				"src": "3176:3:35"
																			},
																			"nativeSrc": "3176:36:35",
																			"nodeType": "YulFunctionCall",
																			"src": "3176:36:35"
																		},
																		"variables": [
																			{
																				"name": "itemLengthPointer",
																				"nativeSrc": "3155:17:35",
																				"nodeType": "YulTypedName",
																				"src": "3155:17:35",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3229:130:35",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3229:130:35",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "itemLengthPointer",
																											"nativeSrc": "3288:17:35",
																											"nodeType": "YulIdentifier",
																											"src": "3288:17:35"
																										}
																									],
																									"functionName": {
																										"name": "calldataload",
																										"nativeSrc": "3275:12:35",
																										"nodeType": "YulIdentifier",
																										"src": "3275:12:35"
																									},
																									"nativeSrc": "3275:31:35",
																									"nodeType": "YulFunctionCall",
																									"src": "3275:31:35"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3308:4:35",
																									"nodeType": "YulLiteral",
																									"src": "3308:4:35",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3271:3:35",
																								"nodeType": "YulIdentifier",
																								"src": "3271:3:35"
																							},
																							"nativeSrc": "3271:42:35",
																							"nodeType": "YulFunctionCall",
																							"src": "3271:42:35"
																						},
																						{
																							"name": "OFFSET_OR_LENGTH_MASK_AND_WORD_ALIGN",
																							"nativeSrc": "3315:36:35",
																							"nodeType": "YulIdentifier",
																							"src": "3315:36:35"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3267:3:35",
																						"nodeType": "YulIdentifier",
																						"src": "3267:3:35"
																					},
																					"nativeSrc": "3267:85:35",
																					"nodeType": "YulFunctionCall",
																					"src": "3267:85:35"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3354:4:35",
																					"nodeType": "YulLiteral",
																					"src": "3354:4:35",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3263:3:35",
																				"nodeType": "YulIdentifier",
																				"src": "3263:3:35"
																			},
																			"nativeSrc": "3263:96:35",
																			"nodeType": "YulFunctionCall",
																			"src": "3263:96:35"
																		},
																		"variables": [
																			{
																				"name": "length",
																				"nativeSrc": "3233:6:35",
																				"nodeType": "YulTypedName",
																				"src": "3233:6:35",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3376:45:35",
																		"nodeType": "YulAssignment",
																		"src": "3376:45:35",
																		"value": {
																			"arguments": [
																				{
																					"name": "expectedOffset",
																					"nativeSrc": "3398:14:35",
																					"nodeType": "YulIdentifier",
																					"src": "3398:14:35"
																				},
																				{
																					"name": "length",
																					"nativeSrc": "3414:6:35",
																					"nodeType": "YulIdentifier",
																					"src": "3414:6:35"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3394:3:35",
																				"nodeType": "YulIdentifier",
																				"src": "3394:3:35"
																			},
																			"nativeSrc": "3394:27:35",
																			"nodeType": "YulFunctionCall",
																			"src": "3394:27:35"
																		},
																		"variableNames": [
																			{
																				"name": "expectedOffset",
																				"nativeSrc": "3376:14:35",
																				"nodeType": "YulIdentifier",
																				"src": "3376:14:35"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2825:6:35",
																		"nodeType": "YulIdentifier",
																		"src": "2825:6:35"
																	},
																	{
																		"name": "tailOffset",
																		"nativeSrc": "2833:10:35",
																		"nodeType": "YulIdentifier",
																		"src": "2833:10:35"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2822:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "2822:2:35"
																},
																"nativeSrc": "2822:22:35",
																"nodeType": "YulFunctionCall",
																"src": "2822:22:35"
															},
															"nativeSrc": "2798:637:35",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2845:29:35",
																"nodeType": "YulBlock",
																"src": "2845:29:35",
																"statements": [
																	{
																		"nativeSrc": "2847:25:35",
																		"nodeType": "YulAssignment",
																		"src": "2847:25:35",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nativeSrc": "2861:6:35",
																					"nodeType": "YulIdentifier",
																					"src": "2861:6:35"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2869:2:35",
																					"nodeType": "YulLiteral",
																					"src": "2869:2:35",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2857:3:35",
																				"nodeType": "YulIdentifier",
																				"src": "2857:3:35"
																			},
																			"nativeSrc": "2857:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "2857:15:35"
																		},
																		"variableNames": [
																			{
																				"name": "offset",
																				"nativeSrc": "2847:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:35"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2802:19:35",
																"nodeType": "YulBlock",
																"src": "2802:19:35",
																"statements": [
																	{
																		"nativeSrc": "2804:15:35",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2804:15:35",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2818:1:35",
																			"nodeType": "YulLiteral",
																			"src": "2818:1:35",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "offset",
																				"nativeSrc": "2808:6:35",
																				"nodeType": "YulTypedName",
																				"src": "2808:6:35",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2798:637:35"
														},
														{
															"body": {
																"nativeSrc": "3663:95:35",
																"nodeType": "YulBlock",
																"src": "3663:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3688:1:35",
																					"nodeType": "YulLiteral",
																					"src": "3688:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "3691:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "3691:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3681:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:35"
																			},
																			"nativeSrc": "3681:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "3681:31:35"
																		},
																		"nativeSrc": "3681:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "3681:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3736:4:35",
																					"nodeType": "YulLiteral",
																					"src": "3736:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3742:1:35",
																					"nodeType": "YulLiteral",
																					"src": "3742:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3729:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "3729:6:35"
																			},
																			"nativeSrc": "3729:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "3729:15:35"
																		},
																		"nativeSrc": "3729:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "3729:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "invalidData",
																		"nativeSrc": "3575:11:35",
																		"nodeType": "YulIdentifier",
																		"src": "3575:11:35"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes.length",
																						"nativeSrc": "3595:13:35",
																						"nodeType": "YulIdentifier",
																						"src": "3595:13:35"
																					},
																					{
																						"name": "_bytes.offset",
																						"nativeSrc": "3610:13:35",
																						"nodeType": "YulIdentifier",
																						"src": "3610:13:35"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3591:3:35",
																					"nodeType": "YulIdentifier",
																					"src": "3591:3:35"
																				},
																				"nativeSrc": "3591:33:35",
																				"nodeType": "YulFunctionCall",
																				"src": "3591:33:35"
																			},
																			{
																				"arguments": [
																					{
																						"name": "params.offset",
																						"nativeSrc": "3630:13:35",
																						"nodeType": "YulIdentifier",
																						"src": "3630:13:35"
																					},
																					{
																						"name": "expectedOffset",
																						"nativeSrc": "3645:14:35",
																						"nodeType": "YulIdentifier",
																						"src": "3645:14:35"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3626:3:35",
																					"nodeType": "YulIdentifier",
																					"src": "3626:3:35"
																				},
																				"nativeSrc": "3626:34:35",
																				"nodeType": "YulFunctionCall",
																				"src": "3626:34:35"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3588:2:35",
																			"nodeType": "YulIdentifier",
																			"src": "3588:2:35"
																		},
																		"nativeSrc": "3588:73:35",
																		"nodeType": "YulFunctionCall",
																		"src": "3588:73:35"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3572:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "3572:2:35"
																},
																"nativeSrc": "3572:90:35",
																"nodeType": "YulFunctionCall",
																"src": "3572:90:35"
															},
															"nativeSrc": "3569:189:35",
															"nodeType": "YulIf",
															"src": "3569:189:35"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4280,
														"isOffset": false,
														"isSlot": false,
														"src": "1871:21:35",
														"valueSize": 1
													},
													{
														"declaration": 4280,
														"isOffset": false,
														"isSlot": false,
														"src": "2435:21:35",
														"valueSize": 1
													},
													{
														"declaration": 4283,
														"isOffset": false,
														"isSlot": false,
														"src": "2076:36:35",
														"valueSize": 1
													},
													{
														"declaration": 4283,
														"isOffset": false,
														"isSlot": false,
														"src": "3315:36:35",
														"valueSize": 1
													},
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "3691:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4290,
														"isOffset": false,
														"isSlot": false,
														"src": "3595:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4290,
														"isOffset": true,
														"isSlot": false,
														"src": "1720:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4290,
														"isOffset": true,
														"isSlot": false,
														"src": "1776:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4290,
														"isOffset": true,
														"isSlot": false,
														"src": "1848:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4290,
														"isOffset": true,
														"isSlot": false,
														"src": "2245:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4290,
														"isOffset": true,
														"isSlot": false,
														"src": "2332:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4290,
														"isOffset": true,
														"isSlot": false,
														"src": "3610:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4293,
														"isOffset": false,
														"isSlot": false,
														"src": "1809:14:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4293,
														"isOffset": false,
														"isSlot": false,
														"src": "2053:14:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4293,
														"isOffset": true,
														"isSlot": false,
														"src": "1754:14:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4296,
														"isOffset": false,
														"isSlot": false,
														"src": "2379:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4296,
														"isOffset": false,
														"isSlot": false,
														"src": "2725:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4296,
														"isOffset": true,
														"isSlot": false,
														"src": "2470:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4296,
														"isOffset": true,
														"isSlot": false,
														"src": "2934:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4296,
														"isOffset": true,
														"isSlot": false,
														"src": "3180:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4296,
														"isOffset": true,
														"isSlot": false,
														"src": "3630:13:35",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4298,
												"nodeType": "InlineAssembly",
												"src": "1311:2457:35"
											}
										]
									},
									"documentation": {
										"id": 4288,
										"nodeType": "StructuredDocumentation",
										"src": "1035:103:35",
										"text": "@dev equivalent to: abi.decode(params, (bytes, bytes[])) in calldata (requires strict abi encoding)"
									},
									"id": 4300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeActionsRouterParams",
									"nameLocation": "1152:25:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4290,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "1193:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4300,
												"src": "1178:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1178:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:23:35"
									},
									"returnParameters": {
										"id": 4297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4293,
												"mutability": "mutable",
												"name": "actions",
												"nameLocation": "1263:7:35",
												"nodeType": "VariableDeclaration",
												"scope": 4300,
												"src": "1248:22:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1248:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4296,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1289:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4300,
												"src": "1272:23:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 4294,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "1272:5:35",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 4295,
													"nodeType": "ArrayTypeName",
													"src": "1272:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:49:35"
									},
									"scope": 4600,
									"src": "1143:2631:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4324,
										"nodeType": "Block",
										"src": "4090:408:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4203:250:35",
													"nodeType": "YulBlock",
													"src": "4203:250:35",
													"statements": [
														{
															"nativeSrc": "4217:38:35",
															"nodeType": "YulAssignment",
															"src": "4217:38:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "4241:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "4241:13:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4228:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "4228:12:35"
																},
																"nativeSrc": "4228:27:35",
																"nodeType": "YulFunctionCall",
																"src": "4228:27:35"
															},
															"variableNames": [
																{
																	"name": "tokenId",
																	"nativeSrc": "4217:7:35",
																	"nodeType": "YulIdentifier",
																	"src": "4217:7:35"
																}
															]
														},
														{
															"nativeSrc": "4268:51:35",
															"nodeType": "YulAssignment",
															"src": "4268:51:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "4298:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "4298:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4313:4:35",
																				"nodeType": "YulLiteral",
																				"src": "4313:4:35",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4294:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "4294:3:35"
																		},
																		"nativeSrc": "4294:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "4294:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4281:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "4281:12:35"
																},
																"nativeSrc": "4281:38:35",
																"nodeType": "YulFunctionCall",
																"src": "4281:38:35"
															},
															"variableNames": [
																{
																	"name": "liquidity",
																	"nativeSrc": "4268:9:35",
																	"nodeType": "YulIdentifier",
																	"src": "4268:9:35"
																}
															]
														},
														{
															"nativeSrc": "4332:49:35",
															"nodeType": "YulAssignment",
															"src": "4332:49:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "4360:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "4360:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4375:4:35",
																				"nodeType": "YulLiteral",
																				"src": "4375:4:35",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4356:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "4356:3:35"
																		},
																		"nativeSrc": "4356:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "4356:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4343:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "4343:12:35"
																},
																"nativeSrc": "4343:38:35",
																"nodeType": "YulFunctionCall",
																"src": "4343:38:35"
															},
															"variableNames": [
																{
																	"name": "amount0",
																	"nativeSrc": "4332:7:35",
																	"nodeType": "YulIdentifier",
																	"src": "4332:7:35"
																}
															]
														},
														{
															"nativeSrc": "4394:49:35",
															"nodeType": "YulAssignment",
															"src": "4394:49:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "4422:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "4422:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4437:4:35",
																				"nodeType": "YulLiteral",
																				"src": "4437:4:35",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4418:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "4418:3:35"
																		},
																		"nativeSrc": "4418:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "4418:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4405:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "4405:12:35"
																},
																"nativeSrc": "4405:38:35",
																"nodeType": "YulFunctionCall",
																"src": "4405:38:35"
															},
															"variableNames": [
																{
																	"name": "amount1",
																	"nativeSrc": "4394:7:35",
																	"nodeType": "YulIdentifier",
																	"src": "4394:7:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4310,
														"isOffset": false,
														"isSlot": false,
														"src": "4332:7:35",
														"valueSize": 1
													},
													{
														"declaration": 4312,
														"isOffset": false,
														"isSlot": false,
														"src": "4394:7:35",
														"valueSize": 1
													},
													{
														"declaration": 4308,
														"isOffset": false,
														"isSlot": false,
														"src": "4268:9:35",
														"valueSize": 1
													},
													{
														"declaration": 4303,
														"isOffset": true,
														"isSlot": false,
														"src": "4241:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4303,
														"isOffset": true,
														"isSlot": false,
														"src": "4298:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4303,
														"isOffset": true,
														"isSlot": false,
														"src": "4360:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4303,
														"isOffset": true,
														"isSlot": false,
														"src": "4422:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4306,
														"isOffset": false,
														"isSlot": false,
														"src": "4217:7:35",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4316,
												"nodeType": "InlineAssembly",
												"src": "4178:275:35"
											},
											{
												"expression": {
													"id": 4322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4317,
														"name": "hookData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4314,
														"src": "4463:8:35",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "34",
																"id": 4320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4489:1:35",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															],
															"expression": {
																"id": 4318,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4303,
																"src": "4474:6:35",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 4319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4481:7:35",
															"memberName": "toBytes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4599,
															"src": "4474:14:35",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_bytes_calldata_ptr_$attached_to$_t_bytes_calldata_ptr_$",
																"typeString": "function (bytes calldata,uint256) pure returns (bytes calldata)"
															}
														},
														"id": 4321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4474:17:35",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"src": "4463:28:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"id": 4323,
												"nodeType": "ExpressionStatement",
												"src": "4463:28:35"
											}
										]
									},
									"documentation": {
										"id": 4301,
										"nodeType": "StructuredDocumentation",
										"src": "3780:99:35",
										"text": "@dev equivalent to: abi.decode(params, (uint256, uint256, uint128, uint128, bytes)) in calldata"
									},
									"id": 4325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeModifyLiquidityParams",
									"nameLocation": "3893:27:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4303,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "3936:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4325,
												"src": "3921:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3921:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3920:23:35"
									},
									"returnParameters": {
										"id": 4315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4306,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3999:7:35",
												"nodeType": "VariableDeclaration",
												"scope": 4325,
												"src": "3991:15:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4308,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4016:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 4325,
												"src": "4008:17:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4310,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4035:7:35",
												"nodeType": "VariableDeclaration",
												"scope": 4325,
												"src": "4027:15:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4309,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4312,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4052:7:35",
												"nodeType": "VariableDeclaration",
												"scope": 4325,
												"src": "4044:15:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4311,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4044:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4314,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "4076:8:35",
												"nodeType": "VariableDeclaration",
												"scope": 4325,
												"src": "4061:23:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4061:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3990:95:35"
									},
									"scope": 4600,
									"src": "3884:614:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4347,
										"nodeType": "Block",
										"src": "4804:350:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4917:192:35",
													"nodeType": "YulBlock",
													"src": "4917:192:35",
													"statements": [
														{
															"nativeSrc": "4931:38:35",
															"nodeType": "YulAssignment",
															"src": "4931:38:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "4955:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "4955:13:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4942:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "4942:12:35"
																},
																"nativeSrc": "4942:27:35",
																"nodeType": "YulFunctionCall",
																"src": "4942:27:35"
															},
															"variableNames": [
																{
																	"name": "tokenId",
																	"nativeSrc": "4931:7:35",
																	"nodeType": "YulIdentifier",
																	"src": "4931:7:35"
																}
															]
														},
														{
															"nativeSrc": "4982:52:35",
															"nodeType": "YulAssignment",
															"src": "4982:52:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "5013:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "5013:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5028:4:35",
																				"nodeType": "YulLiteral",
																				"src": "5028:4:35",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5009:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "5009:3:35"
																		},
																		"nativeSrc": "5009:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "5009:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4996:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "4996:12:35"
																},
																"nativeSrc": "4996:38:35",
																"nodeType": "YulFunctionCall",
																"src": "4996:38:35"
															},
															"variableNames": [
																{
																	"name": "amount0Max",
																	"nativeSrc": "4982:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "4982:10:35"
																}
															]
														},
														{
															"nativeSrc": "5047:52:35",
															"nodeType": "YulAssignment",
															"src": "5047:52:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "5078:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "5078:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5093:4:35",
																				"nodeType": "YulLiteral",
																				"src": "5093:4:35",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5074:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "5074:3:35"
																		},
																		"nativeSrc": "5074:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "5074:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5061:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "5061:12:35"
																},
																"nativeSrc": "5061:38:35",
																"nodeType": "YulFunctionCall",
																"src": "5061:38:35"
															},
															"variableNames": [
																{
																	"name": "amount1Max",
																	"nativeSrc": "5047:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "5047:10:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4333,
														"isOffset": false,
														"isSlot": false,
														"src": "4982:10:35",
														"valueSize": 1
													},
													{
														"declaration": 4335,
														"isOffset": false,
														"isSlot": false,
														"src": "5047:10:35",
														"valueSize": 1
													},
													{
														"declaration": 4328,
														"isOffset": true,
														"isSlot": false,
														"src": "4955:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4328,
														"isOffset": true,
														"isSlot": false,
														"src": "5013:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4328,
														"isOffset": true,
														"isSlot": false,
														"src": "5078:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4331,
														"isOffset": false,
														"isSlot": false,
														"src": "4931:7:35",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4339,
												"nodeType": "InlineAssembly",
												"src": "4892:217:35"
											},
											{
												"expression": {
													"id": 4345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4340,
														"name": "hookData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4337,
														"src": "5119:8:35",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "33",
																"id": 4343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5145:1:35",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																}
															],
															"expression": {
																"id": 4341,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4328,
																"src": "5130:6:35",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 4342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5137:7:35",
															"memberName": "toBytes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4599,
															"src": "5130:14:35",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_bytes_calldata_ptr_$attached_to$_t_bytes_calldata_ptr_$",
																"typeString": "function (bytes calldata,uint256) pure returns (bytes calldata)"
															}
														},
														"id": 4344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5130:17:35",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"src": "5119:28:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"id": 4346,
												"nodeType": "ExpressionStatement",
												"src": "5119:28:35"
											}
										]
									},
									"documentation": {
										"id": 4326,
										"nodeType": "StructuredDocumentation",
										"src": "4504:90:35",
										"text": "@dev equivalent to: abi.decode(params, (uint256, uint128, uint128, bytes)) in calldata"
									},
									"id": 4348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeIncreaseLiquidityFromDeltasParams",
									"nameLocation": "4608:39:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4328,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "4663:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "4648:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4648:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4647:23:35"
									},
									"returnParameters": {
										"id": 4338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4331,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4726:7:35",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "4718:15:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4333,
												"mutability": "mutable",
												"name": "amount0Max",
												"nameLocation": "4743:10:35",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "4735:18:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4332,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4335,
												"mutability": "mutable",
												"name": "amount1Max",
												"nameLocation": "4763:10:35",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "4755:18:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4334,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4755:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4337,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "4790:8:35",
												"nodeType": "VariableDeclaration",
												"scope": 4348,
												"src": "4775:23:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4775:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:82:35"
									},
									"scope": 4600,
									"src": "4599:555:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4379,
										"nodeType": "Block",
										"src": "5652:591:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5765:433:35",
													"nodeType": "YulBlock",
													"src": "5765:433:35",
													"statements": [
														{
															"nativeSrc": "5779:24:35",
															"nodeType": "YulAssignment",
															"src": "5779:24:35",
															"value": {
																"name": "params.offset",
																"nativeSrc": "5790:13:35",
																"nodeType": "YulIdentifier",
																"src": "5790:13:35"
															},
															"variableNames": [
																{
																	"name": "poolKey",
																	"nativeSrc": "5779:7:35",
																	"nodeType": "YulIdentifier",
																	"src": "5779:7:35"
																}
															]
														},
														{
															"nativeSrc": "5816:51:35",
															"nodeType": "YulAssignment",
															"src": "5816:51:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "5846:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "5846:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5861:4:35",
																				"nodeType": "YulLiteral",
																				"src": "5861:4:35",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5842:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "5842:3:35"
																		},
																		"nativeSrc": "5842:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "5842:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5829:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "5829:12:35"
																},
																"nativeSrc": "5829:38:35",
																"nodeType": "YulFunctionCall",
																"src": "5829:38:35"
															},
															"variableNames": [
																{
																	"name": "tickLower",
																	"nativeSrc": "5816:9:35",
																	"nodeType": "YulIdentifier",
																	"src": "5816:9:35"
																}
															]
														},
														{
															"nativeSrc": "5880:51:35",
															"nodeType": "YulAssignment",
															"src": "5880:51:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "5910:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "5910:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5925:4:35",
																				"nodeType": "YulLiteral",
																				"src": "5925:4:35",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5906:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "5906:3:35"
																		},
																		"nativeSrc": "5906:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "5906:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5893:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "5893:12:35"
																},
																"nativeSrc": "5893:38:35",
																"nodeType": "YulFunctionCall",
																"src": "5893:38:35"
															},
															"variableNames": [
																{
																	"name": "tickUpper",
																	"nativeSrc": "5880:9:35",
																	"nodeType": "YulIdentifier",
																	"src": "5880:9:35"
																}
															]
														},
														{
															"nativeSrc": "5944:51:35",
															"nodeType": "YulAssignment",
															"src": "5944:51:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "5974:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "5974:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5989:4:35",
																				"nodeType": "YulLiteral",
																				"src": "5989:4:35",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5970:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "5970:3:35"
																		},
																		"nativeSrc": "5970:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "5970:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5957:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "5957:12:35"
																},
																"nativeSrc": "5957:38:35",
																"nodeType": "YulFunctionCall",
																"src": "5957:38:35"
															},
															"variableNames": [
																{
																	"name": "liquidity",
																	"nativeSrc": "5944:9:35",
																	"nodeType": "YulIdentifier",
																	"src": "5944:9:35"
																}
															]
														},
														{
															"nativeSrc": "6008:53:35",
															"nodeType": "YulAssignment",
															"src": "6008:53:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "6039:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "6039:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6054:5:35",
																				"nodeType": "YulLiteral",
																				"src": "6054:5:35",
																				"type": "",
																				"value": "0x100"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6035:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "6035:3:35"
																		},
																		"nativeSrc": "6035:25:35",
																		"nodeType": "YulFunctionCall",
																		"src": "6035:25:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6022:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "6022:12:35"
																},
																"nativeSrc": "6022:39:35",
																"nodeType": "YulFunctionCall",
																"src": "6022:39:35"
															},
															"variableNames": [
																{
																	"name": "amount0Max",
																	"nativeSrc": "6008:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "6008:10:35"
																}
															]
														},
														{
															"nativeSrc": "6074:53:35",
															"nodeType": "YulAssignment",
															"src": "6074:53:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "6105:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "6105:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6120:5:35",
																				"nodeType": "YulLiteral",
																				"src": "6120:5:35",
																				"type": "",
																				"value": "0x120"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6101:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "6101:3:35"
																		},
																		"nativeSrc": "6101:25:35",
																		"nodeType": "YulFunctionCall",
																		"src": "6101:25:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6088:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "6088:12:35"
																},
																"nativeSrc": "6088:39:35",
																"nodeType": "YulFunctionCall",
																"src": "6088:39:35"
															},
															"variableNames": [
																{
																	"name": "amount1Max",
																	"nativeSrc": "6074:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "6074:10:35"
																}
															]
														},
														{
															"nativeSrc": "6140:48:35",
															"nodeType": "YulAssignment",
															"src": "6140:48:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "6166:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "6166:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6181:5:35",
																				"nodeType": "YulLiteral",
																				"src": "6181:5:35",
																				"type": "",
																				"value": "0x140"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6162:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "6162:3:35"
																		},
																		"nativeSrc": "6162:25:35",
																		"nodeType": "YulFunctionCall",
																		"src": "6162:25:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6149:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "6149:12:35"
																},
																"nativeSrc": "6149:39:35",
																"nodeType": "YulFunctionCall",
																"src": "6149:39:35"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "6140:5:35",
																	"nodeType": "YulIdentifier",
																	"src": "6140:5:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4363,
														"isOffset": false,
														"isSlot": false,
														"src": "6008:10:35",
														"valueSize": 1
													},
													{
														"declaration": 4365,
														"isOffset": false,
														"isSlot": false,
														"src": "6074:10:35",
														"valueSize": 1
													},
													{
														"declaration": 4361,
														"isOffset": false,
														"isSlot": false,
														"src": "5944:9:35",
														"valueSize": 1
													},
													{
														"declaration": 4367,
														"isOffset": false,
														"isSlot": false,
														"src": "6140:5:35",
														"valueSize": 1
													},
													{
														"declaration": 4351,
														"isOffset": true,
														"isSlot": false,
														"src": "5790:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4351,
														"isOffset": true,
														"isSlot": false,
														"src": "5846:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4351,
														"isOffset": true,
														"isSlot": false,
														"src": "5910:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4351,
														"isOffset": true,
														"isSlot": false,
														"src": "5974:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4351,
														"isOffset": true,
														"isSlot": false,
														"src": "6039:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4351,
														"isOffset": true,
														"isSlot": false,
														"src": "6105:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4351,
														"isOffset": true,
														"isSlot": false,
														"src": "6166:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4355,
														"isOffset": false,
														"isSlot": false,
														"src": "5779:7:35",
														"valueSize": 1
													},
													{
														"declaration": 4357,
														"isOffset": false,
														"isSlot": false,
														"src": "5816:9:35",
														"valueSize": 1
													},
													{
														"declaration": 4359,
														"isOffset": false,
														"isSlot": false,
														"src": "5880:9:35",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4371,
												"nodeType": "InlineAssembly",
												"src": "5740:458:35"
											},
											{
												"expression": {
													"id": 4377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4372,
														"name": "hookData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4369,
														"src": "6207:8:35",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3131",
																"id": 4375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6233:2:35",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_11_by_1",
																	"typeString": "int_const 11"
																},
																"value": "11"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_11_by_1",
																	"typeString": "int_const 11"
																}
															],
															"expression": {
																"id": 4373,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4351,
																"src": "6218:6:35",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 4374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6225:7:35",
															"memberName": "toBytes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4599,
															"src": "6218:14:35",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_bytes_calldata_ptr_$attached_to$_t_bytes_calldata_ptr_$",
																"typeString": "function (bytes calldata,uint256) pure returns (bytes calldata)"
															}
														},
														"id": 4376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6218:18:35",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"src": "6207:29:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"id": 4378,
												"nodeType": "ExpressionStatement",
												"src": "6207:29:35"
											}
										]
									},
									"documentation": {
										"id": 4349,
										"nodeType": "StructuredDocumentation",
										"src": "5160:122:35",
										"text": "@dev equivalent to: abi.decode(params, (PoolKey, int24, int24, uint256, uint128, uint128, address, bytes)) in calldata"
									},
									"id": 4380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeMintParams",
									"nameLocation": "5296:16:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4351,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "5328:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4380,
												"src": "5313:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4350,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5313:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5312:23:35"
									},
									"returnParameters": {
										"id": 4370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4355,
												"mutability": "mutable",
												"name": "poolKey",
												"nameLocation": "5413:7:35",
												"nodeType": "VariableDeclaration",
												"scope": 4380,
												"src": "5396:24:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 4354,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4353,
														"name": "PoolKey",
														"nameLocations": [
															"5396:7:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "5396:7:35"
													},
													"referencedDeclaration": 2560,
													"src": "5396:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4357,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "5440:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 4380,
												"src": "5434:15:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4356,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5434:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4359,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "5469:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 4380,
												"src": "5463:15:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4358,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5463:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4361,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5500:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 4380,
												"src": "5492:17:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5492:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4363,
												"mutability": "mutable",
												"name": "amount0Max",
												"nameLocation": "5531:10:35",
												"nodeType": "VariableDeclaration",
												"scope": 4380,
												"src": "5523:18:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4362,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5523:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4365,
												"mutability": "mutable",
												"name": "amount1Max",
												"nameLocation": "5563:10:35",
												"nodeType": "VariableDeclaration",
												"scope": 4380,
												"src": "5555:18:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4364,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5555:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4367,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5595:5:35",
												"nodeType": "VariableDeclaration",
												"scope": 4380,
												"src": "5587:13:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5587:7:35",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4369,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "5629:8:35",
												"nodeType": "VariableDeclaration",
												"scope": 4380,
												"src": "5614:23:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5614:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5382:265:35"
									},
									"scope": 4600,
									"src": "5287:956:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4409,
										"nodeType": "Block",
										"src": "6711:527:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "6824:368:35",
													"nodeType": "YulBlock",
													"src": "6824:368:35",
													"statements": [
														{
															"nativeSrc": "6838:24:35",
															"nodeType": "YulAssignment",
															"src": "6838:24:35",
															"value": {
																"name": "params.offset",
																"nativeSrc": "6849:13:35",
																"nodeType": "YulIdentifier",
																"src": "6849:13:35"
															},
															"variableNames": [
																{
																	"name": "poolKey",
																	"nativeSrc": "6838:7:35",
																	"nodeType": "YulIdentifier",
																	"src": "6838:7:35"
																}
															]
														},
														{
															"nativeSrc": "6875:51:35",
															"nodeType": "YulAssignment",
															"src": "6875:51:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "6905:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "6905:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6920:4:35",
																				"nodeType": "YulLiteral",
																				"src": "6920:4:35",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6901:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "6901:3:35"
																		},
																		"nativeSrc": "6901:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "6901:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6888:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "6888:12:35"
																},
																"nativeSrc": "6888:38:35",
																"nodeType": "YulFunctionCall",
																"src": "6888:38:35"
															},
															"variableNames": [
																{
																	"name": "tickLower",
																	"nativeSrc": "6875:9:35",
																	"nodeType": "YulIdentifier",
																	"src": "6875:9:35"
																}
															]
														},
														{
															"nativeSrc": "6939:51:35",
															"nodeType": "YulAssignment",
															"src": "6939:51:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "6969:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "6969:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6984:4:35",
																				"nodeType": "YulLiteral",
																				"src": "6984:4:35",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6965:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "6965:3:35"
																		},
																		"nativeSrc": "6965:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "6965:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6952:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "6952:12:35"
																},
																"nativeSrc": "6952:38:35",
																"nodeType": "YulFunctionCall",
																"src": "6952:38:35"
															},
															"variableNames": [
																{
																	"name": "tickUpper",
																	"nativeSrc": "6939:9:35",
																	"nodeType": "YulIdentifier",
																	"src": "6939:9:35"
																}
															]
														},
														{
															"nativeSrc": "7003:52:35",
															"nodeType": "YulAssignment",
															"src": "7003:52:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "7034:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "7034:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7049:4:35",
																				"nodeType": "YulLiteral",
																				"src": "7049:4:35",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7030:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "7030:3:35"
																		},
																		"nativeSrc": "7030:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "7030:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7017:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "7017:12:35"
																},
																"nativeSrc": "7017:38:35",
																"nodeType": "YulFunctionCall",
																"src": "7017:38:35"
															},
															"variableNames": [
																{
																	"name": "amount0Max",
																	"nativeSrc": "7003:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "7003:10:35"
																}
															]
														},
														{
															"nativeSrc": "7068:53:35",
															"nodeType": "YulAssignment",
															"src": "7068:53:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "7099:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "7099:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7114:5:35",
																				"nodeType": "YulLiteral",
																				"src": "7114:5:35",
																				"type": "",
																				"value": "0x100"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7095:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "7095:3:35"
																		},
																		"nativeSrc": "7095:25:35",
																		"nodeType": "YulFunctionCall",
																		"src": "7095:25:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7082:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "7082:12:35"
																},
																"nativeSrc": "7082:39:35",
																"nodeType": "YulFunctionCall",
																"src": "7082:39:35"
															},
															"variableNames": [
																{
																	"name": "amount1Max",
																	"nativeSrc": "7068:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "7068:10:35"
																}
															]
														},
														{
															"nativeSrc": "7134:48:35",
															"nodeType": "YulAssignment",
															"src": "7134:48:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "7160:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "7160:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7175:5:35",
																				"nodeType": "YulLiteral",
																				"src": "7175:5:35",
																				"type": "",
																				"value": "0x120"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7156:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "7156:3:35"
																		},
																		"nativeSrc": "7156:25:35",
																		"nodeType": "YulFunctionCall",
																		"src": "7156:25:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7143:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "7143:12:35"
																},
																"nativeSrc": "7143:39:35",
																"nodeType": "YulFunctionCall",
																"src": "7143:39:35"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "7134:5:35",
																	"nodeType": "YulIdentifier",
																	"src": "7134:5:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4393,
														"isOffset": false,
														"isSlot": false,
														"src": "7003:10:35",
														"valueSize": 1
													},
													{
														"declaration": 4395,
														"isOffset": false,
														"isSlot": false,
														"src": "7068:10:35",
														"valueSize": 1
													},
													{
														"declaration": 4397,
														"isOffset": false,
														"isSlot": false,
														"src": "7134:5:35",
														"valueSize": 1
													},
													{
														"declaration": 4383,
														"isOffset": true,
														"isSlot": false,
														"src": "6849:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4383,
														"isOffset": true,
														"isSlot": false,
														"src": "6905:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4383,
														"isOffset": true,
														"isSlot": false,
														"src": "6969:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4383,
														"isOffset": true,
														"isSlot": false,
														"src": "7034:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4383,
														"isOffset": true,
														"isSlot": false,
														"src": "7099:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4383,
														"isOffset": true,
														"isSlot": false,
														"src": "7160:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4387,
														"isOffset": false,
														"isSlot": false,
														"src": "6838:7:35",
														"valueSize": 1
													},
													{
														"declaration": 4389,
														"isOffset": false,
														"isSlot": false,
														"src": "6875:9:35",
														"valueSize": 1
													},
													{
														"declaration": 4391,
														"isOffset": false,
														"isSlot": false,
														"src": "6939:9:35",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4401,
												"nodeType": "InlineAssembly",
												"src": "6799:393:35"
											},
											{
												"expression": {
													"id": 4407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4402,
														"name": "hookData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4399,
														"src": "7202:8:35",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3130",
																"id": 4405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7228:2:35",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															],
															"expression": {
																"id": 4403,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4383,
																"src": "7213:6:35",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 4404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7220:7:35",
															"memberName": "toBytes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4599,
															"src": "7213:14:35",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_bytes_calldata_ptr_$attached_to$_t_bytes_calldata_ptr_$",
																"typeString": "function (bytes calldata,uint256) pure returns (bytes calldata)"
															}
														},
														"id": 4406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7213:18:35",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"src": "7202:29:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"id": 4408,
												"nodeType": "ExpressionStatement",
												"src": "7202:29:35"
											}
										]
									},
									"documentation": {
										"id": 4381,
										"nodeType": "StructuredDocumentation",
										"src": "6249:113:35",
										"text": "@dev equivalent to: abi.decode(params, (PoolKey, int24, int24, uint128, uint128, address, bytes)) in calldata"
									},
									"id": 4410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeMintFromDeltasParams",
									"nameLocation": "6376:26:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4383,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6418:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4410,
												"src": "6403:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6403:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6402:23:35"
									},
									"returnParameters": {
										"id": 4400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4387,
												"mutability": "mutable",
												"name": "poolKey",
												"nameLocation": "6503:7:35",
												"nodeType": "VariableDeclaration",
												"scope": 4410,
												"src": "6486:24:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 4386,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4385,
														"name": "PoolKey",
														"nameLocations": [
															"6486:7:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "6486:7:35"
													},
													"referencedDeclaration": 2560,
													"src": "6486:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4389,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "6530:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 4410,
												"src": "6524:15:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4388,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "6524:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4391,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "6559:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 4410,
												"src": "6553:15:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4390,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "6553:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4393,
												"mutability": "mutable",
												"name": "amount0Max",
												"nameLocation": "6590:10:35",
												"nodeType": "VariableDeclaration",
												"scope": 4410,
												"src": "6582:18:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4392,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6582:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4395,
												"mutability": "mutable",
												"name": "amount1Max",
												"nameLocation": "6622:10:35",
												"nodeType": "VariableDeclaration",
												"scope": 4410,
												"src": "6614:18:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4394,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6614:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4397,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6654:5:35",
												"nodeType": "VariableDeclaration",
												"scope": 4410,
												"src": "6646:13:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:35",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4399,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "6688:8:35",
												"nodeType": "VariableDeclaration",
												"scope": 4410,
												"src": "6673:23:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6673:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6472:234:35"
									},
									"scope": 4600,
									"src": "6367:871:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4432,
										"nodeType": "Block",
										"src": "7521:350:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "7634:192:35",
													"nodeType": "YulBlock",
													"src": "7634:192:35",
													"statements": [
														{
															"nativeSrc": "7648:38:35",
															"nodeType": "YulAssignment",
															"src": "7648:38:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "7672:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "7672:13:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7659:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "7659:12:35"
																},
																"nativeSrc": "7659:27:35",
																"nodeType": "YulFunctionCall",
																"src": "7659:27:35"
															},
															"variableNames": [
																{
																	"name": "tokenId",
																	"nativeSrc": "7648:7:35",
																	"nodeType": "YulIdentifier",
																	"src": "7648:7:35"
																}
															]
														},
														{
															"nativeSrc": "7699:52:35",
															"nodeType": "YulAssignment",
															"src": "7699:52:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "7730:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "7730:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7745:4:35",
																				"nodeType": "YulLiteral",
																				"src": "7745:4:35",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7726:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "7726:3:35"
																		},
																		"nativeSrc": "7726:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "7726:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7713:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "7713:12:35"
																},
																"nativeSrc": "7713:38:35",
																"nodeType": "YulFunctionCall",
																"src": "7713:38:35"
															},
															"variableNames": [
																{
																	"name": "amount0Min",
																	"nativeSrc": "7699:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "7699:10:35"
																}
															]
														},
														{
															"nativeSrc": "7764:52:35",
															"nodeType": "YulAssignment",
															"src": "7764:52:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "7795:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "7795:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7810:4:35",
																				"nodeType": "YulLiteral",
																				"src": "7810:4:35",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7791:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "7791:3:35"
																		},
																		"nativeSrc": "7791:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "7791:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7778:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "7778:12:35"
																},
																"nativeSrc": "7778:38:35",
																"nodeType": "YulFunctionCall",
																"src": "7778:38:35"
															},
															"variableNames": [
																{
																	"name": "amount1Min",
																	"nativeSrc": "7764:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "7764:10:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4418,
														"isOffset": false,
														"isSlot": false,
														"src": "7699:10:35",
														"valueSize": 1
													},
													{
														"declaration": 4420,
														"isOffset": false,
														"isSlot": false,
														"src": "7764:10:35",
														"valueSize": 1
													},
													{
														"declaration": 4413,
														"isOffset": true,
														"isSlot": false,
														"src": "7672:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4413,
														"isOffset": true,
														"isSlot": false,
														"src": "7730:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4413,
														"isOffset": true,
														"isSlot": false,
														"src": "7795:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4416,
														"isOffset": false,
														"isSlot": false,
														"src": "7648:7:35",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4424,
												"nodeType": "InlineAssembly",
												"src": "7609:217:35"
											},
											{
												"expression": {
													"id": 4430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4425,
														"name": "hookData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4422,
														"src": "7836:8:35",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "33",
																"id": 4428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7862:1:35",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																}
															],
															"expression": {
																"id": 4426,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4413,
																"src": "7847:6:35",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 4427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7854:7:35",
															"memberName": "toBytes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4599,
															"src": "7847:14:35",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_bytes_calldata_ptr_$attached_to$_t_bytes_calldata_ptr_$",
																"typeString": "function (bytes calldata,uint256) pure returns (bytes calldata)"
															}
														},
														"id": 4429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7847:17:35",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"src": "7836:28:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"id": 4431,
												"nodeType": "ExpressionStatement",
												"src": "7836:28:35"
											}
										]
									},
									"documentation": {
										"id": 4411,
										"nodeType": "StructuredDocumentation",
										"src": "7244:90:35",
										"text": "@dev equivalent to: abi.decode(params, (uint256, uint128, uint128, bytes)) in calldata"
									},
									"id": 4433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeBurnParams",
									"nameLocation": "7348:16:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4413,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7380:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4433,
												"src": "7365:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7365:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7364:23:35"
									},
									"returnParameters": {
										"id": 4423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7443:7:35",
												"nodeType": "VariableDeclaration",
												"scope": 4433,
												"src": "7435:15:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7435:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4418,
												"mutability": "mutable",
												"name": "amount0Min",
												"nameLocation": "7460:10:35",
												"nodeType": "VariableDeclaration",
												"scope": 4433,
												"src": "7452:18:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4417,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7452:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4420,
												"mutability": "mutable",
												"name": "amount1Min",
												"nameLocation": "7480:10:35",
												"nodeType": "VariableDeclaration",
												"scope": 4433,
												"src": "7472:18:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4419,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7472:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4422,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "7507:8:35",
												"nodeType": "VariableDeclaration",
												"scope": 4433,
												"src": "7492:23:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7492:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7434:82:35"
									},
									"scope": 4600,
									"src": "7339:532:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4443,
										"nodeType": "Block",
										"src": "8109:512:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8240:375:35",
													"nodeType": "YulBlock",
													"src": "8240:375:35",
													"statements": [
														{
															"body": {
																"nativeSrc": "8436:95:35",
																"nodeType": "YulBlock",
																"src": "8436:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8461:1:35",
																					"nodeType": "YulLiteral",
																					"src": "8461:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "8464:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "8464:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8454:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "8454:6:35"
																			},
																			"nativeSrc": "8454:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "8454:31:35"
																		},
																		"nativeSrc": "8454:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "8454:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8509:4:35",
																					"nodeType": "YulLiteral",
																					"src": "8509:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8515:1:35",
																					"nodeType": "YulLiteral",
																					"src": "8515:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8502:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "8502:6:35"
																			},
																			"nativeSrc": "8502:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "8502:15:35"
																		},
																		"nativeSrc": "8502:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "8502:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "params.length",
																		"nativeSrc": "8415:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "8415:13:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8430:4:35",
																		"nodeType": "YulLiteral",
																		"src": "8430:4:35",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8412:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "8412:2:35"
																},
																"nativeSrc": "8412:23:35",
																"nodeType": "YulFunctionCall",
																"src": "8412:23:35"
															},
															"nativeSrc": "8409:122:35",
															"nodeType": "YulIf",
															"src": "8409:122:35"
														},
														{
															"nativeSrc": "8544:61:35",
															"nodeType": "YulAssignment",
															"src": "8544:61:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "8562:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "8562:13:35"
																	},
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "8590:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "8590:13:35"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8577:12:35",
																			"nodeType": "YulIdentifier",
																			"src": "8577:12:35"
																		},
																		"nativeSrc": "8577:27:35",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:27:35"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8558:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "8558:3:35"
																},
																"nativeSrc": "8558:47:35",
																"nodeType": "YulFunctionCall",
																"src": "8558:47:35"
															},
															"variableNames": [
																{
																	"name": "swapParams",
																	"nativeSrc": "8544:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "8544:10:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "8464:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4436,
														"isOffset": false,
														"isSlot": false,
														"src": "8415:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4436,
														"isOffset": true,
														"isSlot": false,
														"src": "8562:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4436,
														"isOffset": true,
														"isSlot": false,
														"src": "8590:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4440,
														"isOffset": false,
														"isSlot": false,
														"src": "8544:10:35",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4442,
												"nodeType": "InlineAssembly",
												"src": "8215:400:35"
											}
										]
									},
									"documentation": {
										"id": 4434,
										"nodeType": "StructuredDocumentation",
										"src": "7877:72:35",
										"text": "@dev equivalent to: abi.decode(params, (IV4Router.ExactInputParams))"
									},
									"id": 4444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeSwapExactInParams",
									"nameLocation": "7963:23:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4436,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "8002:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4444,
												"src": "7987:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4435,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7987:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7986:23:35"
									},
									"returnParameters": {
										"id": 4441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4440,
												"mutability": "mutable",
												"name": "swapParams",
												"nameLocation": "8093:10:35",
												"nodeType": "VariableDeclaration",
												"scope": 4444,
												"src": "8057:46:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$4095_calldata_ptr",
													"typeString": "struct IV4Router.ExactInputParams"
												},
												"typeName": {
													"id": 4439,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4438,
														"name": "IV4Router.ExactInputParams",
														"nameLocations": [
															"8057:9:35",
															"8067:16:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4095,
														"src": "8057:26:35"
													},
													"referencedDeclaration": 4095,
													"src": "8057:26:35",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$4095_storage_ptr",
														"typeString": "struct IV4Router.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8056:48:35"
									},
									"scope": 4600,
									"src": "7954:667:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4454,
										"nodeType": "Block",
										"src": "8877:527:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "9014:384:35",
													"nodeType": "YulBlock",
													"src": "9014:384:35",
													"statements": [
														{
															"body": {
																"nativeSrc": "9219:95:35",
																"nodeType": "YulBlock",
																"src": "9219:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9244:1:35",
																					"nodeType": "YulLiteral",
																					"src": "9244:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "9247:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "9247:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9237:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "9237:6:35"
																			},
																			"nativeSrc": "9237:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "9237:31:35"
																		},
																		"nativeSrc": "9237:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "9237:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9292:4:35",
																					"nodeType": "YulLiteral",
																					"src": "9292:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9298:1:35",
																					"nodeType": "YulLiteral",
																					"src": "9298:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9285:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "9285:6:35"
																			},
																			"nativeSrc": "9285:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "9285:15:35"
																		},
																		"nativeSrc": "9285:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "9285:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "params.length",
																		"nativeSrc": "9197:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "9197:13:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9212:5:35",
																		"nodeType": "YulLiteral",
																		"src": "9212:5:35",
																		"type": "",
																		"value": "0x140"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9194:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "9194:2:35"
																},
																"nativeSrc": "9194:24:35",
																"nodeType": "YulFunctionCall",
																"src": "9194:24:35"
															},
															"nativeSrc": "9191:123:35",
															"nodeType": "YulIf",
															"src": "9191:123:35"
														},
														{
															"nativeSrc": "9327:61:35",
															"nodeType": "YulAssignment",
															"src": "9327:61:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "9345:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "9345:13:35"
																	},
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "9373:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "9373:13:35"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9360:12:35",
																			"nodeType": "YulIdentifier",
																			"src": "9360:12:35"
																		},
																		"nativeSrc": "9360:27:35",
																		"nodeType": "YulFunctionCall",
																		"src": "9360:27:35"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9341:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "9341:3:35"
																},
																"nativeSrc": "9341:47:35",
																"nodeType": "YulFunctionCall",
																"src": "9341:47:35"
															},
															"variableNames": [
																{
																	"name": "swapParams",
																	"nativeSrc": "9327:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "9327:10:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "9247:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4447,
														"isOffset": false,
														"isSlot": false,
														"src": "9197:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4447,
														"isOffset": true,
														"isSlot": false,
														"src": "9345:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4447,
														"isOffset": true,
														"isSlot": false,
														"src": "9373:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4451,
														"isOffset": false,
														"isSlot": false,
														"src": "9327:10:35",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4453,
												"nodeType": "InlineAssembly",
												"src": "8989:409:35"
											}
										]
									},
									"documentation": {
										"id": 4445,
										"nodeType": "StructuredDocumentation",
										"src": "8627:78:35",
										"text": "@dev equivalent to: abi.decode(params, (IV4Router.ExactInputSingleParams))"
									},
									"id": 4455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeSwapExactInSingleParams",
									"nameLocation": "8719:29:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4447,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "8764:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4455,
												"src": "8749:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8749:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8748:23:35"
									},
									"returnParameters": {
										"id": 4452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4451,
												"mutability": "mutable",
												"name": "swapParams",
												"nameLocation": "8861:10:35",
												"nodeType": "VariableDeclaration",
												"scope": 4455,
												"src": "8819:52:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_calldata_ptr",
													"typeString": "struct IV4Router.ExactInputSingleParams"
												},
												"typeName": {
													"id": 4450,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4449,
														"name": "IV4Router.ExactInputSingleParams",
														"nameLocations": [
															"8819:9:35",
															"8829:22:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4082,
														"src": "8819:32:35"
													},
													"referencedDeclaration": 4082,
													"src": "8819:32:35",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$4082_storage_ptr",
														"typeString": "struct IV4Router.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8818:54:35"
									},
									"scope": 4600,
									"src": "8710:694:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4465,
										"nodeType": "Block",
										"src": "9645:513:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "9777:375:35",
													"nodeType": "YulBlock",
													"src": "9777:375:35",
													"statements": [
														{
															"body": {
																"nativeSrc": "9973:95:35",
																"nodeType": "YulBlock",
																"src": "9973:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9998:1:35",
																					"nodeType": "YulLiteral",
																					"src": "9998:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "10001:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "10001:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9991:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "9991:6:35"
																			},
																			"nativeSrc": "9991:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "9991:31:35"
																		},
																		"nativeSrc": "9991:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "9991:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10046:4:35",
																					"nodeType": "YulLiteral",
																					"src": "10046:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10052:1:35",
																					"nodeType": "YulLiteral",
																					"src": "10052:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10039:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "10039:6:35"
																			},
																			"nativeSrc": "10039:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "10039:15:35"
																		},
																		"nativeSrc": "10039:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "10039:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "params.length",
																		"nativeSrc": "9952:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "9952:13:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9967:4:35",
																		"nodeType": "YulLiteral",
																		"src": "9967:4:35",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9949:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "9949:2:35"
																},
																"nativeSrc": "9949:23:35",
																"nodeType": "YulFunctionCall",
																"src": "9949:23:35"
															},
															"nativeSrc": "9946:122:35",
															"nodeType": "YulIf",
															"src": "9946:122:35"
														},
														{
															"nativeSrc": "10081:61:35",
															"nodeType": "YulAssignment",
															"src": "10081:61:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "10099:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "10099:13:35"
																	},
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "10127:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "10127:13:35"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10114:12:35",
																			"nodeType": "YulIdentifier",
																			"src": "10114:12:35"
																		},
																		"nativeSrc": "10114:27:35",
																		"nodeType": "YulFunctionCall",
																		"src": "10114:27:35"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10095:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "10095:3:35"
																},
																"nativeSrc": "10095:47:35",
																"nodeType": "YulFunctionCall",
																"src": "10095:47:35"
															},
															"variableNames": [
																{
																	"name": "swapParams",
																	"nativeSrc": "10081:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "10081:10:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "10001:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4458,
														"isOffset": false,
														"isSlot": false,
														"src": "9952:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4458,
														"isOffset": true,
														"isSlot": false,
														"src": "10099:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4458,
														"isOffset": true,
														"isSlot": false,
														"src": "10127:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4462,
														"isOffset": false,
														"isSlot": false,
														"src": "10081:10:35",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4464,
												"nodeType": "InlineAssembly",
												"src": "9752:400:35"
											}
										]
									},
									"documentation": {
										"id": 4456,
										"nodeType": "StructuredDocumentation",
										"src": "9410:73:35",
										"text": "@dev equivalent to: abi.decode(params, (IV4Router.ExactOutputParams))"
									},
									"id": 4466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeSwapExactOutParams",
									"nameLocation": "9497:24:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4458,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "9537:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4466,
												"src": "9522:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4457,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9522:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9521:23:35"
									},
									"returnParameters": {
										"id": 4463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4462,
												"mutability": "mutable",
												"name": "swapParams",
												"nameLocation": "9629:10:35",
												"nodeType": "VariableDeclaration",
												"scope": 4466,
												"src": "9592:47:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$4121_calldata_ptr",
													"typeString": "struct IV4Router.ExactOutputParams"
												},
												"typeName": {
													"id": 4461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4460,
														"name": "IV4Router.ExactOutputParams",
														"nameLocations": [
															"9592:9:35",
															"9602:17:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4121,
														"src": "9592:27:35"
													},
													"referencedDeclaration": 4121,
													"src": "9592:27:35",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$4121_storage_ptr",
														"typeString": "struct IV4Router.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9591:49:35"
									},
									"scope": 4600,
									"src": "9488:670:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4476,
										"nodeType": "Block",
										"src": "10417:528:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "10555:384:35",
													"nodeType": "YulBlock",
													"src": "10555:384:35",
													"statements": [
														{
															"body": {
																"nativeSrc": "10760:95:35",
																"nodeType": "YulBlock",
																"src": "10760:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10785:1:35",
																					"nodeType": "YulLiteral",
																					"src": "10785:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "10788:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "10788:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10778:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "10778:6:35"
																			},
																			"nativeSrc": "10778:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "10778:31:35"
																		},
																		"nativeSrc": "10778:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "10778:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10833:4:35",
																					"nodeType": "YulLiteral",
																					"src": "10833:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10839:1:35",
																					"nodeType": "YulLiteral",
																					"src": "10839:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10826:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "10826:6:35"
																			},
																			"nativeSrc": "10826:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "10826:15:35"
																		},
																		"nativeSrc": "10826:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "10826:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "params.length",
																		"nativeSrc": "10738:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "10738:13:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10753:5:35",
																		"nodeType": "YulLiteral",
																		"src": "10753:5:35",
																		"type": "",
																		"value": "0x140"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10735:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "10735:2:35"
																},
																"nativeSrc": "10735:24:35",
																"nodeType": "YulFunctionCall",
																"src": "10735:24:35"
															},
															"nativeSrc": "10732:123:35",
															"nodeType": "YulIf",
															"src": "10732:123:35"
														},
														{
															"nativeSrc": "10868:61:35",
															"nodeType": "YulAssignment",
															"src": "10868:61:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "10886:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "10886:13:35"
																	},
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "10914:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "10914:13:35"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10901:12:35",
																			"nodeType": "YulIdentifier",
																			"src": "10901:12:35"
																		},
																		"nativeSrc": "10901:27:35",
																		"nodeType": "YulFunctionCall",
																		"src": "10901:27:35"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10882:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "10882:3:35"
																},
																"nativeSrc": "10882:47:35",
																"nodeType": "YulFunctionCall",
																"src": "10882:47:35"
															},
															"variableNames": [
																{
																	"name": "swapParams",
																	"nativeSrc": "10868:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "10868:10:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "10788:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4469,
														"isOffset": false,
														"isSlot": false,
														"src": "10738:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4469,
														"isOffset": true,
														"isSlot": false,
														"src": "10886:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4469,
														"isOffset": true,
														"isSlot": false,
														"src": "10914:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4473,
														"isOffset": false,
														"isSlot": false,
														"src": "10868:10:35",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4475,
												"nodeType": "InlineAssembly",
												"src": "10530:409:35"
											}
										]
									},
									"documentation": {
										"id": 4467,
										"nodeType": "StructuredDocumentation",
										"src": "10164:79:35",
										"text": "@dev equivalent to: abi.decode(params, (IV4Router.ExactOutputSingleParams))"
									},
									"id": 4477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeSwapExactOutSingleParams",
									"nameLocation": "10257:30:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4469,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "10303:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4477,
												"src": "10288:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10288:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10287:23:35"
									},
									"returnParameters": {
										"id": 4474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4473,
												"mutability": "mutable",
												"name": "swapParams",
												"nameLocation": "10401:10:35",
												"nodeType": "VariableDeclaration",
												"scope": 4477,
												"src": "10358:53:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_calldata_ptr",
													"typeString": "struct IV4Router.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 4472,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4471,
														"name": "IV4Router.ExactOutputSingleParams",
														"nameLocations": [
															"10358:9:35",
															"10368:23:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4108,
														"src": "10358:33:35"
													},
													"referencedDeclaration": 4108,
													"src": "10358:33:35",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$4108_storage_ptr",
														"typeString": "struct IV4Router.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10357:55:35"
									},
									"scope": 4600,
									"src": "10248:697:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4487,
										"nodeType": "Block",
										"src": "11111:239:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "11146:198:35",
													"nodeType": "YulBlock",
													"src": "11146:198:35",
													"statements": [
														{
															"body": {
																"nativeSrc": "11187:95:35",
																"nodeType": "YulBlock",
																"src": "11187:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11212:1:35",
																					"nodeType": "YulLiteral",
																					"src": "11212:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "11215:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "11215:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11205:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "11205:6:35"
																			},
																			"nativeSrc": "11205:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "11205:31:35"
																		},
																		"nativeSrc": "11205:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "11205:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11260:4:35",
																					"nodeType": "YulLiteral",
																					"src": "11260:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11266:1:35",
																					"nodeType": "YulLiteral",
																					"src": "11266:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11253:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "11253:6:35"
																			},
																			"nativeSrc": "11253:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "11253:15:35"
																		},
																		"nativeSrc": "11253:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "11253:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "params.length",
																		"nativeSrc": "11166:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "11166:13:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11181:4:35",
																		"nodeType": "YulLiteral",
																		"src": "11181:4:35",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11163:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "11163:2:35"
																},
																"nativeSrc": "11163:23:35",
																"nodeType": "YulFunctionCall",
																"src": "11163:23:35"
															},
															"nativeSrc": "11160:122:35",
															"nodeType": "YulIf",
															"src": "11160:122:35"
														},
														{
															"nativeSrc": "11295:39:35",
															"nodeType": "YulAssignment",
															"src": "11295:39:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "11320:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "11320:13:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11307:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "11307:12:35"
																},
																"nativeSrc": "11307:27:35",
																"nodeType": "YulFunctionCall",
																"src": "11307:27:35"
															},
															"variableNames": [
																{
																	"name": "currency",
																	"nativeSrc": "11295:8:35",
																	"nodeType": "YulIdentifier",
																	"src": "11295:8:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "11215:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4484,
														"isOffset": false,
														"isSlot": false,
														"src": "11295:8:35",
														"valueSize": 1
													},
													{
														"declaration": 4480,
														"isOffset": false,
														"isSlot": false,
														"src": "11166:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4480,
														"isOffset": true,
														"isSlot": false,
														"src": "11320:13:35",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4486,
												"nodeType": "InlineAssembly",
												"src": "11121:223:35"
											}
										]
									},
									"documentation": {
										"id": 4478,
										"nodeType": "StructuredDocumentation",
										"src": "10951:66:35",
										"text": "@dev equivalent to: abi.decode(params, (Currency)) in calldata"
									},
									"id": 4488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeCurrency",
									"nameLocation": "11031:14:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4480,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "11061:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4488,
												"src": "11046:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11046:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11045:23:35"
									},
									"returnParameters": {
										"id": 4485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4484,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "11101:8:35",
												"nodeType": "VariableDeclaration",
												"scope": 4488,
												"src": "11092:17:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 4483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4482,
														"name": "Currency",
														"nameLocations": [
															"11092:8:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "11092:8:35"
													},
													"referencedDeclaration": 2214,
													"src": "11092:8:35",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11091:19:35"
									},
									"scope": 4600,
									"src": "11022:328:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4501,
										"nodeType": "Block",
										"src": "11551:304:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "11586:263:35",
													"nodeType": "YulBlock",
													"src": "11586:263:35",
													"statements": [
														{
															"body": {
																"nativeSrc": "11627:95:35",
																"nodeType": "YulBlock",
																"src": "11627:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11652:1:35",
																					"nodeType": "YulLiteral",
																					"src": "11652:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "11655:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "11655:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11645:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "11645:6:35"
																			},
																			"nativeSrc": "11645:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "11645:31:35"
																		},
																		"nativeSrc": "11645:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "11645:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11700:4:35",
																					"nodeType": "YulLiteral",
																					"src": "11700:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11706:1:35",
																					"nodeType": "YulLiteral",
																					"src": "11706:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11693:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "11693:6:35"
																			},
																			"nativeSrc": "11693:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "11693:15:35"
																		},
																		"nativeSrc": "11693:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "11693:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "params.length",
																		"nativeSrc": "11606:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "11606:13:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11621:4:35",
																		"nodeType": "YulLiteral",
																		"src": "11621:4:35",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11603:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "11603:2:35"
																},
																"nativeSrc": "11603:23:35",
																"nodeType": "YulFunctionCall",
																"src": "11603:23:35"
															},
															"nativeSrc": "11600:122:35",
															"nodeType": "YulIf",
															"src": "11600:122:35"
														},
														{
															"nativeSrc": "11735:40:35",
															"nodeType": "YulAssignment",
															"src": "11735:40:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "11761:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "11761:13:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11748:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "11748:12:35"
																},
																"nativeSrc": "11748:27:35",
																"nodeType": "YulFunctionCall",
																"src": "11748:27:35"
															},
															"variableNames": [
																{
																	"name": "currency0",
																	"nativeSrc": "11735:9:35",
																	"nodeType": "YulIdentifier",
																	"src": "11735:9:35"
																}
															]
														},
														{
															"nativeSrc": "11788:51:35",
															"nodeType": "YulAssignment",
															"src": "11788:51:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "11818:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "11818:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11833:4:35",
																				"nodeType": "YulLiteral",
																				"src": "11833:4:35",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11814:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "11814:3:35"
																		},
																		"nativeSrc": "11814:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "11814:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11801:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "11801:12:35"
																},
																"nativeSrc": "11801:38:35",
																"nodeType": "YulFunctionCall",
																"src": "11801:38:35"
															},
															"variableNames": [
																{
																	"name": "currency1",
																	"nativeSrc": "11788:9:35",
																	"nodeType": "YulIdentifier",
																	"src": "11788:9:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "11655:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4495,
														"isOffset": false,
														"isSlot": false,
														"src": "11735:9:35",
														"valueSize": 1
													},
													{
														"declaration": 4498,
														"isOffset": false,
														"isSlot": false,
														"src": "11788:9:35",
														"valueSize": 1
													},
													{
														"declaration": 4491,
														"isOffset": false,
														"isSlot": false,
														"src": "11606:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4491,
														"isOffset": true,
														"isSlot": false,
														"src": "11761:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4491,
														"isOffset": true,
														"isSlot": false,
														"src": "11818:13:35",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4500,
												"nodeType": "InlineAssembly",
												"src": "11561:288:35"
											}
										]
									},
									"documentation": {
										"id": 4489,
										"nodeType": "StructuredDocumentation",
										"src": "11356:76:35",
										"text": "@dev equivalent to: abi.decode(params, (Currency, Currency)) in calldata"
									},
									"id": 4502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeCurrencyPair",
									"nameLocation": "11446:18:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4491,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "11480:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4502,
												"src": "11465:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11465:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11464:23:35"
									},
									"returnParameters": {
										"id": 4499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4495,
												"mutability": "mutable",
												"name": "currency0",
												"nameLocation": "11520:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 4502,
												"src": "11511:18:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 4494,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4493,
														"name": "Currency",
														"nameLocations": [
															"11511:8:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "11511:8:35"
													},
													"referencedDeclaration": 2214,
													"src": "11511:8:35",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4498,
												"mutability": "mutable",
												"name": "currency1",
												"nameLocation": "11540:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 4502,
												"src": "11531:18:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 4497,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4496,
														"name": "Currency",
														"nameLocations": [
															"11531:8:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "11531:8:35"
													},
													"referencedDeclaration": 2214,
													"src": "11531:8:35",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11510:40:35"
									},
									"scope": 4600,
									"src": "11437:418:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4517,
										"nodeType": "Block",
										"src": "12121:367:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "12156:326:35",
													"nodeType": "YulBlock",
													"src": "12156:326:35",
													"statements": [
														{
															"body": {
																"nativeSrc": "12197:95:35",
																"nodeType": "YulBlock",
																"src": "12197:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12222:1:35",
																					"nodeType": "YulLiteral",
																					"src": "12222:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "12225:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "12225:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12215:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "12215:6:35"
																			},
																			"nativeSrc": "12215:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "12215:31:35"
																		},
																		"nativeSrc": "12215:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "12215:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12270:4:35",
																					"nodeType": "YulLiteral",
																					"src": "12270:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12276:1:35",
																					"nodeType": "YulLiteral",
																					"src": "12276:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12263:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "12263:6:35"
																			},
																			"nativeSrc": "12263:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "12263:15:35"
																		},
																		"nativeSrc": "12263:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "12263:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "params.length",
																		"nativeSrc": "12176:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "12176:13:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12191:4:35",
																		"nodeType": "YulLiteral",
																		"src": "12191:4:35",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12173:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "12173:2:35"
																},
																"nativeSrc": "12173:23:35",
																"nodeType": "YulFunctionCall",
																"src": "12173:23:35"
															},
															"nativeSrc": "12170:122:35",
															"nodeType": "YulIf",
															"src": "12170:122:35"
														},
														{
															"nativeSrc": "12305:40:35",
															"nodeType": "YulAssignment",
															"src": "12305:40:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "12331:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "12331:13:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12318:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "12318:12:35"
																},
																"nativeSrc": "12318:27:35",
																"nodeType": "YulFunctionCall",
																"src": "12318:27:35"
															},
															"variableNames": [
																{
																	"name": "currency0",
																	"nativeSrc": "12305:9:35",
																	"nodeType": "YulIdentifier",
																	"src": "12305:9:35"
																}
															]
														},
														{
															"nativeSrc": "12358:51:35",
															"nodeType": "YulAssignment",
															"src": "12358:51:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "12388:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "12388:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12403:4:35",
																				"nodeType": "YulLiteral",
																				"src": "12403:4:35",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12384:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "12384:3:35"
																		},
																		"nativeSrc": "12384:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "12384:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12371:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "12371:12:35"
																},
																"nativeSrc": "12371:38:35",
																"nodeType": "YulFunctionCall",
																"src": "12371:38:35"
															},
															"variableNames": [
																{
																	"name": "currency1",
																	"nativeSrc": "12358:9:35",
																	"nodeType": "YulIdentifier",
																	"src": "12358:9:35"
																}
															]
														},
														{
															"nativeSrc": "12422:50:35",
															"nodeType": "YulAssignment",
															"src": "12422:50:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "12451:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "12451:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12466:4:35",
																				"nodeType": "YulLiteral",
																				"src": "12466:4:35",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12447:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "12447:3:35"
																		},
																		"nativeSrc": "12447:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "12447:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12434:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "12434:12:35"
																},
																"nativeSrc": "12434:38:35",
																"nodeType": "YulFunctionCall",
																"src": "12434:38:35"
															},
															"variableNames": [
																{
																	"name": "_address",
																	"nativeSrc": "12422:8:35",
																	"nodeType": "YulIdentifier",
																	"src": "12422:8:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "12225:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4514,
														"isOffset": false,
														"isSlot": false,
														"src": "12422:8:35",
														"valueSize": 1
													},
													{
														"declaration": 4509,
														"isOffset": false,
														"isSlot": false,
														"src": "12305:9:35",
														"valueSize": 1
													},
													{
														"declaration": 4512,
														"isOffset": false,
														"isSlot": false,
														"src": "12358:9:35",
														"valueSize": 1
													},
													{
														"declaration": 4505,
														"isOffset": false,
														"isSlot": false,
														"src": "12176:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4505,
														"isOffset": true,
														"isSlot": false,
														"src": "12331:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4505,
														"isOffset": true,
														"isSlot": false,
														"src": "12388:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4505,
														"isOffset": true,
														"isSlot": false,
														"src": "12451:13:35",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4516,
												"nodeType": "InlineAssembly",
												"src": "12131:351:35"
											}
										]
									},
									"documentation": {
										"id": 4503,
										"nodeType": "StructuredDocumentation",
										"src": "11861:85:35",
										"text": "@dev equivalent to: abi.decode(params, (Currency, Currency, address)) in calldata"
									},
									"id": 4518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeCurrencyPairAndAddress",
									"nameLocation": "11960:28:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4505,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "12004:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4518,
												"src": "11989:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11989:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11988:23:35"
									},
									"returnParameters": {
										"id": 4515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4509,
												"mutability": "mutable",
												"name": "currency0",
												"nameLocation": "12068:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 4518,
												"src": "12059:18:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 4508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4507,
														"name": "Currency",
														"nameLocations": [
															"12059:8:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "12059:8:35"
													},
													"referencedDeclaration": 2214,
													"src": "12059:8:35",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4512,
												"mutability": "mutable",
												"name": "currency1",
												"nameLocation": "12088:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 4518,
												"src": "12079:18:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 4511,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4510,
														"name": "Currency",
														"nameLocations": [
															"12079:8:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "12079:8:35"
													},
													"referencedDeclaration": 2214,
													"src": "12079:8:35",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4514,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "12107:8:35",
												"nodeType": "VariableDeclaration",
												"scope": 4518,
												"src": "12099:16:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12099:7:35",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12058:58:35"
									},
									"scope": 4600,
									"src": "11951:537:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4530,
										"nodeType": "Block",
										"src": "12719:302:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "12754:261:35",
													"nodeType": "YulBlock",
													"src": "12754:261:35",
													"statements": [
														{
															"body": {
																"nativeSrc": "12795:95:35",
																"nodeType": "YulBlock",
																"src": "12795:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12820:1:35",
																					"nodeType": "YulLiteral",
																					"src": "12820:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "12823:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "12823:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12813:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "12813:6:35"
																			},
																			"nativeSrc": "12813:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "12813:31:35"
																		},
																		"nativeSrc": "12813:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "12813:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12868:4:35",
																					"nodeType": "YulLiteral",
																					"src": "12868:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12874:1:35",
																					"nodeType": "YulLiteral",
																					"src": "12874:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12861:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "12861:6:35"
																			},
																			"nativeSrc": "12861:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "12861:15:35"
																		},
																		"nativeSrc": "12861:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "12861:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "params.length",
																		"nativeSrc": "12774:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "12774:13:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12789:4:35",
																		"nodeType": "YulLiteral",
																		"src": "12789:4:35",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12771:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "12771:2:35"
																},
																"nativeSrc": "12771:23:35",
																"nodeType": "YulFunctionCall",
																"src": "12771:23:35"
															},
															"nativeSrc": "12768:122:35",
															"nodeType": "YulIf",
															"src": "12768:122:35"
														},
														{
															"nativeSrc": "12903:39:35",
															"nodeType": "YulAssignment",
															"src": "12903:39:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "12928:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "12928:13:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12915:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "12915:12:35"
																},
																"nativeSrc": "12915:27:35",
																"nodeType": "YulFunctionCall",
																"src": "12915:27:35"
															},
															"variableNames": [
																{
																	"name": "currency",
																	"nativeSrc": "12903:8:35",
																	"nodeType": "YulIdentifier",
																	"src": "12903:8:35"
																}
															]
														},
														{
															"nativeSrc": "12955:50:35",
															"nodeType": "YulAssignment",
															"src": "12955:50:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "12984:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "12984:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12999:4:35",
																				"nodeType": "YulLiteral",
																				"src": "12999:4:35",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12980:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "12980:3:35"
																		},
																		"nativeSrc": "12980:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "12980:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12967:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "12967:12:35"
																},
																"nativeSrc": "12967:38:35",
																"nodeType": "YulFunctionCall",
																"src": "12967:38:35"
															},
															"variableNames": [
																{
																	"name": "_address",
																	"nativeSrc": "12955:8:35",
																	"nodeType": "YulIdentifier",
																	"src": "12955:8:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "12823:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4527,
														"isOffset": false,
														"isSlot": false,
														"src": "12955:8:35",
														"valueSize": 1
													},
													{
														"declaration": 4525,
														"isOffset": false,
														"isSlot": false,
														"src": "12903:8:35",
														"valueSize": 1
													},
													{
														"declaration": 4521,
														"isOffset": false,
														"isSlot": false,
														"src": "12774:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4521,
														"isOffset": true,
														"isSlot": false,
														"src": "12928:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4521,
														"isOffset": true,
														"isSlot": false,
														"src": "12984:13:35",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4529,
												"nodeType": "InlineAssembly",
												"src": "12729:286:35"
											}
										]
									},
									"documentation": {
										"id": 4519,
										"nodeType": "StructuredDocumentation",
										"src": "12494:75:35",
										"text": "@dev equivalent to: abi.decode(params, (Currency, address)) in calldata"
									},
									"id": 4531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeCurrencyAndAddress",
									"nameLocation": "12583:24:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4521,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "12623:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4531,
												"src": "12608:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12608:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12607:23:35"
									},
									"returnParameters": {
										"id": 4528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4525,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "12687:8:35",
												"nodeType": "VariableDeclaration",
												"scope": 4531,
												"src": "12678:17:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 4524,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4523,
														"name": "Currency",
														"nameLocations": [
															"12678:8:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "12678:8:35"
													},
													"referencedDeclaration": 2214,
													"src": "12678:8:35",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4527,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "12705:8:35",
												"nodeType": "VariableDeclaration",
												"scope": 4531,
												"src": "12697:16:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12697:7:35",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12677:37:35"
									},
									"scope": 4600,
									"src": "12574:447:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4545,
										"nodeType": "Block",
										"src": "13284:363:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "13319:322:35",
													"nodeType": "YulBlock",
													"src": "13319:322:35",
													"statements": [
														{
															"body": {
																"nativeSrc": "13360:95:35",
																"nodeType": "YulBlock",
																"src": "13360:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13385:1:35",
																					"nodeType": "YulLiteral",
																					"src": "13385:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "13388:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "13388:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13378:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "13378:6:35"
																			},
																			"nativeSrc": "13378:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "13378:31:35"
																		},
																		"nativeSrc": "13378:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "13378:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13433:4:35",
																					"nodeType": "YulLiteral",
																					"src": "13433:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13439:1:35",
																					"nodeType": "YulLiteral",
																					"src": "13439:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13426:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "13426:6:35"
																			},
																			"nativeSrc": "13426:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "13426:15:35"
																		},
																		"nativeSrc": "13426:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "13426:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "params.length",
																		"nativeSrc": "13339:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "13339:13:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13354:4:35",
																		"nodeType": "YulLiteral",
																		"src": "13354:4:35",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13336:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "13336:2:35"
																},
																"nativeSrc": "13336:23:35",
																"nodeType": "YulFunctionCall",
																"src": "13336:23:35"
															},
															"nativeSrc": "13333:122:35",
															"nodeType": "YulIf",
															"src": "13333:122:35"
														},
														{
															"nativeSrc": "13468:39:35",
															"nodeType": "YulAssignment",
															"src": "13468:39:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "13493:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "13493:13:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "13480:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "13480:12:35"
																},
																"nativeSrc": "13480:27:35",
																"nodeType": "YulFunctionCall",
																"src": "13480:27:35"
															},
															"variableNames": [
																{
																	"name": "currency",
																	"nativeSrc": "13468:8:35",
																	"nodeType": "YulIdentifier",
																	"src": "13468:8:35"
																}
															]
														},
														{
															"nativeSrc": "13520:50:35",
															"nodeType": "YulAssignment",
															"src": "13520:50:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "13549:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "13549:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13564:4:35",
																				"nodeType": "YulLiteral",
																				"src": "13564:4:35",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13545:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "13545:3:35"
																		},
																		"nativeSrc": "13545:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "13545:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "13532:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "13532:12:35"
																},
																"nativeSrc": "13532:38:35",
																"nodeType": "YulFunctionCall",
																"src": "13532:38:35"
															},
															"variableNames": [
																{
																	"name": "_address",
																	"nativeSrc": "13520:8:35",
																	"nodeType": "YulIdentifier",
																	"src": "13520:8:35"
																}
															]
														},
														{
															"nativeSrc": "13583:48:35",
															"nodeType": "YulAssignment",
															"src": "13583:48:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "13610:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "13610:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13625:4:35",
																				"nodeType": "YulLiteral",
																				"src": "13625:4:35",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13606:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "13606:3:35"
																		},
																		"nativeSrc": "13606:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "13606:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "13593:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "13593:12:35"
																},
																"nativeSrc": "13593:38:35",
																"nodeType": "YulFunctionCall",
																"src": "13593:38:35"
															},
															"variableNames": [
																{
																	"name": "amount",
																	"nativeSrc": "13583:6:35",
																	"nodeType": "YulIdentifier",
																	"src": "13583:6:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "13388:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4540,
														"isOffset": false,
														"isSlot": false,
														"src": "13520:8:35",
														"valueSize": 1
													},
													{
														"declaration": 4542,
														"isOffset": false,
														"isSlot": false,
														"src": "13583:6:35",
														"valueSize": 1
													},
													{
														"declaration": 4538,
														"isOffset": false,
														"isSlot": false,
														"src": "13468:8:35",
														"valueSize": 1
													},
													{
														"declaration": 4534,
														"isOffset": false,
														"isSlot": false,
														"src": "13339:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4534,
														"isOffset": true,
														"isSlot": false,
														"src": "13493:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4534,
														"isOffset": true,
														"isSlot": false,
														"src": "13549:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4534,
														"isOffset": true,
														"isSlot": false,
														"src": "13610:13:35",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4544,
												"nodeType": "InlineAssembly",
												"src": "13294:347:35"
											}
										]
									},
									"documentation": {
										"id": 4532,
										"nodeType": "StructuredDocumentation",
										"src": "13027:84:35",
										"text": "@dev equivalent to: abi.decode(params, (Currency, address, uint256)) in calldata"
									},
									"id": 4546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeCurrencyAddressAndUint256",
									"nameLocation": "13125:31:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4534,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "13172:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4546,
												"src": "13157:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13157:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13156:23:35"
									},
									"returnParameters": {
										"id": 4543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4538,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "13236:8:35",
												"nodeType": "VariableDeclaration",
												"scope": 4546,
												"src": "13227:17:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 4537,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4536,
														"name": "Currency",
														"nameLocations": [
															"13227:8:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "13227:8:35"
													},
													"referencedDeclaration": 2214,
													"src": "13227:8:35",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4540,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "13254:8:35",
												"nodeType": "VariableDeclaration",
												"scope": 4546,
												"src": "13246:16:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13246:7:35",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4542,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13272:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4546,
												"src": "13264:14:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13264:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13226:53:35"
									},
									"scope": 4600,
									"src": "13116:531:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4558,
										"nodeType": "Block",
										"src": "13876:300:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "13911:259:35",
													"nodeType": "YulBlock",
													"src": "13911:259:35",
													"statements": [
														{
															"body": {
																"nativeSrc": "13952:95:35",
																"nodeType": "YulBlock",
																"src": "13952:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13977:1:35",
																					"nodeType": "YulLiteral",
																					"src": "13977:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "13980:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "13980:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13970:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "13970:6:35"
																			},
																			"nativeSrc": "13970:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "13970:31:35"
																		},
																		"nativeSrc": "13970:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "13970:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14025:4:35",
																					"nodeType": "YulLiteral",
																					"src": "14025:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14031:1:35",
																					"nodeType": "YulLiteral",
																					"src": "14031:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14018:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "14018:6:35"
																			},
																			"nativeSrc": "14018:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "14018:15:35"
																		},
																		"nativeSrc": "14018:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "14018:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "params.length",
																		"nativeSrc": "13931:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "13931:13:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13946:4:35",
																		"nodeType": "YulLiteral",
																		"src": "13946:4:35",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13928:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "13928:2:35"
																},
																"nativeSrc": "13928:23:35",
																"nodeType": "YulFunctionCall",
																"src": "13928:23:35"
															},
															"nativeSrc": "13925:122:35",
															"nodeType": "YulIf",
															"src": "13925:122:35"
														},
														{
															"nativeSrc": "14060:39:35",
															"nodeType": "YulAssignment",
															"src": "14060:39:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "14085:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "14085:13:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "14072:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "14072:12:35"
																},
																"nativeSrc": "14072:27:35",
																"nodeType": "YulFunctionCall",
																"src": "14072:27:35"
															},
															"variableNames": [
																{
																	"name": "currency",
																	"nativeSrc": "14060:8:35",
																	"nodeType": "YulIdentifier",
																	"src": "14060:8:35"
																}
															]
														},
														{
															"nativeSrc": "14112:48:35",
															"nodeType": "YulAssignment",
															"src": "14112:48:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "14139:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "14139:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14154:4:35",
																				"nodeType": "YulLiteral",
																				"src": "14154:4:35",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14135:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "14135:3:35"
																		},
																		"nativeSrc": "14135:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "14135:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "14122:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "14122:12:35"
																},
																"nativeSrc": "14122:38:35",
																"nodeType": "YulFunctionCall",
																"src": "14122:38:35"
															},
															"variableNames": [
																{
																	"name": "amount",
																	"nativeSrc": "14112:6:35",
																	"nodeType": "YulIdentifier",
																	"src": "14112:6:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "13980:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4555,
														"isOffset": false,
														"isSlot": false,
														"src": "14112:6:35",
														"valueSize": 1
													},
													{
														"declaration": 4553,
														"isOffset": false,
														"isSlot": false,
														"src": "14060:8:35",
														"valueSize": 1
													},
													{
														"declaration": 4549,
														"isOffset": false,
														"isSlot": false,
														"src": "13931:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4549,
														"isOffset": true,
														"isSlot": false,
														"src": "14085:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4549,
														"isOffset": true,
														"isSlot": false,
														"src": "14139:13:35",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4557,
												"nodeType": "InlineAssembly",
												"src": "13886:284:35"
											}
										]
									},
									"documentation": {
										"id": 4547,
										"nodeType": "StructuredDocumentation",
										"src": "13653:75:35",
										"text": "@dev equivalent to: abi.decode(params, (Currency, uint256)) in calldata"
									},
									"id": 4559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeCurrencyAndUint256",
									"nameLocation": "13742:24:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4549,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "13782:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4559,
												"src": "13767:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13767:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13766:23:35"
									},
									"returnParameters": {
										"id": 4556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4553,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "13846:8:35",
												"nodeType": "VariableDeclaration",
												"scope": 4559,
												"src": "13837:17:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 4552,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4551,
														"name": "Currency",
														"nameLocations": [
															"13837:8:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "13837:8:35"
													},
													"referencedDeclaration": 2214,
													"src": "13837:8:35",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4555,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13864:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4559,
												"src": "13856:14:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13856:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13836:35:35"
									},
									"scope": 4600,
									"src": "13733:443:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4568,
										"nodeType": "Block",
										"src": "14337:237:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "14372:196:35",
													"nodeType": "YulBlock",
													"src": "14372:196:35",
													"statements": [
														{
															"body": {
																"nativeSrc": "14413:95:35",
																"nodeType": "YulBlock",
																"src": "14413:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14438:1:35",
																					"nodeType": "YulLiteral",
																					"src": "14438:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "14441:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "14441:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14431:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "14431:6:35"
																			},
																			"nativeSrc": "14431:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "14431:31:35"
																		},
																		"nativeSrc": "14431:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "14431:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14486:4:35",
																					"nodeType": "YulLiteral",
																					"src": "14486:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14492:1:35",
																					"nodeType": "YulLiteral",
																					"src": "14492:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14479:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "14479:6:35"
																			},
																			"nativeSrc": "14479:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "14479:15:35"
																		},
																		"nativeSrc": "14479:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "14479:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "params.length",
																		"nativeSrc": "14392:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "14392:13:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14407:4:35",
																		"nodeType": "YulLiteral",
																		"src": "14407:4:35",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14389:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "14389:2:35"
																},
																"nativeSrc": "14389:23:35",
																"nodeType": "YulFunctionCall",
																"src": "14389:23:35"
															},
															"nativeSrc": "14386:122:35",
															"nodeType": "YulIf",
															"src": "14386:122:35"
														},
														{
															"nativeSrc": "14521:37:35",
															"nodeType": "YulAssignment",
															"src": "14521:37:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "14544:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "14544:13:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "14531:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "14531:12:35"
																},
																"nativeSrc": "14531:27:35",
																"nodeType": "YulFunctionCall",
																"src": "14531:27:35"
															},
															"variableNames": [
																{
																	"name": "amount",
																	"nativeSrc": "14521:6:35",
																	"nodeType": "YulIdentifier",
																	"src": "14521:6:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "14441:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4565,
														"isOffset": false,
														"isSlot": false,
														"src": "14521:6:35",
														"valueSize": 1
													},
													{
														"declaration": 4562,
														"isOffset": false,
														"isSlot": false,
														"src": "14392:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4562,
														"isOffset": true,
														"isSlot": false,
														"src": "14544:13:35",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4567,
												"nodeType": "InlineAssembly",
												"src": "14347:221:35"
											}
										]
									},
									"documentation": {
										"id": 4560,
										"nodeType": "StructuredDocumentation",
										"src": "14182:65:35",
										"text": "@dev equivalent to: abi.decode(params, (uint256)) in calldata"
									},
									"id": 4569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeUint256",
									"nameLocation": "14261:13:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4562,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "14290:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4569,
												"src": "14275:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14275:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14274:23:35"
									},
									"returnParameters": {
										"id": 4566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4565,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14329:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4569,
												"src": "14321:14:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14321:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14320:16:35"
									},
									"scope": 4600,
									"src": "14252:322:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4583,
										"nodeType": "Block",
										"src": "14827:362:35",
										"statements": [
											{
												"AST": {
													"nativeSrc": "14862:321:35",
													"nodeType": "YulBlock",
													"src": "14862:321:35",
													"statements": [
														{
															"body": {
																"nativeSrc": "14903:95:35",
																"nodeType": "YulBlock",
																"src": "14903:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14928:1:35",
																					"nodeType": "YulLiteral",
																					"src": "14928:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "14931:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "14931:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14921:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "14921:6:35"
																			},
																			"nativeSrc": "14921:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "14921:31:35"
																		},
																		"nativeSrc": "14921:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "14921:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14976:4:35",
																					"nodeType": "YulLiteral",
																					"src": "14976:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14982:1:35",
																					"nodeType": "YulLiteral",
																					"src": "14982:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14969:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "14969:6:35"
																			},
																			"nativeSrc": "14969:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "14969:15:35"
																		},
																		"nativeSrc": "14969:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "14969:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "params.length",
																		"nativeSrc": "14882:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "14882:13:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14897:4:35",
																		"nodeType": "YulLiteral",
																		"src": "14897:4:35",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14879:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "14879:2:35"
																},
																"nativeSrc": "14879:23:35",
																"nodeType": "YulFunctionCall",
																"src": "14879:23:35"
															},
															"nativeSrc": "14876:122:35",
															"nodeType": "YulIf",
															"src": "14876:122:35"
														},
														{
															"nativeSrc": "15011:39:35",
															"nodeType": "YulAssignment",
															"src": "15011:39:35",
															"value": {
																"arguments": [
																	{
																		"name": "params.offset",
																		"nativeSrc": "15036:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "15036:13:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "15023:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "15023:12:35"
																},
																"nativeSrc": "15023:27:35",
																"nodeType": "YulFunctionCall",
																"src": "15023:27:35"
															},
															"variableNames": [
																{
																	"name": "currency",
																	"nativeSrc": "15011:8:35",
																	"nodeType": "YulIdentifier",
																	"src": "15011:8:35"
																}
															]
														},
														{
															"nativeSrc": "15063:48:35",
															"nodeType": "YulAssignment",
															"src": "15063:48:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "15090:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "15090:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15105:4:35",
																				"nodeType": "YulLiteral",
																				"src": "15105:4:35",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15086:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "15086:3:35"
																		},
																		"nativeSrc": "15086:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "15086:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "15073:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "15073:12:35"
																},
																"nativeSrc": "15073:38:35",
																"nodeType": "YulFunctionCall",
																"src": "15073:38:35"
															},
															"variableNames": [
																{
																	"name": "amount",
																	"nativeSrc": "15063:6:35",
																	"nodeType": "YulIdentifier",
																	"src": "15063:6:35"
																}
															]
														},
														{
															"nativeSrc": "15124:49:35",
															"nodeType": "YulAssignment",
															"src": "15124:49:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "params.offset",
																				"nativeSrc": "15152:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "15152:13:35"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15167:4:35",
																				"nodeType": "YulLiteral",
																				"src": "15167:4:35",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15148:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "15148:3:35"
																		},
																		"nativeSrc": "15148:24:35",
																		"nodeType": "YulFunctionCall",
																		"src": "15148:24:35"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "15135:12:35",
																	"nodeType": "YulIdentifier",
																	"src": "15135:12:35"
																},
																"nativeSrc": "15135:38:35",
																"nodeType": "YulFunctionCall",
																"src": "15135:38:35"
															},
															"variableNames": [
																{
																	"name": "boolean",
																	"nativeSrc": "15124:7:35",
																	"nodeType": "YulIdentifier",
																	"src": "15124:7:35"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "14931:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4578,
														"isOffset": false,
														"isSlot": false,
														"src": "15063:6:35",
														"valueSize": 1
													},
													{
														"declaration": 4580,
														"isOffset": false,
														"isSlot": false,
														"src": "15124:7:35",
														"valueSize": 1
													},
													{
														"declaration": 4576,
														"isOffset": false,
														"isSlot": false,
														"src": "15011:8:35",
														"valueSize": 1
													},
													{
														"declaration": 4572,
														"isOffset": false,
														"isSlot": false,
														"src": "14882:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4572,
														"isOffset": true,
														"isSlot": false,
														"src": "15036:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4572,
														"isOffset": true,
														"isSlot": false,
														"src": "15090:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4572,
														"isOffset": true,
														"isSlot": false,
														"src": "15152:13:35",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4582,
												"nodeType": "InlineAssembly",
												"src": "14837:346:35"
											}
										]
									},
									"documentation": {
										"id": 4570,
										"nodeType": "StructuredDocumentation",
										"src": "14580:81:35",
										"text": "@dev equivalent to: abi.decode(params, (Currency, uint256, bool)) in calldata"
									},
									"id": 4584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeCurrencyUint256AndBool",
									"nameLocation": "14675:28:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4572,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "14719:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4584,
												"src": "14704:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4571,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14704:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14703:23:35"
									},
									"returnParameters": {
										"id": 4581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4576,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "14783:8:35",
												"nodeType": "VariableDeclaration",
												"scope": 4584,
												"src": "14774:17:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 4575,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4574,
														"name": "Currency",
														"nameLocations": [
															"14774:8:35"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "14774:8:35"
													},
													"referencedDeclaration": 2214,
													"src": "14774:8:35",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4578,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14801:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4584,
												"src": "14793:14:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14793:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4580,
												"mutability": "mutable",
												"name": "boolean",
												"nameLocation": "14814:7:35",
												"nodeType": "VariableDeclaration",
												"scope": 4584,
												"src": "14809:12:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14809:4:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14773:49:35"
									},
									"scope": 4600,
									"src": "14666:523:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4598,
										"nodeType": "Block",
										"src": "15493:981:35",
										"statements": [
											{
												"assignments": [
													4595
												],
												"declarations": [
													{
														"constant": false,
														"id": 4595,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "15511:6:35",
														"nodeType": "VariableDeclaration",
														"scope": 4598,
														"src": "15503:14:35",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4594,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15503:7:35",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4596,
												"nodeType": "VariableDeclarationStatement",
												"src": "15503:14:35"
											},
											{
												"AST": {
													"nativeSrc": "15552:916:35",
													"nodeType": "YulBlock",
													"src": "15552:916:35",
													"statements": [
														{
															"nativeSrc": "15732:127:35",
															"nodeType": "YulVariableDeclaration",
															"src": "15732:127:35",
															"value": {
																"arguments": [
																	{
																		"name": "_bytes.offset",
																		"nativeSrc": "15769:13:35",
																		"nodeType": "YulIdentifier",
																		"src": "15769:13:35"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_bytes.offset",
																								"nativeSrc": "15805:13:35",
																								"nodeType": "YulIdentifier",
																								"src": "15805:13:35"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "15824:1:35",
																										"nodeType": "YulLiteral",
																										"src": "15824:1:35",
																										"type": "",
																										"value": "5"
																									},
																									{
																										"name": "_arg",
																										"nativeSrc": "15827:4:35",
																										"nodeType": "YulIdentifier",
																										"src": "15827:4:35"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "15820:3:35",
																									"nodeType": "YulIdentifier",
																									"src": "15820:3:35"
																								},
																								"nativeSrc": "15820:12:35",
																								"nodeType": "YulFunctionCall",
																								"src": "15820:12:35"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "15801:3:35",
																							"nodeType": "YulIdentifier",
																							"src": "15801:3:35"
																						},
																						"nativeSrc": "15801:32:35",
																						"nodeType": "YulFunctionCall",
																						"src": "15801:32:35"
																					}
																				],
																				"functionName": {
																					"name": "calldataload",
																					"nativeSrc": "15788:12:35",
																					"nodeType": "YulIdentifier",
																					"src": "15788:12:35"
																				},
																				"nativeSrc": "15788:46:35",
																				"nodeType": "YulFunctionCall",
																				"src": "15788:46:35"
																			},
																			{
																				"name": "OFFSET_OR_LENGTH_MASK",
																				"nativeSrc": "15836:21:35",
																				"nodeType": "YulIdentifier",
																				"src": "15836:21:35"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15784:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "15784:3:35"
																		},
																		"nativeSrc": "15784:74:35",
																		"nodeType": "YulFunctionCall",
																		"src": "15784:74:35"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15765:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "15765:3:35"
																},
																"nativeSrc": "15765:94:35",
																"nodeType": "YulFunctionCall",
																"src": "15765:94:35"
															},
															"variables": [
																{
																	"name": "lengthPtr",
																	"nativeSrc": "15736:9:35",
																	"nodeType": "YulTypedName",
																	"src": "15736:9:35",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15927:61:35",
															"nodeType": "YulAssignment",
															"src": "15927:61:35",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "lengthPtr",
																				"nativeSrc": "15954:9:35",
																				"nodeType": "YulIdentifier",
																				"src": "15954:9:35"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "15941:12:35",
																			"nodeType": "YulIdentifier",
																			"src": "15941:12:35"
																		},
																		"nativeSrc": "15941:23:35",
																		"nodeType": "YulFunctionCall",
																		"src": "15941:23:35"
																	},
																	{
																		"name": "OFFSET_OR_LENGTH_MASK",
																		"nativeSrc": "15966:21:35",
																		"nodeType": "YulIdentifier",
																		"src": "15966:21:35"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15937:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "15937:3:35"
																},
																"nativeSrc": "15937:51:35",
																"nodeType": "YulFunctionCall",
																"src": "15937:51:35"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15927:6:35",
																	"nodeType": "YulIdentifier",
																	"src": "15927:6:35"
																}
															]
														},
														{
															"nativeSrc": "16057:34:35",
															"nodeType": "YulVariableDeclaration",
															"src": "16057:34:35",
															"value": {
																"arguments": [
																	{
																		"name": "lengthPtr",
																		"nativeSrc": "16075:9:35",
																		"nodeType": "YulIdentifier",
																		"src": "16075:9:35"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16086:4:35",
																		"nodeType": "YulLiteral",
																		"src": "16086:4:35",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16071:3:35",
																	"nodeType": "YulIdentifier",
																	"src": "16071:3:35"
																},
																"nativeSrc": "16071:20:35",
																"nodeType": "YulFunctionCall",
																"src": "16071:20:35"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "16061:6:35",
																	"nodeType": "YulTypedName",
																	"src": "16061:6:35",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16148:20:35",
															"nodeType": "YulAssignment",
															"src": "16148:20:35",
															"value": {
																"name": "length",
																"nativeSrc": "16162:6:35",
																"nodeType": "YulIdentifier",
																"src": "16162:6:35"
															},
															"variableNames": [
																{
																	"name": "res.length",
																	"nativeSrc": "16148:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "16148:10:35"
																}
															]
														},
														{
															"nativeSrc": "16181:20:35",
															"nodeType": "YulAssignment",
															"src": "16181:20:35",
															"value": {
																"name": "offset",
																"nativeSrc": "16195:6:35",
																"nodeType": "YulIdentifier",
																"src": "16195:6:35"
															},
															"variableNames": [
																{
																	"name": "res.offset",
																	"nativeSrc": "16181:10:35",
																	"nodeType": "YulIdentifier",
																	"src": "16181:10:35"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16363:95:35",
																"nodeType": "YulBlock",
																"src": "16363:95:35",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16388:1:35",
																					"nodeType": "YulLiteral",
																					"src": "16388:1:35",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "SLICE_ERROR_SELECTOR",
																					"nativeSrc": "16391:20:35",
																					"nodeType": "YulIdentifier",
																					"src": "16391:20:35"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "16381:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "16381:6:35"
																			},
																			"nativeSrc": "16381:31:35",
																			"nodeType": "YulFunctionCall",
																			"src": "16381:31:35"
																		},
																		"nativeSrc": "16381:31:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "16381:31:35"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16436:4:35",
																					"nodeType": "YulLiteral",
																					"src": "16436:4:35",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16442:1:35",
																					"nodeType": "YulLiteral",
																					"src": "16442:1:35",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16429:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "16429:6:35"
																			},
																			"nativeSrc": "16429:15:35",
																			"nodeType": "YulFunctionCall",
																			"src": "16429:15:35"
																		},
																		"nativeSrc": "16429:15:35",
																		"nodeType": "YulExpressionStatement",
																		"src": "16429:15:35"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_bytes.length",
																				"nativeSrc": "16311:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "16311:13:35"
																			},
																			{
																				"name": "_bytes.offset",
																				"nativeSrc": "16326:13:35",
																				"nodeType": "YulIdentifier",
																				"src": "16326:13:35"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16307:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "16307:3:35"
																		},
																		"nativeSrc": "16307:33:35",
																		"nodeType": "YulFunctionCall",
																		"src": "16307:33:35"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "16346:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "16346:6:35"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "16354:6:35",
																				"nodeType": "YulIdentifier",
																				"src": "16354:6:35"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16342:3:35",
																			"nodeType": "YulIdentifier",
																			"src": "16342:3:35"
																		},
																		"nativeSrc": "16342:19:35",
																		"nodeType": "YulFunctionCall",
																		"src": "16342:19:35"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16304:2:35",
																	"nodeType": "YulIdentifier",
																	"src": "16304:2:35"
																},
																"nativeSrc": "16304:58:35",
																"nodeType": "YulFunctionCall",
																"src": "16304:58:35"
															},
															"nativeSrc": "16301:157:35",
															"nodeType": "YulIf",
															"src": "16301:157:35"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4280,
														"isOffset": false,
														"isSlot": false,
														"src": "15836:21:35",
														"valueSize": 1
													},
													{
														"declaration": 4280,
														"isOffset": false,
														"isSlot": false,
														"src": "15966:21:35",
														"valueSize": 1
													},
													{
														"declaration": 4287,
														"isOffset": false,
														"isSlot": false,
														"src": "16391:20:35",
														"valueSize": 1
													},
													{
														"declaration": 4589,
														"isOffset": false,
														"isSlot": false,
														"src": "15827:4:35",
														"valueSize": 1
													},
													{
														"declaration": 4587,
														"isOffset": false,
														"isSlot": false,
														"src": "16311:13:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4587,
														"isOffset": true,
														"isSlot": false,
														"src": "15769:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4587,
														"isOffset": true,
														"isSlot": false,
														"src": "15805:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4587,
														"isOffset": true,
														"isSlot": false,
														"src": "16326:13:35",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 4595,
														"isOffset": false,
														"isSlot": false,
														"src": "15927:6:35",
														"valueSize": 1
													},
													{
														"declaration": 4595,
														"isOffset": false,
														"isSlot": false,
														"src": "16162:6:35",
														"valueSize": 1
													},
													{
														"declaration": 4595,
														"isOffset": false,
														"isSlot": false,
														"src": "16346:6:35",
														"valueSize": 1
													},
													{
														"declaration": 4592,
														"isOffset": false,
														"isSlot": false,
														"src": "16148:10:35",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 4592,
														"isOffset": true,
														"isSlot": false,
														"src": "16181:10:35",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4597,
												"nodeType": "InlineAssembly",
												"src": "15527:941:35"
											}
										]
									},
									"documentation": {
										"id": 4585,
										"nodeType": "StructuredDocumentation",
										"src": "15195:196:35",
										"text": "@notice Decode the `_arg`-th element in `_bytes` as `bytes`\n @param _bytes The input bytes string to extract a bytes string from\n @param _arg The index of the argument to extract"
									},
									"id": 4599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBytes",
									"nameLocation": "15405:7:35",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4587,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "15428:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 4599,
												"src": "15413:21:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15413:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4589,
												"mutability": "mutable",
												"name": "_arg",
												"nameLocation": "15444:4:35",
												"nodeType": "VariableDeclaration",
												"scope": 4599,
												"src": "15436:12:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15436:7:35",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15412:37:35"
									},
									"returnParameters": {
										"id": 4593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4592,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "15488:3:35",
												"nodeType": "VariableDeclaration",
												"scope": 4599,
												"src": "15473:18:35",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15473:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15472:20:35"
									},
									"scope": 4600,
									"src": "15396:1078:35",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4601,
							"src": "291:16185:35",
							"usedErrors": [
								4276
							],
							"usedEvents": []
						}
					],
					"src": "32:16445:35"
				},
				"id": 35
			},
			"https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v4-periphery/src/libraries/PathKey.sol",
					"exportedSymbols": {
						"Currency": [
							2214
						],
						"IHooks": [
							331
						],
						"PathKey": [
							4621
						],
						"PathKeyLibrary": [
							4685
						],
						"PoolKey": [
							2560
						]
					},
					"id": 4686,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4602,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:36"
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/Currency.sol",
							"file": "@uniswap/v4-core/src/types/Currency.sol",
							"id": 4604,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4686,
							"sourceUnit": 2509,
							"src": "56:65:36",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4603,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2214,
										"src": "64:8:36",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/interfaces/IHooks.sol",
							"file": "@uniswap/v4-core/src/interfaces/IHooks.sol",
							"id": 4606,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4686,
							"sourceUnit": 332,
							"src": "122:66:36",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4605,
										"name": "IHooks",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 331,
										"src": "130:6:36",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v4-core/src/types/PoolKey.sol",
							"file": "@uniswap/v4-core/src/types/PoolKey.sol",
							"id": 4608,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4686,
							"sourceUnit": 2561,
							"src": "189:63:36",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4607,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2560,
										"src": "197:7:36",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "PathKey",
							"id": 4621,
							"members": [
								{
									"constant": false,
									"id": 4611,
									"mutability": "mutable",
									"name": "intermediateCurrency",
									"nameLocation": "284:20:36",
									"nodeType": "VariableDeclaration",
									"scope": 4621,
									"src": "275:29:36",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
										"typeString": "Currency"
									},
									"typeName": {
										"id": 4610,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4609,
											"name": "Currency",
											"nameLocations": [
												"275:8:36"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2214,
											"src": "275:8:36"
										},
										"referencedDeclaration": 2214,
										"src": "275:8:36",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
											"typeString": "Currency"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4613,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "317:3:36",
									"nodeType": "VariableDeclaration",
									"scope": 4621,
									"src": "310:10:36",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 4612,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "310:6:36",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4615,
									"mutability": "mutable",
									"name": "tickSpacing",
									"nameLocation": "332:11:36",
									"nodeType": "VariableDeclaration",
									"scope": 4621,
									"src": "326:17:36",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 4614,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "326:5:36",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4618,
									"mutability": "mutable",
									"name": "hooks",
									"nameLocation": "356:5:36",
									"nodeType": "VariableDeclaration",
									"scope": 4621,
									"src": "349:12:36",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IHooks_$331",
										"typeString": "contract IHooks"
									},
									"typeName": {
										"id": 4617,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4616,
											"name": "IHooks",
											"nameLocations": [
												"349:6:36"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 331,
											"src": "349:6:36"
										},
										"referencedDeclaration": 331,
										"src": "349:6:36",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IHooks_$331",
											"typeString": "contract IHooks"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4620,
									"mutability": "mutable",
									"name": "hookData",
									"nameLocation": "373:8:36",
									"nodeType": "VariableDeclaration",
									"scope": 4621,
									"src": "367:14:36",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 4619,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "367:5:36",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "PathKey",
							"nameLocation": "261:7:36",
							"nodeType": "StructDefinition",
							"scope": 4686,
							"src": "254:130:36",
							"visibility": "public"
						},
						{
							"global": true,
							"id": 4625,
							"libraryName": {
								"id": 4622,
								"name": "PathKeyLibrary",
								"nameLocations": [
									"392:14:36"
								],
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 4685,
								"src": "392:14:36"
							},
							"nodeType": "UsingForDirective",
							"src": "386:40:36",
							"typeName": {
								"id": 4624,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 4623,
									"name": "PathKey",
									"nameLocations": [
										"411:7:36"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 4621,
									"src": "411:7:36"
								},
								"referencedDeclaration": 4621,
								"src": "411:7:36",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_PathKey_$4621_storage_ptr",
									"typeString": "struct PathKey"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PathKeyLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4626,
								"nodeType": "StructuredDocumentation",
								"src": "428:75:36",
								"text": "@title PathKey Library\n @notice Functions for working with PathKeys"
							},
							"fullyImplemented": true,
							"id": 4685,
							"linearizedBaseContracts": [
								4685
							],
							"name": "PathKeyLibrary",
							"nameLocation": "511:14:36",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4683,
										"nodeType": "Block",
										"src": "1008:354:36",
										"statements": [
											{
												"assignments": [
													4643
												],
												"declarations": [
													{
														"constant": false,
														"id": 4643,
														"mutability": "mutable",
														"name": "currencyOut",
														"nameLocation": "1027:11:36",
														"nodeType": "VariableDeclaration",
														"scope": 4683,
														"src": "1018:20:36",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														},
														"typeName": {
															"id": 4642,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4641,
																"name": "Currency",
																"nameLocations": [
																	"1018:8:36"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2214,
																"src": "1018:8:36"
															},
															"referencedDeclaration": 2214,
															"src": "1018:8:36",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4646,
												"initialValue": {
													"expression": {
														"id": 4644,
														"name": "params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4630,
														"src": "1041:6:36",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
															"typeString": "struct PathKey calldata"
														}
													},
													"id": 4645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1048:20:36",
													"memberName": "intermediateCurrency",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4611,
													"src": "1041:27:36",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1018:50:36"
											},
											{
												"assignments": [
													4649,
													4652
												],
												"declarations": [
													{
														"constant": false,
														"id": 4649,
														"mutability": "mutable",
														"name": "currency0",
														"nameLocation": "1088:9:36",
														"nodeType": "VariableDeclaration",
														"scope": 4683,
														"src": "1079:18:36",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														},
														"typeName": {
															"id": 4648,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4647,
																"name": "Currency",
																"nameLocations": [
																	"1079:8:36"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2214,
																"src": "1079:8:36"
															},
															"referencedDeclaration": 2214,
															"src": "1079:8:36",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 4652,
														"mutability": "mutable",
														"name": "currency1",
														"nameLocation": "1108:9:36",
														"nodeType": "VariableDeclaration",
														"scope": 4683,
														"src": "1099:18:36",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														},
														"typeName": {
															"id": 4651,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4650,
																"name": "Currency",
																"nameLocations": [
																	"1099:8:36"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2214,
																"src": "1099:8:36"
															},
															"referencedDeclaration": 2214,
															"src": "1099:8:36",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4663,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														},
														"function": 2291,
														"id": 4655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4653,
															"name": "currencyIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4633,
															"src": "1133:10:36",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 4654,
															"name": "currencyOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4643,
															"src": "1146:11:36",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"src": "1133:24:36",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 4659,
																"name": "currencyOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4643,
																"src": "1189:11:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															},
															{
																"id": 4660,
																"name": "currencyIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4633,
																"src": "1202:10:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															}
														],
														"id": 4661,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1188:25:36",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_userDefinedValueType$_Currency_$2214_$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "tuple(Currency,Currency)"
														}
													},
													"id": 4662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1133:80:36",
													"trueExpression": {
														"components": [
															{
																"id": 4656,
																"name": "currencyIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4633,
																"src": "1161:10:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															},
															{
																"id": 4657,
																"name": "currencyOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4643,
																"src": "1173:11:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															}
														],
														"id": 4658,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1160:25:36",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_userDefinedValueType$_Currency_$2214_$_t_userDefinedValueType$_Currency_$2214_$",
															"typeString": "tuple(Currency,Currency)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_userDefinedValueType$_Currency_$2214_$_t_userDefinedValueType$_Currency_$2214_$",
														"typeString": "tuple(Currency,Currency)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1078:135:36"
											},
											{
												"expression": {
													"id": 4668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4664,
														"name": "zeroForOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4639,
														"src": "1224:10:36",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
															"typeString": "Currency"
														},
														"function": 2247,
														"id": 4667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4665,
															"name": "currencyIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4633,
															"src": "1237:10:36",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 4666,
															"name": "currency0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4649,
															"src": "1251:9:36",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																"typeString": "Currency"
															}
														},
														"src": "1237:23:36",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1224:36:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4669,
												"nodeType": "ExpressionStatement",
												"src": "1224:36:36"
											},
											{
												"expression": {
													"id": 4681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4670,
														"name": "poolKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4637,
														"src": "1270:7:36",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
															"typeString": "struct PoolKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4672,
																"name": "currency0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4649,
																"src": "1288:9:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															},
															{
																"id": 4673,
																"name": "currency1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4652,
																"src": "1299:9:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																}
															},
															{
																"expression": {
																	"id": 4674,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4630,
																	"src": "1310:6:36",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																		"typeString": "struct PathKey calldata"
																	}
																},
																"id": 4675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1317:3:36",
																"memberName": "fee",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4613,
																"src": "1310:10:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															},
															{
																"expression": {
																	"id": 4676,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4630,
																	"src": "1322:6:36",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																		"typeString": "struct PathKey calldata"
																	}
																},
																"id": 4677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1329:11:36",
																"memberName": "tickSpacing",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4615,
																"src": "1322:18:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"expression": {
																	"id": 4678,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4630,
																	"src": "1342:6:36",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
																		"typeString": "struct PathKey calldata"
																	}
																},
																"id": 4679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1349:5:36",
																"memberName": "hooks",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4618,
																"src": "1342:12:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IHooks_$331",
																	"typeString": "contract IHooks"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																},
																{
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
																	"typeString": "Currency"
																},
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																{
																	"typeIdentifier": "t_contract$_IHooks_$331",
																	"typeString": "contract IHooks"
																}
															],
															"id": 4671,
															"name": "PoolKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2560,
															"src": "1280:7:36",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PoolKey_$2560_storage_ptr_$",
																"typeString": "type(struct PoolKey storage pointer)"
															}
														},
														"id": 4680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1280:75:36",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
															"typeString": "struct PoolKey memory"
														}
													},
													"src": "1270:85:36",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
														"typeString": "struct PoolKey memory"
													}
												},
												"id": 4682,
												"nodeType": "ExpressionStatement",
												"src": "1270:85:36"
											}
										]
									},
									"documentation": {
										"id": 4627,
										"nodeType": "StructuredDocumentation",
										"src": "532:300:36",
										"text": "@notice Get the pool and swap direction for a given PathKey\n @param params the given PathKey\n @param currencyIn the input currency\n @return poolKey the pool key of the swap\n @return zeroForOne the direction of the swap, true if currency0 is being swapped for currency1"
									},
									"id": 4684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAndSwapDirection",
									"nameLocation": "846:23:36",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4630,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "887:6:36",
												"nodeType": "VariableDeclaration",
												"scope": 4684,
												"src": "870:23:36",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PathKey_$4621_calldata_ptr",
													"typeString": "struct PathKey"
												},
												"typeName": {
													"id": 4629,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4628,
														"name": "PathKey",
														"nameLocations": [
															"870:7:36"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4621,
														"src": "870:7:36"
													},
													"referencedDeclaration": 4621,
													"src": "870:7:36",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PathKey_$4621_storage_ptr",
														"typeString": "struct PathKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4633,
												"mutability": "mutable",
												"name": "currencyIn",
												"nameLocation": "904:10:36",
												"nodeType": "VariableDeclaration",
												"scope": 4684,
												"src": "895:19:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 4632,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4631,
														"name": "Currency",
														"nameLocations": [
															"895:8:36"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "895:8:36"
													},
													"referencedDeclaration": 2214,
													"src": "895:8:36",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$2214",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:46:36"
									},
									"returnParameters": {
										"id": 4640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4637,
												"mutability": "mutable",
												"name": "poolKey",
												"nameLocation": "978:7:36",
												"nodeType": "VariableDeclaration",
												"scope": 4684,
												"src": "963:22:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2560_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 4636,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4635,
														"name": "PoolKey",
														"nameLocations": [
															"963:7:36"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2560,
														"src": "963:7:36"
													},
													"referencedDeclaration": 2560,
													"src": "963:7:36",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2560_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4639,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "992:10:36",
												"nodeType": "VariableDeclaration",
												"scope": 4684,
												"src": "987:15:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4638,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "987:4:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:36"
									},
									"scope": 4685,
									"src": "837:525:36",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4686,
							"src": "503:861:36",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "31:1334:36"
				},
				"id": 36
			}
		}
	}
}